// ============================================================================
// –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –¢–†–ê–ù–°–ü–û–†–¢–û–ú
// –°–∏—Å—Ç–µ–º–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞: –ø–æ–∫—É–ø–∫–∞, –º–æ–¥—É–ª–∏, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –≤–µ–ª–æ—Å–∏–ø–µ–¥
// ============================================================================
//
// –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ:
// 
// 1. –ü–æ–∫—É–ø–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞:
//    - –û—Ç–∫—Ä–æ–π—Ç–µ –º–∞–≥–∞–∑–∏–Ω —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞: showTransportShop()
//    - –§–∏–ª—å—Ç—Ä—É–π—Ç–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (–≤–æ–∑–¥—É—à–Ω—ã–π, –Ω–∞–∑–µ–º–Ω—ã–π, –≤–æ–¥–Ω—ã–π)
//    - –ù–∞–∂–º–∏—Ç–µ "–ö—É–ø–∏—Ç—å" –Ω–∞ –Ω—É–∂–Ω–æ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ
//
// 2. –ü–æ–∫—É–ø–∫–∞ –º–æ–¥—É–ª–µ–π:
//    - –û—Ç–∫—Ä–æ–π—Ç–µ –º–∞–≥–∞–∑–∏–Ω –º–æ–¥—É–ª–µ–π: showTransportModulesShop()
//    - –ú–æ–¥—É–ª–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
//    - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –º–æ–¥—É–ª–∏ —á–µ—Ä–µ–∑ "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è–º–∏" –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ
//
// 3. –í–µ–ª–æ—Å–∏–ø–µ–¥ (—É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—É—â–Ω–æ—Å—Ç—å):
//    - –ö—É–ø–∏—Ç–µ "–°–ö–õ–ê–î–ù–û–ô –í–ï–õ–û–°–ò–ü–ï–î" –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏
//    - –í –±–ª–æ–∫–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ "–ö–∞—Ç–∏—Ç—å" (—Ñ—É–Ω–∫—Ü–∏—è –∏–∑ gear.js)
//    - –í–µ–ª–æ—Å–∏–ø–µ–¥ –ø–æ—è–≤–∏—Ç—Å—è –≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ
//    - –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ = (–ê—Ç–ª–µ—Ç–∏–∫–∞ + –¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ) / 2 + 5
//    - –ù–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥ –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ "–ö—É—Ä—Å–æ–≤–æ–µ –≤–æ–æ—Ä—É–∂–µ–Ω–∏–µ"
//
// 4. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è–º–∏:
//    - –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üîß –ú–æ–¥—É–ª–∏" –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
//    - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ –º–æ–¥—É–ª–∏ –∏–∑ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è
//    - –ú–æ–¥—É–ª–∏ —Å –æ—Ä—É–∂–∏–µ–º –∏–º–µ—é—Ç –∫–Ω–æ–ø–∫—É "üî´ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
//    - –ê–∫—Ç–∏–≤–Ω–∞—è –∑–∞—â–∏—Ç–∞ –∏–º–µ–µ—Ç –∫–Ω–æ–ø–∫—É "‚ö° –ó–∞—Ä—è–¥—ã"
//
// 5. –°–∏—Å—Ç–µ–º–∞ –û–°–ü/–û–°:
//    - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ +1/+10/-1/-10 –¥–ª—è –û–°–ü
//    - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ +1/+5/-1/-5 –¥–ª—è –û–°
//
// 6. –ë–∞–≥–∞–∂–Ω–∏–∫ –∏ –∫–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–∞:
//    - –ö–Ω–æ–ø–∫–∞ "üéí –ë–∞–≥–∞–∂–Ω–∏–∫" - –æ–±—ã—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (100 –Ω–∞–≥—Ä—É–∑–∫–∏)
//    - –ö–Ω–æ–ø–∫–∞ "üï≥Ô∏è –ö–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–∞" - —Å–∫—Ä—ã—Ç–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (—Ç—Ä–µ–±—É–µ—Ç –º–æ–¥—É–ª—å)
//
// 7. –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ö–û–ù–°–û–õ–ò (–æ—Ç–ª–∞–¥–∫–∞):
//    - addTestVehicle() - –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
//    - forceUpdateTransportUI() - –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
//    - saveTransportState() - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ localStorage
//    - loadTransportState() - –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ localStorage
//
// ============================================================================

// transport.js loading...

// ============================================================================
// –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï –ò –ö–û–ù–°–¢–ê–ù–¢–´
// ============================================================================

// –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
const TRANSPORT_CONTAINER_ID = 'transportContainer';
const TRANSPORT_SHOP_MODAL_ID = 'transportShopModal';
const TRANSPORT_MODULES_MODAL_ID = 'transportModulesModal';

// –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
const TRANSPORT_CATEGORIES = {
    AIR: 'air',
    GROUND: 'ground', 
    WATER: 'water'
};

// –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–æ–¥—É–ª–µ–π
const MODULE_CATEGORIES = {
    GROUND: 'ground',
    AIR: 'air',
    WATER: 'water',
    BICYCLE: '–í–µ–ª–æ—Å–∏–ø–µ–¥'
};

// –¢–∏–ø—ã –º–æ–¥—É–ª–µ–π
const MODULE_TYPES = {
    CHASSIS: 'chassis',
    ARMOR: 'armor',
    WEAPON: 'weapon',
    ENGINE: 'engine',
    UTILITY: 'utility'
};

// –°–æ—Å—Ç–æ—è–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
const VEHICLE_STATES = {
    WORKING: 'working',
    DAMAGED: 'damaged',
    DESTROYED: 'destroyed'
};

// –¶–µ–Ω—ã —Ä–µ–º–æ–Ω—Ç–∞ (–ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞)
const REPAIR_COSTS = {
    FULL_REPAIR: 0.1, // 10% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    PARTIAL_REPAIR: 0.05 // 5% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏
};

// ============================================================================
// –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò
// ============================================================================

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function initializeTransportSystem() {
    
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ
    if (typeof VEHICLES_LIBRARY === 'undefined') {
        console.error('‚ùå VEHICLES_LIBRARY –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ data.js');
        return;
    }
    
    if (typeof VEHICLE_MODULES_LIBRARY === 'undefined') {
        console.error('‚ùå VEHICLE_MODULES_LIBRARY –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ data.js');
        return;
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!state.property.vehicles) {
        state.property.vehicles = [];
        
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    state.property.vehicles.forEach(vehicle => {
        initializeVehicleFields(vehicle);
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞
    initializeBicycleSystem();
    
    
}

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ª–µ–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function initializeVehicleFields(vehicle) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –û–°–ü
    if (!vehicle.hp) {
        vehicle.hp = 50; // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    }
    if (vehicle.currentHp === undefined) {
        vehicle.currentHp = vehicle.hp;
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –û–°
    if (vehicle.os === undefined) {
        vehicle.os = 0;
    }
    if (vehicle.currentOs === undefined) {
        vehicle.currentOs = vehicle.os;
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
    if (!vehicle.modules) {
        vehicle.modules = [];
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–≥–∞–∂–Ω–∏–∫
    if (!vehicle.trunk) {
        vehicle.trunk = {
            capacity: 100,
            items: []
        };
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ
    if (!vehicle.smugglerCompartment) {
        vehicle.smugglerCompartment = {
            capacity: 100,
            items: []
        };
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
    if (!vehicle.baseHp) {
        vehicle.baseHp = vehicle.hp;
    }
    if (!vehicle.baseSpeed) {
        vehicle.baseSpeed = vehicle.mechanicalSpeed || vehicle.speed || 0;
    }
    if (!vehicle.baseSeats) {
        vehicle.baseSeats = vehicle.seats || 1;
    }
}

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞
function initializeBicycleSystem() {
    
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–µ–ª–æ—Å–∏–ø–µ–¥ –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏
    const bicycle = state.gear?.find(item => item.name === '–°–ö–õ–ê–î–ù–û–ô –í–ï–õ–û–°–ò–ü–ï–î');
    if (bicycle) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞
        bicycle.description = '–°–∫–ª–∞–¥–Ω–æ–π –≤–µ–ª–æ—Å–∏–ø–µ–¥, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ —Ä–∞–∑–ª–æ–∂–∏—Ç—å –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –∫–∞–∫ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç. –í–º–µ—Å—Ç–æ –ø–µ–¥–∞–ª–µ–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è "–º–∞–≥–Ω–∏—Ç–Ω—ã–π –∑–∞—Ö–≤–∞—Ç" –ø–æ–¥–æ—à–≤ –æ–±—É–≤–∏. –ë–æ—Ç–∏–Ω–∫–∏ —É–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –º–∞–≥–Ω–∏—Ç–Ω—ã–º –ø–æ–ª–µ–º –∫–∞—Ç—É—à–∫–∏ —É —Ü–µ–ø–∏ –ø—Ä–∏–≤–æ–¥–∞, –∏ —É –≤–æ–¥–∏—Ç–µ–ª—è —Å–æ–∑–¥–∞—ë—Ç—Å—è –æ—â—É—â–µ–Ω–∏–µ, —á—Ç–æ –Ω–æ–≥–∏ —Å—Ç–æ—è—Ç –Ω–∞ –ø–µ–¥–∞–ª—è—Ö. –°–¥–µ–ª–∞–Ω–æ —ç—Ç–æ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –Ω–∞ –ø–µ–¥–∞–ª—è—Ö. –í–µ–ª–æ—Å–∏–ø–µ–¥ –æ–¥–Ω–æ–º–µ—Å—Ç–Ω—ã–π –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω, –Ω–æ –Ω–∞ –Ω–µ–≥–æ –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å–æ–≤–æ–µ –≤–æ–æ—Ä—É–∂–µ–Ω–∏–µ.';
        
        // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if (!bicycle.id) {
            bicycle.id = 'bicycle_' + Date.now();
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–ª–∞–≥, —á—Ç–æ —ç—Ç–æ –≤–µ–ª–æ—Å–∏–ø–µ–¥
        bicycle.isBicycle = true;
        
        
    }
    
    
}

// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ –≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
function addBicycleToTransport(bicycleId) {
    
    
    // –ù–∞—Ö–æ–¥–∏–º –≤–µ–ª–æ—Å–∏–ø–µ–¥ –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏
    const bicycle = state.gear?.find(item => item.id === bicycleId && item.name === '–°–ö–õ–ê–î–ù–û–ô –í–ï–õ–û–°–ò–ü–ï–î');
    if (!bicycle) {
        showToast('–í–µ–ª–æ—Å–∏–ø–µ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏!', 2000);
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ –≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ
    const existingBicycle = state.property.vehicles?.find(v => v.linkedGearId === bicycleId);
    if (existingBicycle) {
        showToast('–≠—Ç–æ—Ç –≤–µ–ª–æ—Å–∏–ø–µ–¥ —É–∂–µ –≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ!', 2000);
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞
    const bicycleVehicle = {
        id: 'vehicle_bicycle_' + Date.now(),
        linkedGearId: bicycleId, // –°–≤—è–∑—å —Å–æ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ–º
        name: '–°–ö–õ–ê–î–ù–û–ô –í–ï–õ–û–°–ò–ü–ï–î',
        description: bicycle.description,
        category: 'ground',
        hp: 10,
        currentHp: 10,
        os: 0,
        currentOs: 0,
        seats: 1,
        mechanicalSpeed: calculateBicycleSpeed(),
        narrativeSpeed: `${calculateBicycleSpeed() * 8} –∫–º/—á`,
        price: bicycle.price || 500,
        modules: [],
        trunk: {
            capacity: 20, // –£ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ –º–∞–ª–µ–Ω—å–∫–∏–π –±–∞–≥–∞–∂–Ω–∏–∫
            items: []
        },
        baseHp: 10,
        baseSpeed: 0, // –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ –≤—Å–µ–≥–¥–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è
        baseSeats: 1,
        isBicycle: true
    };
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—è
    initializeVehicleFields(bicycleVehicle);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    if (!state.property.vehicles) {
        state.property.vehicles = [];
    }
    state.property.vehicles.push(bicycleVehicle);
    
    // –ù–ï —É–¥–∞–ª—è–µ–º –≤–µ–ª–æ—Å–∏–ø–µ–¥ –∏–∑ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è - –æ–Ω –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–∞–º
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast('–í–µ–ª–æ—Å–∏–ø–µ–¥ —Ä–∞–∑–ª–æ–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!', 3000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    renderTransport();
    if (typeof renderGear === 'function') renderGear();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    scheduleSave();
}

// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ –∏–∑ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ (—Å–ª–æ–∂–∏—Ç—å –æ–±—Ä–∞—Ç–Ω–æ)
function removeBicycleFromTransport(vehicleId) {
    
    
    // –ù–∞—Ö–æ–¥–∏–º –≤–µ–ª–æ—Å–∏–ø–µ–¥
    const vehicleIndex = state.property.vehicles?.findIndex(v => v.id === vehicleId);
    if (vehicleIndex === -1 || vehicleIndex === undefined) {
        showToast('–í–µ–ª–æ—Å–∏–ø–µ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    const vehicle = state.property.vehicles[vehicleIndex];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≤–µ–ª–æ—Å–∏–ø–µ–¥
    if (!vehicle.isBicycle && !vehicle.linkedGearId) {
        showToast('–≠—Ç–æ –Ω–µ –≤–µ–ª–æ—Å–∏–ø–µ–¥!', 2000);
        return;
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–¥—É–ª–∏ –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
    if (vehicle.modules && vehicle.modules.length > 0) {
        vehicle.modules.forEach(module => {
            if (!state.gear) state.gear = [];
            state.gear.push(module);
        });
        showToast('–ú–æ–¥—É–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ', 2000);
    }
    
    // –£–¥–∞–ª—è–µ–º –≤–µ–ª–æ—Å–∏–ø–µ–¥ –∏–∑ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    state.property.vehicles.splice(vehicleIndex, 1);
    
    // –í–µ–ª–æ—Å–∏–ø–µ–¥ –æ—Å—Ç–∞–µ—Ç—Å—è –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast('–í–µ–ª–æ—Å–∏–ø–µ–¥ —Å–ª–æ–∂–µ–Ω –∏ —É–±—Ä–∞–Ω –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ', 2000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    renderTransport();
    if (typeof renderGear === 'function') renderGear();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    scheduleSave();
}

// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞
function calculateBicycleSpeed() {
    const athletics = state.attributes?.–ê—Ç–ª–µ—Ç–∏–∫–∞ || 0;
    const physique = state.attributes?.–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ || 0;
    return Math.floor((athletics + physique) / 2) + 5; // –ë–∞–∑–æ–≤–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å 5 + —Å—Ä–µ–¥–Ω–µ–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Å–ø–∏—Å–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function renderTransport() {
    
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º
    initializeTransportSystem();
    
    const container = document.getElementById(TRANSPORT_CONTAINER_ID);
    if (!container) {
        console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }
    
    if (!state.property.vehicles || state.property.vehicles.length === 0) {
        container.innerHTML = `
            <div style="text-align: center; padding: 2rem; color: ${getThemeColors().muted};">
                <p style="margin-bottom: 1rem;">üöó –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω</p>
                <button onclick="showTransportShop()" class="pill-button primary-button" style="font-size: 0.9rem; padding: 0.5rem 1rem;">
                    –ö—É–ø–∏—Ç—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
                </button>
            </div>
        `;
        return;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    const headerButtons = `
        <div style="display: flex; gap: 0.5rem; justify-content: center; margin-bottom: 1rem;">
            <button onclick="showTransportShop()" class="pill-button primary-button" style="font-size: 0.8rem; padding: 0.3rem 0.6rem;">
                –ö—É–ø–∏—Ç—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
            </button>
            <button onclick="showTransportModulesShop()" class="pill-button success-button" style="font-size: 0.8rem; padding: 0.3rem 0.6rem;">
                –ö—É–ø–∏—Ç—å –º–æ–¥—É–ª–∏
            </button>
        </div>
    `;
    
    // –†–µ–Ω–¥–µ—Ä–∏–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    const transportCards = state.property.vehicles.map((vehicle, index) => 
        renderTransportCard(vehicle, index)
    ).join('');
    
    container.innerHTML = headerButtons + transportCards;
    
    
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function toggleTransportCollapse(vehicleId) {
    const contentElement = document.getElementById(`transport-content-${vehicleId}`);
    if (!contentElement) return;
    
    const isCurrentlyCollapsed = contentElement.style.display === 'none';
    const newState = !isCurrentlyCollapsed;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ localStorage
    localStorage.setItem(`transport-${vehicleId}-collapsed`, newState.toString());
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    contentElement.style.display = newState ? 'none' : 'block';
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function renderTransportCard(vehicle, index) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–º
    const isBicycle = vehicle.name === '–°–ö–õ–ê–î–ù–û–ô –í–ï–õ–û–°–ò–ü–ï–î' || vehicle.linkedGearId;
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å —É—á–µ—Ç–æ–º –º–æ–¥—É–ª–µ–π
    const currentStats = calculateVehicleStats(vehicle);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –∏–∑ localStorage
    const isCollapsed = localStorage.getItem(`transport-${vehicle.id}-collapsed`) === 'true';
    
    return `
        <div class="vehicle-card shop-item">
            <div class="shop-item-header" style="display: flex; justify-content: space-between; align-items: center;">
                <div style="display: flex; align-items: center; gap: 0.5rem;">
                    <h4 class="shop-item-title" style="cursor: pointer;" onclick="toggleTransportCollapse('${vehicle.id}')">${vehicle.name}</h4>
                    ${isBicycle ? '<span style="background: rgba(255, 193, 7, 0.2); color: #ffc107; padding: 0.2rem 0.5rem; border-radius: 4px; font-size: 0.7rem; font-weight: bold;">üö≤ –í–ï–õ–û–°–ò–ü–ï–î</span>' : ''}
                </div>
                <div style="display: flex; gap: 0.5rem; align-items: center;">
                    <button onclick="manageVehicleModules('${vehicle.id}')" style="background: none; border: none; cursor: pointer; padding: 0.5rem; border-radius: 4px; transition: background 0.2s;" title="–ú–æ–¥—É–ª–∏" onmouseover="this.style.background='rgba(182, 103, 255, 0.1)'" onmouseout="this.style.background='none'">
                        <img src="https://static.tildacdn.com/tild6535-3132-4233-b731-356365363437/wrench.png" alt="–ú–æ–¥—É–ª–∏" style="width: 20px; height: 20px;">
                    </button>
                    <button onclick="manageVehicleTrunk('${vehicle.id}')" style="background: none; border: none; cursor: pointer; padding: 0.5rem; border-radius: 4px; transition: background 0.2s;" title="–ë–∞–≥–∞–∂–Ω–∏–∫" onmouseover="this.style.background='rgba(125, 244, 198, 0.1)'" onmouseout="this.style.background='none'">
                        <img src="https://static.tildacdn.com/tild6236-6432-4830-a337-666531333863/trunk.png" alt="–ë–∞–≥–∞–∂–Ω–∏–∫" style="width: 20px; height: 20px;">
                    </button>
                    ${vehicle.modules?.some(m => m.name === '–ö–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ') ? `
                    <button onclick="manageSmugglerCompartment('${vehicle.id}')" style="background: none; border: none; cursor: pointer; padding: 0.5rem; border-radius: 4px; transition: background 0.2s;" title="–ö–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–∞" onmouseover="this.style.background='rgba(255, 193, 7, 0.1)'" onmouseout="this.style.background='none'">
                        <span style="font-size: 20px;">üï≥Ô∏è</span>
                    </button>
                    ` : ''}
                </div>
            </div>
            
            <div id="transport-content-${vehicle.id}" style="display: ${isCollapsed ? 'none' : 'block'};">
                <p class="shop-item-description">
                    ${vehicle.description}
                </p>
                
                <div class="shop-item-stats">
                    <div class="shop-stat">–ú–µ—Å—Ç: ${currentStats.seats}</div>
                    ${!isBicycle ? `<div class="shop-stat">–°–∫–æ—Ä–æ—Å—Ç—å: ${currentStats.speed}</div>` : ''}
                    ${!vehicle.linkedGearId ? `<div class="shop-stat">–û–°–ü: ${vehicle.currentHp}/${currentStats.maxHp}</div>` : ''}
                    ${currentStats.os > 0 ? `<div class="shop-stat">–û–°: ${vehicle.currentOs || 0}/${currentStats.os}</div>` : ''}
                </div>
                
                <!-- –ú–æ–¥—É–ª–∏ -->
                ${vehicle.modules && vehicle.modules.length > 0 ? `
                <div style="margin-bottom: 1rem;">
                    <div style="font-size: 0.8rem; color: ${getThemeColors().muted}; margin-bottom: 0.5rem;">üîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏:</div>
                    <div style="display: flex; flex-wrap: wrap; gap: 0.3rem;">
                        ${vehicle.modules.map(module => {
                            let extraInfo = '';
                            if (module.charges !== undefined) {
                                extraInfo = ` (${module.charges}/${module.maxCharges})`;
                            } else if (module.weapons) {
                                extraInfo = ` (${module.weapons.length}/${module.maxWeapons || 1})`;
                            }
                            return `
                                <span style="background: ${getThemeColors().accentLight}; color: ${getThemeColors().accent}; padding: 0.2rem 0.5rem; border-radius: 4px; font-size: 0.7rem;">
                                    ${module.name}${extraInfo}
                                </span>
                            `;
                        }).join('')}
                    </div>
                    <!-- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ä—É–∂–∏—è –≤ –º–æ–¥—É–ª—è—Ö –≤–æ–æ—Ä—É–∂–µ–Ω–∏—è -->
                    ${vehicle.modules.some(m => m.weapons && m.weapons.length > 0) ? `
                        <div style="margin-top: 0.5rem;">
                            ${vehicle.modules.filter(m => m.weapons && m.weapons.length > 0).map(module => `
                                <div style="margin-bottom: 0.5rem;">
                                    <div style="color: ${getThemeColors().accent}; font-size: 0.7rem; font-weight: 600; margin-bottom: 0.25rem;">üî´ ${module.name}:</div>
                                    ${module.weapons.map(weapon => renderVehicleModuleWeapon(weapon, vehicle.id, vehicle.modules.indexOf(module))).join('')}
                                </div>
                            `).join('')}
                        </div>
                    ` : ''}
                </div>
                ` : ''}
            </div>
            
            <!-- –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã –û–°–ü –∏ –û–° (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞) -->
            ${!vehicle.linkedGearId ? `
            <div style="margin-bottom: ${isCollapsed ? '0' : '1rem'}; padding-bottom: ${isCollapsed ? '0' : '0.5rem'};">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.25rem;">
                    <span style="font-size: 0.8rem; color: var(--text-secondary);">–û–°–ü: ${vehicle.currentHp}/${currentStats.maxHp}</span>
                    <div style="display: flex; gap: 0.25rem;">
                        <button onclick="adjustVehicleHP('${vehicle.id}', -10)" class="btn-small danger">-10</button>
                        <button onclick="adjustVehicleHP('${vehicle.id}', -1)" class="btn-small danger">-1</button>
                        <button onclick="adjustVehicleHP('${vehicle.id}', 1)" class="btn-small success">+1</button>
                        <button onclick="adjustVehicleHP('${vehicle.id}', 10)" class="btn-small success">+10</button>
                    </div>
                </div>
                <div style="background: rgba(220, 53, 69, 0.2); border-radius: 10px; height: 8px; overflow: hidden;">
                    <div style="
                        background: linear-gradient(90deg, #dc3545, #ff6b7a);
                        height: 100%;
                        width: ${Math.max(0, Math.min((vehicle.currentHp / currentStats.maxHp) * 100, 100))}%;
                        transition: width 0.3s ease;
                    "></div>
                </div>
            ` : ''}
                
                ${currentStats.os > 0 ? `
                <div style="display: flex; justify-content: space-between; align-items: center; margin: ${isCollapsed ? '0.25rem 0 0.25rem 0' : '0.5rem 0 0.25rem 0'};">
                    <span style="font-size: 0.8rem; color: var(--text-secondary);">–û–°: ${vehicle.currentOs || 0}/${currentStats.os}</span>
                    <div style="display: flex; gap: 0.25rem;">
                        <button onclick="adjustVehicleOS('${vehicle.id}', -5)" class="btn-small danger">-5</button>
                        <button onclick="adjustVehicleOS('${vehicle.id}', -1)" class="btn-small danger">-1</button>
                        <button onclick="adjustVehicleOS('${vehicle.id}', 1)" class="btn-small success">+1</button>
                        <button onclick="adjustVehicleOS('${vehicle.id}', 5)" class="btn-small success">+5</button>
                    </div>
                </div>
                <div style="background: rgba(108, 117, 125, 0.2); border-radius: 10px; height: 8px; overflow: hidden;">
                    <div style="
                        background: linear-gradient(90deg, #6c757d, #adb5bd);
                        height: 100%;
                        width: ${Math.max(0, Math.min(((vehicle.currentOs || 0) / currentStats.os) * 100, 100))}%;
                        transition: width 0.3s ease;
                    "></div>
                </div>
                ` : ''}
            </div>
        </div>
    `;
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function getCategoryIcon(category) {
    const icons = {
        'air': '‚úàÔ∏è',
        'ground': 'üöó', 
        'water': 'üö¢'
    };
    return icons[category] || 'üöó';
}

// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ —Å —É—á–µ—Ç–æ–º –º–æ–¥—É–ª–µ–π
function calculateVehicleStats(vehicle) {
    // –ë–∞–∑–æ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
    let seats = vehicle.baseSeats || vehicle.seats || 1;
    let speed = vehicle.baseSpeed || vehicle.mechanicalSpeed || vehicle.speed || 0;
    let maxHp = vehicle.hp || vehicle.baseHp || 0;
    let os = vehicle.os || vehicle.baseOs || 0;
    
    // –î–ª—è –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤
    if (vehicle.name === '–°–ö–õ–ê–î–ù–û–ô –í–ï–õ–û–°–ò–ü–ï–î' || vehicle.linkedGearId) {
        const athletics = state.attributes?.–ê—Ç–ª–µ—Ç–∏–∫–∞ || 0;
        const physique = state.attributes?.–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ || 0;
        speed = Math.floor((athletics + physique) / 2) + 5; // –ë–∞–∑–æ–≤–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å + —Å—Ä–µ–¥–Ω–µ–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤
    }
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –º–æ–¥—É–ª–µ–π
    if (vehicle.modules) {
        let hasReinforcedChassis = false;
        let hasLightChassis = false;
        let hasBodyArmor = false;
        let hasBodyReinforcement = false;
        let engineStage = 0; // 0 = –Ω–µ—Ç, 1 = —Å—Ç–∞–¥–∏—è 1, 2 = —Å—Ç–∞–¥–∏—è 2, 3 = —Å—Ç–∞–¥–∏—è 3
        
        vehicle.modules.forEach(module => {
            switch (module.name) {
                case '–£–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —à–∞—Å—Å–∏':
                    maxHp += 20;
                    hasReinforcedChassis = true;
                    break;
                    
                case '–û–±–ª–µ–≥—á—ë–Ω–Ω–æ–µ —à–∞—Å—Å–∏':
                    speed += 10; // +10 –°–ö–û (50 –∫–º/—á)
                    hasLightChassis = true;
                    break;
                    
                case '–ë—Ä–æ–Ω–µ—Å—Ç—ë–∫–ª–∞':
                    maxHp += 20;
                    break;
                    
                case '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞':
                    os += 18;
                    speed -= 10; // -10 –°–ö–û (80 –∫–º/—á)
                    hasBodyArmor = true;
                    break;
                    
                case '–£—Å–∏–ª–µ–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞':
                    os += 10;
                    hasBodyReinforcement = true;
                    break;
                    
                case '–§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–≤–∏–≥–∞—Ç–µ–ª—å (–°—Ç–∞–¥–∏—è 1)':
                    if (engineStage === 0) {
                        speed += 5; // +5 –°–ö–û (40 –∫–º/—á)
                        engineStage = 1;
                    }
                    break;
                    
                case '–§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–≤–∏–≥–∞—Ç–µ–ª—å (–°—Ç–∞–¥–∏—è 2)':
                    if (engineStage <= 1) {
                        speed += 10; // +10 –°–ö–û (80 –∫–º/—á) –æ—Ç –∑–∞–≤–æ–¥—Å–∫–∏—Ö
                        engineStage = 2;
                    }
                    break;
                    
                case '–§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–≤–∏–≥–∞—Ç–µ–ª—å (–°—Ç–∞–¥–∏—è 3)':
                    if (engineStage <= 2) {
                        speed += 13; // +13 –°–ö–û (102 –∫–º/—á) –æ—Ç –∑–∞–≤–æ–¥—Å–∫–∏—Ö
                        engineStage = 3;
                    }
                    break;
                    
                case '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–¥–µ–Ω—å—è':
                    seats += 2;
                    break;
            }
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –º–æ–¥—É–ª–µ–π
        if (hasBodyArmor && hasBodyReinforcement) {
            console.warn('–ö–æ–Ω—Ñ–ª–∏–∫—Ç –º–æ–¥—É–ª–µ–π: –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞ –∏ –£—Å–∏–ª–µ–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ');
        }
        
        if (hasReinforcedChassis && hasLightChassis) {
            console.warn('–ö–æ–Ω—Ñ–ª–∏–∫—Ç –º–æ–¥—É–ª–µ–π: –£–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —à–∞—Å—Å–∏ –∏ –û–±–ª–µ–≥—á—ë–Ω–Ω–æ–µ —à–∞—Å—Å–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ');
        }
    }
    
    return {
        seats: Math.max(1, seats),
        speed: Math.max(0, speed),
        maxHp: Math.max(1, maxHp),
        os: Math.max(0, os)
    };
}

// ============================================================================
// –ú–ê–ì–ê–ó–ò–ù –¢–†–ê–ù–°–ü–û–†–¢–ê
// ============================================================================

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –º–∞–≥–∞–∑–∏–Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function showTransportShop() {
    
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    modal.innerHTML = `
        <div class="modal-content" style="max-width: 90vw; max-height: 90vh; overflow-y: auto;">
            <div class="modal-header">
                <h3 style="color: ${getThemeColors().accent}; margin: 0; display: flex; align-items: center; gap: 0.5rem;"><img src="https://static.tildacdn.com/tild3130-6637-4132-a334-663633373435/car.png" alt="üöó" style="width: 24px; height: 24px;"> –ú–∞–≥–∞–∑–∏–Ω —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞</h3>
                <button onclick="closeTransportShop()" style="background: none; border: none; color: ${getThemeColors().muted}; font-size: 1.5rem; cursor: pointer;">&times;</button>
            </div>
            
            <div class="modal-body" style="padding: 1rem;">
                <!-- –§–∏–ª—å—Ç—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π -->
                <div style="display: flex; gap: 0.5rem; margin-bottom: 1rem; flex-wrap: wrap;">
                    <button onclick="filterTransportCategory('ground')" class="pill-button primary-button category-filter active" data-category="ground">
                        –ù–∞–∑–µ–º–Ω—ã–π
                    </button>
                    <button onclick="filterTransportCategory('air')" class="pill-button primary-button category-filter" data-category="air">
                        –í–æ–∑–¥—É—à–Ω—ã–π
                    </button>
                    <button onclick="filterTransportCategory('water')" class="pill-button primary-button category-filter" data-category="water">
                        –í–æ–¥–Ω—ã–π
                    </button>
                </div>
                
                <!-- –°–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ -->
                <div id="transportShopList" class="shop-items-grid">
                    ${renderTransportShopItems()}
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
    const style = document.createElement('style');
    style.textContent = `
        .category-filter.active {
            background: var(--accent) !important;
            color: white !important;
        }
    `;
    document.head.appendChild(style);
    
    
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
function renderTransportShopItems(category = 'ground') {
    let vehicles = [];
    
    // –°–æ–±–∏—Ä–∞–µ–º –≤–µ—Å—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
    Object.values(VEHICLES_LIBRARY).forEach(categoryVehicles => {
        vehicles = vehicles.concat(categoryVehicles);
    });
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if (category !== 'all') {
        vehicles = vehicles.filter(vehicle => vehicle.category === category);
    }
    
    return vehicles.map(vehicle => renderTransportShopItem(vehicle)).join('');
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
function renderTransportShopItem(vehicle) {
    const price = typeof vehicle.price === 'string' ? parseInt(vehicle.price.split('-')[0]) : vehicle.price;
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–∏–¥–∫—É –æ—Ç "–î—Ä—É–≥–∞ —Å–µ–º—å–∏"
    const familyFriendLevel = getProfessionalSkillLevel('–î—Ä—É–≥ —Å–µ–º—å–∏');
    const familyFriendDiscount = familyFriendLevel * 10;
    const totalDiscount = Math.min(familyFriendDiscount / 100, 1.0);
    const finalPrice = Math.floor(price * (1 - totalDiscount));
    
    const canAfford = state.money >= finalPrice;
    const isOwned = state.property.vehicles?.some(v => v.name === vehicle.name);
    const isBicycle = vehicle.name === '–°–ö–õ–ê–î–ù–û–ô –í–ï–õ–û–°–ò–ü–ï–î' || vehicle.linkedGearId;
    
    return `
        <div class="shop-item">
            <div class="shop-item-header">
                <h4 class="shop-item-title">${vehicle.name}</h4>
            </div>
            
            <p class="shop-item-description">
                ${vehicle.description}
            </p>
            
            <div class="shop-item-stats">
                <div class="shop-stat">–ú–µ—Å—Ç: ${vehicle.seats || 1}</div>
                ${!isBicycle ? `<div class="shop-stat">–°–∫–æ—Ä–æ—Å—Ç—å: ${vehicle.mechanicalSpeed || vehicle.speed || 0}</div>` : ''}
                <div class="shop-stat">–û–°–ü: ${vehicle.hp || 50}</div>
                ${vehicle.os ? `<div class="shop-stat">–û–°: ${vehicle.os}</div>` : ''}
            </div>
            
            <div class="shop-item-price">
                ${totalDiscount > 0 && finalPrice < price ? 
                    `<span style="text-decoration: line-through; color: var(--muted);">${price.toLocaleString()}</span> <span style="color: var(--success); font-weight: 600;">${finalPrice.toLocaleString()}</span> <span style="color: var(--success); font-size: 0.8rem;">(-${Math.round(totalDiscount * 100)}%)</span> ‚Ç¨` :
                    `${price.toLocaleString()} ‚Ç¨`}
            </div>
            
            ${isOwned ? `
                <button class="shop-item-available-btn">
                    –í –Ω–∞–ª–∏—á–∏–∏
                </button>
            ` : `
                <button 
                    class="shop-item-buy-btn"
                    onclick="buyTransport('${vehicle.name}', ${finalPrice})"
                    ${!canAfford ? 'disabled' : ''}
                >
                    –ö—É–ø–∏—Ç—å
                </button>
            `}
        </div>
    `;
}

// –§—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function filterTransportCategory(category) {
    
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
    document.querySelectorAll('.category-filter').forEach(btn => {
        btn.classList.remove('active');
    });
    document.querySelector(`[data-category="${category}"]`).classList.add('active');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
    const shopList = document.getElementById('transportShopList');
    if (shopList) {
        shopList.innerHTML = renderTransportShopItems(category);
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function closeTransportShop() {
    const modal = document.querySelector('.modal-overlay');
    if (modal) {
        modal.remove();
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function buyTransport(vehicleName, price) {
    
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –¥–µ–Ω–µ–≥
    if (state.money < price) {
        showToast('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!', 2000);
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    const existingVehicle = state.property.vehicles?.find(v => v.name === vehicleName);
    if (existingVehicle) {
        showToast('–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —ç—Ç–æ—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç!', 2000);
        return;
    }
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ
    let vehicleData = null;
    Object.values(VEHICLES_LIBRARY).forEach(categoryVehicles => {
        const found = categoryVehicles.find(v => v.name === vehicleName);
        if (found) vehicleData = found;
    });
    
    if (!vehicleData) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–∞—Ç–∞–ª–æ–≥–µ!', 2000);
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const newVehicle = {
        id: generateVehicleId(),
        name: vehicleData.name,
        description: vehicleData.description,
        category: vehicleData.category,
        hp: vehicleData.hp || 50,
        currentHp: vehicleData.hp || 50,
        os: vehicleData.os || 0,
        currentOs: vehicleData.os || 0,
        seats: vehicleData.seats || 1,
        mechanicalSpeed: vehicleData.mechanicalSpeed || vehicleData.speed || 0,
        narrativeSpeed: vehicleData.narrativeSpeed || '',
        price: price,
        catalogPrice: vehicleData.price || price, // –¶–µ–Ω–∞ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É
        purchasePrice: price, // –¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏ (—Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–æ–∫)
        itemType: 'purchased', // –¢–∏–ø –ø—Ä–µ–¥–º–µ—Ç–∞
        modules: [],
        trunk: {
            capacity: 100,
            items: []
        },
        smugglerCompartment: {
            capacity: 100,
            items: []
        },
        baseHp: vehicleData.hp || 50,
        baseSpeed: vehicleData.mechanicalSpeed || vehicleData.speed || 0,
        baseSeats: vehicleData.seats || 1
    };
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—è
    initializeVehicleFields(newVehicle);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –º–∞—Å—Å–∏–≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    if (!state.property.vehicles) {
        state.property.vehicles = [];
    }
    state.property.vehicles.push(newVehicle);
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
    state.money -= price;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast(`–ö—É–ø–ª–µ–Ω ${vehicleName} –∑–∞ ${price.toLocaleString()} —É–µ`, 3000);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ª–æ–≥
    addToRollLog('purchase', {
        item: vehicleName,
        price: price,
        category: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç'
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    updateMoneyDisplay();
    renderTransport();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞–≥–∞–∑–∏–Ω
    const shopList = document.getElementById('transportShopList');
    if (shopList) {
        shopList.innerHTML = renderTransportShopItems();
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    scheduleSave();
}

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function generateVehicleId() {
    return 'vehicle_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–¥–∞–∂–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function sellTransport(vehicleId) {
    
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const vehicleIndex = state.property.vehicles?.findIndex(v => v.id === vehicleId);
    if (vehicleIndex === -1 || vehicleIndex === undefined) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    const vehicle = state.property.vehicles[vehicleIndex];
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ü–µ–Ω—É –ø—Ä–æ–¥–∞–∂–∏ (70% –æ—Ç –ø–æ–∫—É–ø–Ω–æ–π —Ü–µ–Ω—ã)
    const sellPrice = Math.floor((vehicle.price || 10000) * 0.7);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    const confirmMessage = `–ü—Ä–æ–¥–∞—Ç—å "${vehicle.name}" –∑–∞ ${sellPrice.toLocaleString()} —É–µ?\n\n–í—Å–µ –º–æ–¥—É–ª–∏ –∏ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –±–∞–≥–∞–∂–Ω–∏–∫–µ –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã!`;
    
    if (!confirm(confirmMessage)) {
        return;
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–¥—É–ª–∏ –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å)
    if (vehicle.modules && vehicle.modules.length > 0) {
        vehicle.modules.forEach(module => {
            if (!state.gear) state.gear = [];
            state.gear.push(module);
        });
        showToast(`–ú–æ–¥—É–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ`, 2000);
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞ –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
    if (vehicle.trunk && vehicle.trunk.items && vehicle.trunk.items.length > 0) {
        vehicle.trunk.items.forEach(item => {
            if (!state.gear) state.gear = [];
            state.gear.push(item);
        });
        showToast(`–ü—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ`, 2000);
    }
    
    // –£–¥–∞–ª—è–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞
    state.property.vehicles.splice(vehicleIndex, 1);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–Ω—å–≥–∏
    state.money += sellPrice;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast(`–ü—Ä–æ–¥–∞–Ω ${vehicle.name} –∑–∞ ${sellPrice.toLocaleString()} —É–µ`, 3000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    updateMoneyDisplay();
    renderTransport();
    renderGear();
    scheduleSave();
    
    
}

// ============================================================================
// –ú–ê–ì–ê–ó–ò–ù –ú–û–î–£–õ–ï–ô –¢–†–ê–ù–°–ü–û–†–¢–ê
// ============================================================================

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –º–∞–≥–∞–∑–∏–Ω–∞ –º–æ–¥—É–ª–µ–π
function showTransportModulesShop() {
    
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    modal.innerHTML = `
        <div class="modal-content" style="max-width: 90vw; max-height: 90vh; overflow-y: auto;">
            <div class="modal-header">
                <h3 style="color: ${getThemeColors().accent}; margin: 0; display: flex; align-items: center; gap: 0.5rem;"><img src="https://static.tildacdn.com/tild6361-6565-4764-b437-306433303764/car-check_1.png" alt="üîß" style="width: 24px; height: 24px;"> –ú–∞–≥–∞–∑–∏–Ω –º–æ–¥—É–ª–µ–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞</h3>
                <button onclick="closeTransportModulesShop()" style="background: none; border: none; color: ${getThemeColors().muted}; font-size: 1.5rem; cursor: pointer;">&times;</button>
            </div>
            
            <div class="modal-body" style="padding: 1rem;">
                <!-- –§–∏–ª—å—Ç—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π -->
                <div style="display: flex; gap: 0.5rem; margin-bottom: 1rem; flex-wrap: wrap;">
                    <button onclick="filterModuleCategory('ground')" class="pill-button primary-button module-category-filter active" data-category="ground">
                        –ù–∞–∑–µ–º–Ω—ã–π
                    </button>
                    <button onclick="filterModuleCategory('air')" class="pill-button primary-button module-category-filter" data-category="air">
                        –í–æ–∑–¥—É—à–Ω—ã–π
                    </button>
                    <button onclick="filterModuleCategory('water')" class="pill-button primary-button module-category-filter" data-category="water">
                        –í–æ–¥–Ω—ã–π
                    </button>
                </div>
                
                <!-- –°–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π -->
                <div id="transportModulesShopList" style="display: grid; grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); gap: 1rem;">
                    ${renderTransportModulesShopItems()}
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
    const style = document.createElement('style');
    style.textContent = `
        .module-category-filter.active {
            background: var(--accent) !important;
            color: white !important;
        }
    `;
    document.head.appendChild(style);
    
    
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –º–æ–¥—É–ª–µ–π
function renderTransportModulesShopItems(category = 'ground') {
    let modules = [];
    
    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –º–æ–¥—É–ª–∏ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
    Object.values(VEHICLE_MODULES_LIBRARY).forEach(categoryModules => {
        modules = modules.concat(categoryModules);
    });
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if (category !== 'all') {
        modules = modules.filter(module => module.category === category);
    }
    
    return modules.map(module => renderTransportModuleShopItem(module)).join('');
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –æ–¥–Ω–æ–≥–æ –º–æ–¥—É–ª—è –≤ –º–∞–≥–∞–∑–∏–Ω–µ
function renderTransportModuleShopItem(module) {
    const canAfford = state.money >= module.price;
    const isOwned = state.gear?.some(item => item.name === module.name);
    
    return `
        <div class="shop-item">
            <div class="shop-item-header">
                <h4 class="shop-item-title">${module.name}</h4>
            </div>
            
            <p class="shop-item-description">
                ${module.description}
            </p>
            
            ${module.requirements && module.requirements.length > 0 ? `
            <div style="background: rgba(255, 193, 7, 0.1); border: 1px solid #ffc107; border-radius: 6px; padding: 0.5rem; margin-bottom: 1rem;">
                <div style="font-size: 0.8rem; color: #ffc107; font-weight: bold;">‚ö†Ô∏è –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</div>
                <div style="font-size: 0.75rem; color: ${getThemeColors().text};">${module.requirements.join(', ')}</div>
            </div>
            ` : ''}
            
            <div class="shop-item-price">
                ${module.price.toLocaleString()}
            </div>
            
            ${isOwned ? `
                <button class="shop-item-available-btn">
                    –í –Ω–∞–ª–∏—á–∏–∏
                </button>
            ` : `
                <button 
                    class="shop-item-buy-btn"
                    onclick="buyTransportModule('${module.name}', ${module.price}, '${module.category}')"
                    ${!canAfford ? 'disabled' : ''}
                >
                    –ö—É–ø–∏—Ç—å
                </button>
            `}
        </div>
    `;
}

// –§—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –º–æ–¥—É–ª–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function filterModuleCategory(category) {
    
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
    document.querySelectorAll('.module-category-filter').forEach(btn => {
        btn.classList.remove('active');
    });
    document.querySelector(`.module-category-filter[data-category="${category}"]`).classList.add('active');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
    const shopList = document.getElementById('transportModulesShopList');
    if (shopList) {
        shopList.innerHTML = renderTransportModulesShopItems(category);
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ –º–æ–¥—É–ª–µ–π
function closeTransportModulesShop() {
    const modal = document.querySelector('.modal-overlay');
    if (modal) {
        modal.remove();
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –º–æ–¥—É–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function buyTransportModule(moduleName, price, category) {
    console.log(`üí∞ –ü–æ–∫—É–ø–∫–∞ –º–æ–¥—É–ª—è: ${moduleName} –∑–∞ ${price} —É–µ (–∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${category})`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –¥–µ–Ω–µ–≥
    if (state.money < price) {
        showToast('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!', 2000);
        return;
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –º–æ–¥—É–ª—å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const vehicleType = category;
    const categoryModules = VEHICLE_MODULES_LIBRARY[category];
    
    if (!categoryModules) {
        showToast('–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!', 2000);
        return;
    }
    
    const moduleData = categoryModules.find(m => m.name === moduleName);
    
    if (!moduleData) {
        showToast('–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–∞—Ç–∞–ª–æ–≥–µ!', 2000);
        return;
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
    const vehicleTypeRu = {
        'ground': '–ù–∞–∑–µ–º–Ω—ã–π',
        'air': '–í–æ–∑–¥—É—à–Ω—ã–π',
        'water': '–í–æ–¥–Ω—ã–π'
    }[vehicleType] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–æ–¥—É–ª—å
    const newModule = {
        id: generateId('vehicleModule'),
        name: moduleData.name,
        description: moduleData.description,
        price: price,
        category: moduleData.category,
        requirements: moduleData.requirements || [],
        vehicleType: vehicleType, // –¢–∏–ø —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ (ground, air, water)
        vehicleTypeRu: vehicleTypeRu, // –¢–∏–ø —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
        weight: 10, // –ù–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª—è (10 –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ, 0 –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ)
        isInstalled: false // –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –º–æ–¥—É–ª—å –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –º–∞—Å—Å–∏–≤ –º–æ–¥—É–ª–µ–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    if (!state.vehicleModules) state.vehicleModules = [];
    state.vehicleModules.push(newModule);
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
    state.money -= price;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast(`–ö—É–ø–ª–µ–Ω –º–æ–¥—É–ª—å "${moduleName}" (${vehicleTypeRu}) –∑–∞ ${price.toLocaleString()} —É–µ`, 3000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    updateMoneyDisplay();
    renderVehicleModulesInventory();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞–≥–∞–∑–∏–Ω
    const shopList = document.getElementById('transportModulesShopList');
    if (shopList) {
        const currentCategory = document.querySelector('.module-category-filter.active')?.dataset.category || 'ground';
        shopList.innerHTML = renderTransportModulesShopItems(currentCategory);
    }
    
    scheduleSave();
    
    
}

// ============================================================================
// –£–ü–†–ê–í–õ–ï–ù–ò–ï –ú–û–î–£–õ–Ø–ú–ò –¢–†–ê–ù–°–ü–û–†–¢–ê
// ============================================================================

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –º–æ–¥—É–ª—è
function toggleModuleCollapse(moduleId) {
    const contentElement = document.getElementById(`module-content-${moduleId}`);
    if (!contentElement) return;
    
    const isCurrentlyCollapsed = contentElement.style.display === 'none';
    const newState = !isCurrentlyCollapsed;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ localStorage
    localStorage.setItem(`module-${moduleId}-collapsed`, newState.toString());
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    contentElement.style.display = newState ? 'none' : 'block';
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –º–æ–¥—É–ª–µ–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function renderVehicleModulesInventory() {
    const container = document.getElementById('vehicleModulesContainer');
    if (!container) return;
    
    if (!state.vehicleModules || state.vehicleModules.length === 0) {
        container.innerHTML = '<p style="color: ${getThemeColors().muted}; text-align: center; padding: 2rem;">–ú–æ–¥—É–ª–∏ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã</p>';
        return;
    }
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏
    const uninstalledModules = state.vehicleModules.filter(m => !m.isInstalled);
    
    if (uninstalledModules.length === 0) {
        container.innerHTML = '<p style="color: ${getThemeColors().muted}; text-align: center; padding: 2rem;">–í—Å–µ –º–æ–¥—É–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç</p>';
        return;
    }
    
    container.innerHTML = uninstalledModules.map(module => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –∏–∑ localStorage
        const isCollapsed = localStorage.getItem(`module-${module.id}-collapsed`) === 'true';
        
        return `
            <div class="shop-item" style="margin-bottom: 1rem;">
                <div class="shop-item-header">
                    <h4 class="shop-item-title" style="cursor: pointer;" onclick="toggleModuleCollapse('${module.id}')">${module.name}</h4>
                </div>
                
                <div id="module-content-${module.id}" style="display: ${isCollapsed ? 'none' : 'block'};">
                    <p class="shop-item-description" style="margin-bottom: 0.5rem;">
                        ${module.description}
                    </p>
                    
                    <div style="padding-top: 0.5rem; border-top: 1px solid var(--border);">
                        <div style="display: flex; flex-direction: column; gap: 0.25rem;">
                            <span style="font-size: 0.85rem; color: var(--text-secondary);">
                                <strong>–¢–∏–ø —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞:</strong> ${module.vehicleTypeRu}
                            </span>
                            <span style="font-size: 0.85rem; color: var(--text-secondary);">
                                <strong>–ù–∞–≥—Ä—É–∑–∫–∞:</strong> ${module.weight.toFixed(1)}
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }).join('');
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–¥–∞–∂–∏ –º–æ–¥—É–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function sellVehicleModule(moduleId) {
    
    
    // –ù–∞—Ö–æ–¥–∏–º –º–æ–¥—É–ª—å
    const moduleIndex = state.vehicleModules.findIndex(m => m.id === moduleId);
    if (moduleIndex === -1) {
        showToast('–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    const module = state.vehicleModules[moduleIndex];
    const sellPrice = Math.floor(module.price * 0.5);
    
    // –£–¥–∞–ª—è–µ–º –º–æ–¥—É–ª—å –∏–∑ –º–∞—Å—Å–∏–≤–∞
    state.vehicleModules.splice(moduleIndex, 1);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–Ω—å–≥–∏
    state.money += sellPrice;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast(`–ú–æ–¥—É–ª—å "${module.name}" –ø—Ä–æ–¥–∞–Ω –∑–∞ ${sellPrice.toLocaleString()} —É–µ`, 2000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    updateMoneyDisplay();
    renderVehicleModulesInventory();
    
    scheduleSave();
    
    
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥—É–ª—è–º–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function manageVehicleModules(vehicleId) {
    
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    modal.id = 'vehicleModulesModal';
    modal.innerHTML = `
        <div class="modal-content" style="max-width: 90vw; max-height: 90vh; overflow-y: auto;">
            <div class="modal-header">
                <h3 style="color: ${getThemeColors().accent}; margin: 0;">üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è–º–∏: ${vehicle.name}</h3>
                <button onclick="closeVehicleModulesModal()" style="background: none; border: none; color: ${getThemeColors().muted}; font-size: 1.5rem; cursor: pointer;">&times;</button>
            </div>
            
            <div class="modal-body" style="padding: 1rem;">
                <!-- –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏ -->
                <div style="margin-bottom: 2rem;">
                    <h4 style="color: ${getThemeColors().accent}; margin: 0 0 1rem 0;">–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏</h4>
                    <div id="installedModulesList">
                        ${renderInstalledModules(vehicle)}
                    </div>
                </div>
                
                <!-- –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥—É–ª–∏ -->
                <div>
                    <h4 style="color: ${getThemeColors().accent}; margin: 0 0 1rem 0;">–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥—É–ª–∏ –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏</h4>
                    <div id="availableModulesList">
                        ${renderAvailableModules(vehicle)}
                    </div>
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
function renderInstalledModules(vehicle) {
    if (!vehicle.modules || vehicle.modules.length === 0) {
        return '<p style="color: ${getThemeColors().muted}; text-align: center; padding: 2rem;">–ú–æ–¥—É–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã</p>';
    }
    
    return vehicle.modules.map((module, index) => {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
        let specialButton = '';
        
        if (module.name === '–ö—É—Ä—Å–æ–≤–æ–µ –≤–æ–æ—Ä—É–∂–µ–Ω–∏–µ' || module.name === '–¢—É—Ä–µ–ª—å–Ω–æ–µ –≤–æ–æ—Ä—É–∂–µ–Ω–∏–µ' || 
            module.name === '–ö—Ä–µ–ø–ª–µ–Ω–∏–µ –¥–ª—è —Ç—è–∂–µ–ª–æ–≥–æ –æ—Ä—É–∂–∏—è' || module.name === '–†–∞–∫–µ—Ç–Ω—ã–π –∞–ø–ø–∞—Ä–∞—Ç') {
            specialButton = `
                <button 
                    onclick="manageCourseWeapon('${vehicle.id}', ${index})"
                    class="pill-button primary-button"
                    style="font-size: 0.7rem; padding: 0.3rem 0.6rem; margin-right: 0.3rem;"
                >
                    üî´ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (${module.weapons?.length || 0}/${module.maxWeapons || 1})
                </button>
            `;
        } else if (module.name === '–ê–∫—Ç–∏–≤–Ω–∞—è –∑–∞—â–∏—Ç–∞') {
            specialButton = `
                <button 
                    onclick="manageActiveDefense('${vehicle.id}', ${index})"
                    class="pill-button warning-button"
                    style="font-size: 0.7rem; padding: 0.3rem 0.6rem; margin-right: 0.3rem;"
                >
                    ‚ö° –ó–∞—Ä—è–¥—ã (${module.charges || 0}/${module.maxCharges || 100})
                </button>
            `;
        }
        
        return `
            <div style="
                background: linear-gradient(135deg, rgba(40, 167, 69, 0.1) 0%, rgba(40, 167, 69, 0.05) 100%);
                border: 2px solid #28a745;
                border-radius: 8px;
                padding: 1rem;
                margin-bottom: 1rem;
            ">
                <div style="display: flex; justify-content: space-between; align-items: flex-start;">
                    <div style="flex: 1;">
                        <h5 style="color: #28a745; margin: 0 0 0.5rem 0;">‚úÖ ${module.name}</h5>
                        <p style="color: ${getThemeColors().text}; font-size: 0.9rem; margin: 0;">${module.description}</p>
                    </div>
                    <div style="display: flex; gap: 0.3rem;">
                        ${specialButton}
                        <button 
                            onclick="uninstallVehicleModule('${vehicle.id}', ${index})"
                            class="pill-button danger-button"
                            style="font-size: 0.8rem; padding: 0.4rem 0.8rem;"
                        >
                            ‚ùå –°–Ω—è—Ç—å
                        </button>
                    </div>
                </div>
            </div>
        `;
    }).join('');
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
function renderAvailableModules(vehicle) {
    // –ü–æ–ª—É—á–∞–µ–º –º–æ–¥—É–ª–∏ –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –º–æ–¥—É–ª–µ–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    const isBicycle = vehicle.name === '–°–ö–õ–ê–î–ù–û–ô –í–ï–õ–û–°–ò–ü–ï–î' || vehicle.linkedGearId;
    let availableModules = state.vehicleModules?.filter(module => {
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏
        if (module.isInstalled) return false;
        
        // –î–ª—è –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ —Ç–æ–ª—å–∫–æ –∫—É—Ä—Å–æ–≤–æ–µ –≤–æ–æ—Ä—É–∂–µ–Ω–∏–µ
        if (isBicycle) {
            return module.name === '–ö—É—Ä—Å–æ–≤–æ–µ –≤–æ–æ—Ä—É–∂–µ–Ω–∏–µ';
        }
        
        // –î–ª—è –æ–±—ã—á–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø (ground, air, water)
        return module.vehicleType === vehicle.category;
    }) || [];
    
    if (availableModules.length === 0) {
        return '<p style="color: ${getThemeColors().muted}; text-align: center; padding: 2rem;">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥—É–ª–µ–π –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ</p>';
    }
    
    return availableModules.map((module) => `
        <div style="
            background: linear-gradient(135deg, rgba(182, 103, 255, 0.1) 0%, rgba(182, 103, 255, 0.05) 100%);
            border: 2px solid var(--accent);
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1rem;
        ">
            <div style="display: flex; justify-content: space-between; align-items: flex-start;">
                <div style="flex: 1;">
                    <h5 style="color: ${getThemeColors().accent}; margin: 0 0 0.5rem 0;">üîß ${module.name}</h5>
                    <p style="color: ${getThemeColors().text}; font-size: 0.9rem; margin: 0;">${module.description}</p>
                    ${module.requirements && module.requirements.length > 0 ? `
                    <div style="background: rgba(255, 193, 7, 0.1); border: 1px solid #ffc107; border-radius: 6px; padding: 0.3rem; margin-top: 0.5rem;">
                        <div style="font-size: 0.75rem; color: #ffc107;">‚ö†Ô∏è –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: ${module.requirements.join(', ')}</div>
                    </div>
                    ` : ''}
                </div>
                <button 
                    onclick="installVehicleModuleFromInventory('${vehicle.id}', '${module.id}')"
                    class="pill-button success-button"
                    style="font-size: 0.8rem; padding: 0.4rem 0.8rem;"
                >
                    ‚ûï –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
                </button>
            </div>
        </div>
    `).join('');
}

// –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥—É–ª—è –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
function installVehicleModuleFromInventory(vehicleId, moduleId) {
    
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –º–æ–¥—É–ª—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
    const moduleInventoryIndex = state.vehicleModules.findIndex(m => m.id === moduleId);
    if (moduleInventoryIndex === -1) {
        showToast('–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ!', 2000);
        return;
    }
    
    const module = state.vehicleModules[moduleInventoryIndex];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤—ã–∫–∏ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    const transportSkillLevel = state.skills.find(s => s.name === '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç')?.level || 0;
    const familyFriendLevel = getProfessionalSkillLevel('–î—Ä—É–≥ —Å–µ–º—å–∏');
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–∞–≤—ã–∫ –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç 4+ –∏–ª–∏ –î—Ä—É–≥ —Å–µ–º—å–∏ - –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
    if (transportSkillLevel >= 4 || familyFriendLevel > 0) {
        installVehicleModuleDirectly(vehicleId, moduleId, 0);
        return;
    }
    
    // –ò–Ω–∞—á–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å –≤—ã–±–æ—Ä–æ–º —Å–ø–æ—Å–æ–±–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    showVehicleModuleInstallDialog(vehicleId, moduleId, module);
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –¥–∏–∞–ª–æ–≥–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥—É–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function showVehicleModuleInstallDialog(vehicleId, moduleId, module) {
    document.body.style.overflow = 'hidden';
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    const existingModals = document.querySelectorAll('.modal-overlay');
    modal.style.zIndex = 1000 + (existingModals.length * 100);
    
    const originalRemove = modal.remove.bind(modal);
    modal.remove = function() {
        document.body.style.overflow = '';
        originalRemove();
    };
    
    modal.innerHTML = `
        <div class="modal" style="max-width: 500px;">
            <div class="modal-header">
                <h3>üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥—É–ª—è</h3>
                <button class="icon-button" onclick="closeModal(this)">√ó</button>
            </div>
            <div class="modal-body">
                <div style="margin-bottom: 1rem;">
                    <h4 style="color: ${getThemeColors().text}; margin-bottom: 0.5rem;">${module.name}</h4>
                    <p style="color: ${getThemeColors().muted}; font-size: 0.9rem; margin-bottom: 1rem;">${module.description}</p>
                </div>
                
                <div style="background: rgba(255, 193, 7, 0.1); border: 1px solid #ffc107; border-radius: 8px; padding: 1rem; margin-bottom: 1rem;">
                    <h5 style="color: #ffc107; margin-bottom: 0.5rem;">‚ö†Ô∏è –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏:</h5>
                    <ul style="color: ${getThemeColors().text}; font-size: 0.9rem; margin: 0; padding-left: 1rem;">
                        <li>–ù–∞–≤—ã–∫ <strong>–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç</strong> 4 —É—Ä–æ–≤–Ω—è –∏–ª–∏ –≤—ã—à–µ</li>
                        <li>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –Ω–∞–≤—ã–∫ <strong>–î—Ä—É–≥ —Å–µ–º—å–∏</strong></li>
                        <li>–ò–ª–∏ –æ–ø–ª–∞—Ç–∞ <strong>500 —É–µ</strong> –∑–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É</li>
                    </ul>
                </div>
                
                <div style="display: flex; gap: 0.5rem; justify-content: center;">
                    <button class="pill-button primary-button" onclick="installVehicleModuleDirectly('${vehicleId}', '${moduleId}', 500)" style="font-size: 0.9rem; padding: 0.5rem 1rem;">
                        –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞ 500 —É–µ
                    </button>
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            closeModal(modal.querySelector('.icon-button'));
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä—è–º–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥—É–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function installVehicleModuleDirectly(vehicleId, moduleId, installCost) {
    // –ù–∞—Ö–æ–¥–∏–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –º–æ–¥—É–ª—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
    const moduleInventoryIndex = state.vehicleModules.findIndex(m => m.id === moduleId);
    if (moduleInventoryIndex === -1) {
        showToast('–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ!', 2000);
        return;
    }
    
    const module = state.vehicleModules[moduleInventoryIndex];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –º–æ–¥—É–ª—è
    if (module.requirements && module.requirements.length > 0) {
        // TODO: –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–Ω—å–≥–∏ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if (installCost > 0 && state.money < installCost) {
        showModal('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', `–£ –≤–∞—Å ${state.money.toLocaleString()} —É–µ, –∞ –Ω—É–∂–Ω–æ ${installCost.toLocaleString()} —É–µ –∑–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É.`);
        return;
    }
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if (installCost > 0) {
        state.money -= installCost;
        updateMoneyDisplay();
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –º–æ–¥—É–ª—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const installedModule = {
        name: module.name,
        description: module.description,
        category: module.category,
        requirements: module.requirements || [],
        vehicleType: module.vehicleType,
        inventoryId: module.id // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
    if (module.name === '–ê–∫—Ç–∏–≤–Ω–∞—è –∑–∞—â–∏—Ç–∞') {
        installedModule.maxCharges = 100;
        installedModule.charges = 0;
        installedModule.defenseType = null; // –ë—É–¥–µ—Ç –≤—ã–±—Ä–∞–Ω–æ –ø–æ–∑–∂–µ
    } else if (module.name === '–ö—É—Ä—Å–æ–≤–æ–µ –≤–æ–æ—Ä—É–∂–µ–Ω–∏–µ') {
        installedModule.maxWeapons = 1;
        installedModule.weapons = [];
    } else if (module.name === '–¢—É—Ä–µ–ª—å–Ω–æ–µ –≤–æ–æ—Ä—É–∂–µ–Ω–∏–µ') {
        installedModule.maxWeapons = 2;
        installedModule.weapons = [];
    } else if (module.name === '–ö—Ä–µ–ø–ª–µ–Ω–∏–µ –¥–ª—è —Ç—è–∂–µ–ª–æ–≥–æ –æ—Ä—É–∂–∏—è') {
        installedModule.maxWeapons = 1;
        installedModule.weapons = [];
    } else if (module.name === '–†–∞–∫–µ—Ç–Ω—ã–π –∞–ø–ø–∞—Ä–∞—Ç') {
        installedModule.maxWeapons = 4;
        installedModule.weapons = [];
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–¥—É–ª—å –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    if (!vehicle.modules) {
        vehicle.modules = [];
    }
    vehicle.modules.push(installedModule);
    
    // –ü–æ–º–µ—á–∞–µ–º –º–æ–¥—É–ª—å –∫–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
    module.isInstalled = true;
    module.installedOnVehicle = vehicleId;
    module.weight = 0; // –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏ –Ω–µ –∑–∞–Ω–∏–º–∞—é—Ç –º–µ—Å—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    renderTransport();
    scheduleSave();
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    const installModal = document.querySelector('.modal-overlay:last-child');
    if (installModal) {
        installModal.remove();
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (installCost > 0) {
        showToast(`–ú–æ–¥—É–ª—å "${module.name}" —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –°–ø–∏—Å–∞–Ω–æ ${installCost} —É–µ –∑–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É`, 3000);
    } else {
        showToast(`–ú–æ–¥—É–ª—å "${module.name}" —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –±–µ—Å–ø–ª–∞—Ç–Ω–æ!`, 3000);
    }
    
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–∞–ª
    const modal = document.getElementById('vehicleModulesModal');
    if (modal) {
        modal.remove();
        manageVehicleModules(vehicleId);
    }
    
    scheduleSave();
    
    
}

// –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥—É–ª—è –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç (–°–¢–ê–†–ê–Ø, –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
function installVehicleModule(vehicleId, moduleIndex) {
    
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –º–æ–¥—É–ª—å –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏
    const isBicycle = vehicle.name === '–°–ö–õ–ê–î–ù–û–ô –í–ï–õ–û–°–ò–ü–ï–î' || vehicle.linkedGearId;
    const availableModules = state.gear?.filter(item => {
        const isModule = VEHICLE_MODULES_LIBRARY.ground?.some(m => m.name === item.name) ||
                        VEHICLE_MODULES_LIBRARY.air?.some(m => m.name === item.name) ||
                        VEHICLE_MODULES_LIBRARY.water?.some(m => m.name === item.name);
        
        if (!isModule) return false;
        
        if (isBicycle) {
            return item.name === '–ö—É—Ä—Å–æ–≤–æ–µ –≤–æ–æ—Ä—É–∂–µ–Ω–∏–µ';
        }
        
        return item.category === vehicle.category;
    }) || [];
    
    const module = availableModules[moduleIndex];
    if (!module) {
        showToast('–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –º–æ–¥—É–ª—è
    if (module.requirements && module.requirements.length > 0) {
        const hasRequirements = module.requirements.every(req => {
            return vehicle.modules?.some(m => m.name === req);
        });
        
        if (!hasRequirements) {
            showToast(`–¢—Ä–µ–±—É–µ—Ç—Å—è: ${module.requirements.join(', ')}`, 2000);
            return;
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –º–æ–¥—É–ª–µ–π
    const conflict = checkModuleConflicts(vehicle, module);
    if (conflict) {
        showToast(conflict, 2000);
        return;
    }
    
    // –£–¥–∞–ª—è–µ–º –º–æ–¥—É–ª—å –∏–∑ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è
    const gearIndex = state.gear.findIndex(item => item === module);
    if (gearIndex !== -1) {
        state.gear.splice(gearIndex, 1);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥—É–ª—å –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    if (!vehicle.modules) vehicle.modules = [];
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –º–æ–¥—É–ª—è
    if (module.name === '–ö—É—Ä—Å–æ–≤–æ–µ –≤–æ–æ—Ä—É–∂–µ–Ω–∏–µ') {
        module.weapons = [];
        module.maxWeapons = 1;
    } else if (module.name === '–¢—É—Ä–µ–ª—å–Ω–æ–µ –≤–æ–æ—Ä—É–∂–µ–Ω–∏–µ') {
        module.weapons = [];
        module.maxWeapons = 2;
    } else if (module.name === '–ö—Ä–µ–ø–ª–µ–Ω–∏–µ –¥–ª—è —Ç—è–∂–µ–ª–æ–≥–æ –æ—Ä—É–∂–∏—è') {
        module.weapons = [];
        module.maxWeapons = 1;
    } else if (module.name === '–†–∞–∫–µ—Ç–Ω—ã–π –∞–ø–ø–∞—Ä–∞—Ç') {
        module.weapons = [];
        module.maxWeapons = 4; // –î–æ 4 —Ä–∞–∫–µ—Ç–æ–º–µ—Ç–æ–≤
    } else if (module.name === '–ê–∫—Ç–∏–≤–Ω–∞—è –∑–∞—â–∏—Ç–∞') {
        module.charges = 0;
        module.maxCharges = 100; // 10 –º–∞–≥–∞–∑–∏–Ω–æ–≤ –ø–æ 10 –∑–∞—Ä—è–¥–æ–≤
        module.type = null; // –¢–∏–ø –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞—â–∏—Ç—ã
    }
    
    vehicle.modules.push(module);
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –º–æ–¥—É–ª—è
    applyModuleEffects(vehicle, module);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast(`–ú–æ–¥—É–ª—å "${module.name}" —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω`, 2000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    renderTransport();
    if (typeof renderGear === 'function') renderGear();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–æ–¥–∞–ª
    updateVehicleModulesModal(vehicleId);
    
    
}

// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –º–æ–¥—É–ª—è —Å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function uninstallVehicleModule(vehicleId, moduleIndex) {
    
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–æ–¥—É–ª—å
    if (!vehicle.modules || !vehicle.modules[moduleIndex]) {
        showToast('–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    const module = vehicle.modules[moduleIndex];
    
    // –í–ê–ñ–ù–û: –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä—É–∂–∏–µ –∏–∑ –º–æ–¥—É–ª—è –≤ –±–ª–æ–∫ "–û—Ä—É–∂–∏–µ"
    if (module.weapons && module.weapons.length > 0) {
        module.weapons.forEach(weapon => {
            // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ä—É–∂–∏–µ –æ–±—Ä–∞—Ç–Ω–æ –≤ state.weapons
            state.weapons.push(weapon);
        });
        
        const weaponCount = module.weapons.length;
        showToast(`–û—Ä—É–∂–∏–µ –∏–∑ –º–æ–¥—É–ª—è (${weaponCount} —à—Ç.) –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ –≤ –±–ª–æ–∫ "–û—Ä—É–∂–∏–µ"`, 3000);
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –º–æ–¥—É–ª—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –ø–æ inventoryId
    if (module.inventoryId) {
        const inventoryModule = state.vehicleModules.find(m => m.id === module.inventoryId);
        if (inventoryModule) {
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–¥—É–ª—é –Ω–∞–≥—Ä—É–∑–∫—É 10 –∏ —Å–Ω–∏–º–∞–µ–º —Ñ–ª–∞–≥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
            inventoryModule.isInstalled = false;
            inventoryModule.weight = 10;
            delete inventoryModule.installedOnVehicle;
        }
    }
    
    // –£–¥–∞–ª—è–µ–º –º–æ–¥—É–ª—å —Å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    vehicle.modules.splice(moduleIndex, 1);
    
    // –£–¥–∞–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –º–æ–¥—É–ª—è
    removeModuleEffects(vehicle, module);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast(`–ú–æ–¥—É–ª—å "${module.name}" —Å–Ω—è—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å`, 2000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    renderTransport();
    renderWeapons(); // –û–±–Ω–æ–≤–ª—è–µ–º –±–ª–æ–∫ –æ—Ä—É–∂–∏—è, –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–∏ –æ—Ä—É–∂–∏–µ
    renderVehicleModulesInventory();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–æ–¥–∞–ª
    updateVehicleModulesModal(vehicleId);
    
    scheduleSave();
    
    
}

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥—É–ª—è–º–∏
function updateVehicleModulesModal(vehicleId) {
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) return;
    
    const installedList = document.getElementById('installedModulesList');
    const availableList = document.getElementById('availableModulesList');
    
    if (installedList) {
        installedList.innerHTML = renderInstalledModules(vehicle);
    }
    
    if (availableList) {
        availableList.innerHTML = renderAvailableModules(vehicle);
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥—É–ª—è–º–∏
function closeVehicleModulesModal() {
    const modal = document.getElementById('vehicleModulesModal');
    if (modal) {
        modal.remove();
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –º–æ–¥—É–ª–µ–π
function checkModuleConflicts(vehicle, newModule) {
    if (!vehicle.modules) return null;
    
    // –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞ –∏ –£—Å–∏–ª–µ–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞ –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã
    if (newModule.name === '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞') {
        const hasReinforcement = vehicle.modules.some(m => m.name === '–£—Å–∏–ª–µ–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞');
        if (hasReinforcement) {
            return '–ù–µ–ª—å–∑—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞" –≤–º–µ—Å—Ç–µ —Å "–£—Å–∏–ª–µ–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞"!';
        }
    }
    
    if (newModule.name === '–£—Å–∏–ª–µ–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞') {
        const hasArmor = vehicle.modules.some(m => m.name === '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞');
        if (hasArmor) {
            return '–ù–µ–ª—å–∑—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å "–£—Å–∏–ª–µ–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞" –≤–º–µ—Å—Ç–µ —Å "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞"!';
        }
    }
    
    // –§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–≤–∏–≥–∞—Ç–µ–ª—å - –∑–∞–º–µ–Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å—Ç–∞–¥–∏–π
    if (newModule.name.includes('–§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–≤–∏–≥–∞—Ç–µ–ª—å')) {
        const stage = parseInt(newModule.name.match(/\(–°—Ç–∞–¥–∏—è (\d+)\)/)?.[1] || '1');
        
        if (stage === 2) {
            const hasStage1 = vehicle.modules.some(m => m.name === '–§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–≤–∏–≥–∞—Ç–µ–ª—å (–°—Ç–∞–¥–∏—è 1)');
            if (!hasStage1) {
                return '–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ "–°—Ç–∞–¥–∏—è 2" —Ç—Ä–µ–±—É–µ—Ç—Å—è "–°—Ç–∞–¥–∏—è 1"!';
            }
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º –°—Ç–∞–¥–∏—é 1
            const stage1Index = vehicle.modules.findIndex(m => m.name === '–§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–≤–∏–≥–∞—Ç–µ–ª—å (–°—Ç–∞–¥–∏—è 1)');
            if (stage1Index !== -1) {
                const removedModule = vehicle.modules.splice(stage1Index, 1)[0];
                state.gear.push(removedModule);
            }
        }
        
        if (stage === 3) {
            const hasStage2 = vehicle.modules.some(m => m.name === '–§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–≤–∏–≥–∞—Ç–µ–ª—å (–°—Ç–∞–¥–∏—è 2)');
            if (!hasStage2) {
                return '–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ "–°—Ç–∞–¥–∏—è 3" —Ç—Ä–µ–±—É–µ—Ç—Å—è "–°—Ç–∞–¥–∏—è 2"!';
            }
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º –°—Ç–∞–¥–∏—é 2
            const stage2Index = vehicle.modules.findIndex(m => m.name === '–§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–≤–∏–≥–∞—Ç–µ–ª—å (–°—Ç–∞–¥–∏—è 2)');
            if (stage2Index !== -1) {
                const removedModule = vehicle.modules.splice(stage2Index, 1)[0];
                state.gear.push(removedModule);
            }
        }
    }
    
    // –†–∞–∫–µ—Ç–Ω—ã–π –∞–ø–ø–∞—Ä–∞—Ç - –º–∞–∫—Å–∏–º—É–º 2
    if (newModule.name === '–†–∞–∫–µ—Ç–Ω—ã–π –∞–ø–ø–∞—Ä–∞—Ç') {
        const rocketCount = vehicle.modules.filter(m => m.name === '–†–∞–∫–µ—Ç–Ω—ã–π –∞–ø–ø–∞—Ä–∞—Ç').length;
        if (rocketCount >= 2) {
            return '–ú–∞–∫—Å–∏–º—É–º –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å 2 –º–æ–¥—É–ª—è "–†–∞–∫–µ—Ç–Ω—ã–π –∞–ø–ø–∞—Ä–∞—Ç"!';
        }
    }
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–¥–µ–Ω—å—è - –º–∞–∫—Å–∏–º—É–º 3
    if (newModule.name === '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–¥–µ–Ω—å—è') {
        const seatsCount = vehicle.modules.filter(m => m.name === '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–¥–µ–Ω—å—è').length;
        if (seatsCount >= 3) {
            return '–ú–∞–∫—Å–∏–º—É–º –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å 3 –º–æ–¥—É–ª—è "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–¥–µ–Ω—å—è"!';
        }
    }
    
    return null;
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –º–æ–¥—É–ª—è
function applyModuleEffects(vehicle, module) {
    switch (module.name) {
        case '–£–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —à–∞—Å—Å–∏':
        case '–ë—Ä–æ–Ω–µ—Å—Ç—ë–∫–ª–∞':
            vehicle.hp += 20;
            vehicle.currentHp += 20;
            break;
            
        case '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞':
            vehicle.os = 18;
            vehicle.currentOs = 18;
            break;
            
        case '–£—Å–∏–ª–µ–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞':
            vehicle.os = (vehicle.os || 0) + 10;
            vehicle.currentOs = (vehicle.currentOs || 0) + 10;
            break;
    }
}

// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –º–æ–¥—É–ª—è
function removeModuleEffects(vehicle, module) {
    switch (module.name) {
        case '–£–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —à–∞—Å—Å–∏':
        case '–ë—Ä–æ–Ω–µ—Å—Ç—ë–∫–ª–∞':
            vehicle.hp -= 20;
            vehicle.currentHp = Math.min(vehicle.currentHp, vehicle.hp);
            break;
            
        case '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞':
            vehicle.os = 0;
            vehicle.currentOs = 0;
            break;
            
        case '–£—Å–∏–ª–µ–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞':
            vehicle.os = Math.max(0, (vehicle.os || 0) - 10);
            vehicle.currentOs = Math.max(0, (vehicle.currentOs || 0) - 10);
            break;
    }
}

// ============================================================================
// –£–ü–†–ê–í–õ–ï–ù–ò–ï –ë–ê–ì–ê–ñ–ù–ò–ö–û–ú –¢–†–ê–ù–°–ü–û–†–¢–ê
// ============================================================================

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–≥–∞–∂–Ω–∏–∫–æ–º
function manageVehicleTrunk(vehicleId) {
    
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞
    if (vehicle.linkedGearId) {
        if (vehicle.trunk && vehicle.trunk.linkedBackpackId) {
            // –£ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ –µ—Å—Ç—å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π —Ä—é–∫–∑–∞–∫ - –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª —Ä—é–∫–∑–∞–∫–∞
            openBikeBackpackModal(vehicle);
            return;
        } else {
            // –£ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ –Ω–µ—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Ä—é–∫–∑–∞–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            showToast('–ù–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ –Ω–µ—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Ä—é–∫–∑–∞–∫–∞!', 2000);
            return;
        }
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–≥–∞–∂–Ω–∏–∫ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!vehicle.trunk) {
        vehicle.trunk = {
            capacity: 100,
            items: []
        };
    }
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∑–∞–≥—Ä—É–∑–∫—É
    const currentLoad = (vehicle.trunk.items || []).reduce((sum, item) => sum + (item.load || 0), 0);
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    modal.id = 'vehicleTrunkModal';
    modal.innerHTML = `
        <div class="modal-content" style="max-width: 90vw; max-height: 90vh; overflow-y: auto;">
            <div class="modal-header">
                <h3 style="color: ${getThemeColors().accent}; margin: 0;">üéí –ë–∞–≥–∞–∂–Ω–∏–∫: ${vehicle.name}</h3>
                <button onclick="closeVehicleTrunkModal()" style="background: none; border: none; color: ${getThemeColors().muted}; font-size: 1.5rem; cursor: pointer;">&times;</button>
            </div>
            
            <div class="modal-body" style="padding: 1rem;">
                <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—É–∑–∫–µ -->
                <div style="background: ${getThemeColors().accentLight}; border: 1px solid var(--accent); border-radius: 8px; padding: 1rem; margin-bottom: 1rem;">
                    <div style="display: flex; justify-content: space-between; align-items: center;">
                        <div>
                            <span style="color: ${getThemeColors().muted}; font-size: 0.9rem;">–ó–∞–≥—Ä—É–∑–∫–∞:</span>
                            <span style="color: ${getThemeColors().accent}; font-size: 1.2rem; font-weight: bold; margin-left: 0.5rem;">${currentLoad} / ${vehicle.trunk.capacity}</span>
                        </div>
                        <div style="background: ${getThemeColors().accentLight}; padding: 0.5rem 1rem; border-radius: 6px;">
                            <span style="color: ${getThemeColors().accent}; font-weight: bold;">${Math.floor((currentLoad / vehicle.trunk.capacity) * 100)}%</span>
                        </div>
                    </div>
                    <div style="background: ${getThemeColors().bgLight}; height: 8px; border-radius: 4px; margin-top: 0.5rem; overflow: hidden;">
                        <div style="background: var(--accent); height: 100%; width: ${Math.min((currentLoad / vehicle.trunk.capacity) * 100, 100)}%; transition: width 0.3s ease;"></div>
                    </div>
                </div>
                
                <!-- –ü—Ä–µ–¥–º–µ—Ç—ã –≤ –±–∞–≥–∞–∂–Ω–∏–∫–µ -->
                <div style="margin-bottom: 2rem;">
                    <h4 style="color: ${getThemeColors().accent}; margin: 0 0 1rem 0;">–ü—Ä–µ–¥–º–µ—Ç—ã –≤ –±–∞–≥–∞–∂–Ω–∏–∫–µ</h4>
                    <div id="trunkItemsList">
                        ${renderTrunkItems(vehicle)}
                    </div>
                </div>
                
                <!-- –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏ -->
                <div>
                    <h4 style="color: ${getThemeColors().accent}; margin: 0 0 1rem 0;">–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏</h4>
                    <div id="availableGearList">
                        ${renderAvailableGearForTrunk(vehicle)}
                    </div>
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –±–∞–≥–∞–∂–Ω–∏–∫–µ
function renderTrunkItems(vehicle) {
    if (!vehicle.trunk.items || vehicle.trunk.items.length === 0) {
        return '<p style="color: ${getThemeColors().muted}; text-align: center; padding: 2rem;">–ë–∞–≥–∞–∂–Ω–∏–∫ –ø—É—Å—Ç</p>';
    }
    
    return vehicle.trunk.items.map((item, index) => `
        <div style="
            background: linear-gradient(135deg, rgba(40, 167, 69, 0.1) 0%, rgba(40, 167, 69, 0.05) 100%);
            border: 2px solid #28a745;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1rem;
        ">
            <div style="display: flex; justify-content: space-between; align-items: flex-start;">
                <div style="flex: 1;">
                    <h5 style="color: #28a745; margin: 0 0 0.5rem 0;">üì¶ ${item.name}</h5>
                    <p style="color: ${getThemeColors().text}; font-size: 0.9rem; margin: 0 0 0.5rem 0;">${item.description || ''}</p>
                    <div style="font-size: 0.8rem; color: ${getThemeColors().muted};">
                        ‚öñÔ∏è –ù–∞–≥—Ä—É–∑–∫–∞: ${item.load || 0}
                    </div>
                </div>
                <button 
                    onclick="removeItemFromTrunk('${vehicle.id}', ${index})"
                    class="pill-button danger-button"
                    style="font-size: 0.8rem; padding: 0.4rem 0.8rem;"
                >
                    ‚ùå –£–±—Ä–∞—Ç—å
                </button>
            </div>
        </div>
    `).join('');
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è –¥–ª—è –±–∞–≥–∞–∂–Ω–∏–∫–∞
function renderAvailableGearForTrunk(vehicle) {
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ (–∏—Å–∫–ª—é—á–∞–µ–º –º–æ–¥—É–ª–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–∏–ø—ã –ø—Ä–µ–¥–º–µ—Ç–æ–≤)
    const availableGear = state.gear?.filter(item => {
        // –ò—Å–∫–ª—é—á–∞–µ–º –º–æ–¥—É–ª–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
        const isModule = VEHICLE_MODULES_LIBRARY.ground?.some(m => m.name === item.name) ||
                        VEHICLE_MODULES_LIBRARY.air?.some(m => m.name === item.name) ||
                        VEHICLE_MODULES_LIBRARY.water?.some(m => m.name === item.name);
        
        return !isModule;
    }) || [];
    
    if (availableGear.length === 0) {
        return '<p style="color: ${getThemeColors().muted}; text-align: center; padding: 2rem;">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏</p>';
    }
    
    const currentLoad = (vehicle.trunk.items || []).reduce((sum, item) => sum + (item.load || 0), 0);
    
    return availableGear.map((item, index) => {
        const canFit = currentLoad + (item.load || 0) <= vehicle.trunk.capacity;
        
        return `
            <div style="
                background: linear-gradient(135deg, rgba(182, 103, 255, 0.1) 0%, rgba(182, 103, 255, 0.05) 100%);
                border: 2px solid ${canFit ? 'var(--accent)' : '#dc3545'};
                border-radius: 8px;
                padding: 1rem;
                margin-bottom: 1rem;
                opacity: ${canFit ? '1' : '0.6'};
            ">
                <div style="display: flex; justify-content: space-between; align-items: flex-start;">
                    <div style="flex: 1;">
                        <h5 style="color: ${canFit ? 'var(--accent)' : '#dc3545'}; margin: 0 0 0.5rem 0;">üì¶ ${item.name}</h5>
                        <p style="color: ${getThemeColors().text}; font-size: 0.9rem; margin: 0 0 0.5rem 0;">${item.description || ''}</p>
                        <div style="font-size: 0.8rem; color: ${getThemeColors().muted};">
                            ‚öñÔ∏è –ù–∞–≥—Ä—É–∑–∫–∞: ${item.load || 0}
                        </div>
                        ${!canFit ? '<div style="font-size: 0.75rem; color: #dc3545; margin-top: 0.3rem;">‚ö†Ô∏è –ù–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ –±–∞–≥–∞–∂–Ω–∏–∫</div>' : ''}
                    </div>
                    <button 
                        onclick="addItemToTrunk('${vehicle.id}', ${index})"
                        class="pill-button ${canFit ? 'success-button' : 'danger-button'}"
                        style="font-size: 0.8rem; padding: 0.4rem 0.8rem;"
                        ${!canFit ? 'disabled' : ''}
                    >
                        ${canFit ? '‚ûï –ü–æ–ª–æ–∂–∏—Ç—å' : '‚ùå –ù–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è'}
                    </button>
                </div>
            </div>
        `;
    }).join('');
}

// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –±–∞–≥–∞–∂–Ω–∏–∫
function addItemToTrunk(vehicleId, itemIndex) {
    
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –ø—Ä–µ–¥–º–µ—Ç –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏
    const availableGear = state.gear?.filter(item => {
        const isModule = VEHICLE_MODULES_LIBRARY.ground?.some(m => m.name === item.name) ||
                        VEHICLE_MODULES_LIBRARY.air?.some(m => m.name === item.name) ||
                        VEHICLE_MODULES_LIBRARY.water?.some(m => m.name === item.name);
        return !isModule;
    }) || [];
    
    const item = availableGear[itemIndex];
    if (!item) {
        showToast('–ü—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–º–µ—Å—Ç–∏—Ç—Å—è –ª–∏ –ø—Ä–µ–¥–º–µ—Ç
    const currentLoad = (vehicle.trunk.items || []).reduce((sum, item) => sum + (item.load || 0), 0);
    if (currentLoad + (item.load || 0) > vehicle.trunk.capacity) {
        showToast('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –≤ –±–∞–≥–∞–∂–Ω–∏–∫–µ!', 2000);
        return;
    }
    
    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è
    const gearIndex = state.gear.findIndex(g => g === item);
    if (gearIndex !== -1) {
        state.gear.splice(gearIndex, 1);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ –±–∞–≥–∞–∂–Ω–∏–∫
    vehicle.trunk.items.push(item);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast(`"${item.name}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–≥–∞–∂–Ω–∏–∫`, 2000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    if (typeof renderGear === 'function') renderGear();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–æ–¥–∞–ª
    updateVehicleTrunkModal(vehicleId);
    
    
}

// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞
function removeItemFromTrunk(vehicleId, itemIndex) {
    
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–¥–º–µ—Ç
    if (!vehicle.trunk.items || !vehicle.trunk.items[itemIndex]) {
        showToast('–ü—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    const item = vehicle.trunk.items[itemIndex];
    
    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞
    vehicle.trunk.items.splice(itemIndex, 1);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
    if (!state.gear) state.gear = [];
    state.gear.push(item);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast(`"${item.name}" —É–±—Ä–∞–Ω –∏–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞`, 2000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    if (typeof renderGear === 'function') renderGear();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–æ–¥–∞–ª
    updateVehicleTrunkModal(vehicleId);
    
    
}

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª–∞ –±–∞–≥–∞–∂–Ω–∏–∫–∞
function updateVehicleTrunkModal(vehicleId) {
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) return;
    
    const trunkList = document.getElementById('trunkItemsList');
    const gearList = document.getElementById('availableGearList');
    
    if (trunkList) {
        trunkList.innerHTML = renderTrunkItems(vehicle);
    }
    
    if (gearList) {
        gearList.innerHTML = renderAvailableGearForTrunk(vehicle);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≥—Ä—É–∑–∫–µ
    const currentLoad = (vehicle.trunk.items || []).reduce((sum, item) => sum + (item.load || 0), 0);
    const modalBody = document.querySelector('#vehicleTrunkModal .modal-body');
    if (modalBody) {
        const loadInfo = modalBody.querySelector('div[style*="background: rgba(182, 103, 255, 0.1)"]');
        if (loadInfo) {
            loadInfo.innerHTML = `
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <div>
                        <span style="color: ${getThemeColors().muted}; font-size: 0.9rem;">–ó–∞–≥—Ä—É–∑–∫–∞:</span>
                        <span style="color: ${getThemeColors().accent}; font-size: 1.2rem; font-weight: bold; margin-left: 0.5rem;">${currentLoad} / ${vehicle.trunk.capacity}</span>
                    </div>
                    <div style="background: ${getThemeColors().accentLight}; padding: 0.5rem 1rem; border-radius: 6px;">
                        <span style="color: ${getThemeColors().accent}; font-weight: bold;">${Math.floor((currentLoad / vehicle.trunk.capacity) * 100)}%</span>
                    </div>
                </div>
                <div style="background: ${getThemeColors().bgLight}; height: 8px; border-radius: 4px; margin-top: 0.5rem; overflow: hidden;">
                    <div style="background: var(--accent); height: 100%; width: ${Math.min((currentLoad / vehicle.trunk.capacity) * 100, 100)}%; transition: width 0.3s ease;"></div>
                </div>
            `;
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∞ –±–∞–≥–∞–∂–Ω–∏–∫–∞
function closeVehicleTrunkModal() {
    const modal = document.getElementById('vehicleTrunkModal');
    if (modal) {
        modal.remove();
    }
}

// ============================================================================
// –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–û–ù–¢–†–ê–ë–ê–ù–î–ù–´–ú –û–¢–î–ï–õ–ï–ù–ò–ï–ú
// ============================================================================

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∞ –∫–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–µ–Ω–∏—è
function manageSmugglerCompartment(vehicleId) {
    
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–æ–¥—É–ª—å "–ö–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ"
    const hasSmugglerModule = vehicle.modules?.some(m => m.name === '–ö–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ');
    if (!hasSmugglerModule) {
        showToast('–¢—Ä–µ–±—É–µ—Ç—Å—è –º–æ–¥—É–ª—å "–ö–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ"!', 2000);
        return;
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!vehicle.smugglerCompartment) {
        vehicle.smugglerCompartment = {
            capacity: 100,
            items: []
        };
    }
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∑–∞–≥—Ä—É–∑–∫—É
    const currentLoad = (vehicle.smugglerCompartment.items || []).reduce((sum, item) => sum + (item.load || 0), 0);
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    modal.id = 'smugglerCompartmentModal';
    modal.innerHTML = `
        <div class="modal-content" style="max-width: 90vw; max-height: 90vh; overflow-y: auto;">
            <div class="modal-header">
                <h3 style="color: #ffc107; margin: 0;">üï≥Ô∏è –ö–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ: ${vehicle.name}</h3>
                <button onclick="closeSmugglerCompartmentModal()" style="background: none; border: none; color: ${getThemeColors().muted}; font-size: 1.5rem; cursor: pointer;">&times;</button>
            </div>
            
            <div class="modal-body" style="padding: 1rem;">
                <!-- –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ -->
                <div style="background: rgba(255, 193, 7, 0.1); border: 1px solid #ffc107; border-radius: 8px; padding: 1rem; margin-bottom: 1rem;">
                    <div style="color: #ffc107; font-size: 0.9rem; display: flex; align-items: center; gap: 0.5rem;">
                        <span style="font-size: 1.2rem;">‚ö†Ô∏è</span>
                        <span>–°–∫—Ä—ã—Ç–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤. –°–ª–æ–∂–Ω–µ–µ –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å –ø—Ä–∏ –æ–±—ã—Å–∫–µ.</span>
                    </div>
                </div>
                
                <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—É–∑–∫–µ -->
                <div style="background: rgba(255, 193, 7, 0.1); border: 1px solid #ffc107; border-radius: 8px; padding: 1rem; margin-bottom: 1rem;">
                    <div style="display: flex; justify-content: space-between; align-items: center;">
                        <div>
                            <span style="color: ${getThemeColors().muted}; font-size: 0.9rem;">–ó–∞–≥—Ä—É–∑–∫–∞:</span>
                            <span style="color: #ffc107; font-size: 1.2rem; font-weight: bold; margin-left: 0.5rem;">${currentLoad} / ${vehicle.smugglerCompartment.capacity}</span>
                        </div>
                        <div style="background: rgba(255, 193, 7, 0.2); padding: 0.5rem 1rem; border-radius: 6px;">
                            <span style="color: #ffc107; font-weight: bold;">${Math.floor((currentLoad / vehicle.smugglerCompartment.capacity) * 100)}%</span>
                        </div>
                    </div>
                    <div style="background: ${getThemeColors().bgLight}; height: 8px; border-radius: 4px; margin-top: 0.5rem; overflow: hidden;">
                        <div style="background: #ffc107; height: 100%; width: ${Math.min((currentLoad / vehicle.smugglerCompartment.capacity) * 100, 100)}%; transition: width 0.3s ease;"></div>
                    </div>
                </div>
                
                <!-- –ü—Ä–µ–¥–º–µ—Ç—ã –≤ –∫–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–º –æ—Ç–¥–µ–ª–µ–Ω–∏–∏ -->
                <div style="margin-bottom: 2rem;">
                    <h4 style="color: #ffc107; margin: 0 0 1rem 0;">–ü—Ä–µ–¥–º–µ—Ç—ã –≤ –∫–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–º –æ—Ç–¥–µ–ª–µ–Ω–∏–∏</h4>
                    <div id="smugglerItemsList">
                        ${renderSmugglerItems(vehicle)}
                    </div>
                </div>
                
                <!-- –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏ -->
                <div>
                    <h4 style="color: #ffc107; margin: 0 0 1rem 0;">–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏</h4>
                    <div id="availableGearForSmugglerList">
                        ${renderAvailableGearForSmuggler(vehicle)}
                    </div>
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∫–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–º –æ—Ç–¥–µ–ª–µ–Ω–∏–∏
function renderSmugglerItems(vehicle) {
    if (!vehicle.smugglerCompartment.items || vehicle.smugglerCompartment.items.length === 0) {
        return '<p style="color: ${getThemeColors().muted}; text-align: center; padding: 2rem;">–û—Ç–¥–µ–ª–µ–Ω–∏–µ –ø—É—Å—Ç–æ</p>';
    }
    
    return vehicle.smugglerCompartment.items.map((item, index) => `
        <div style="
            background: linear-gradient(135deg, rgba(255, 193, 7, 0.1) 0%, rgba(255, 193, 7, 0.05) 100%);
            border: 2px solid #ffc107;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1rem;
        ">
            <div style="display: flex; justify-content: space-between; align-items: flex-start;">
                <div style="flex: 1;">
                    <h5 style="color: #ffc107; margin: 0 0 0.5rem 0;">üï≥Ô∏è ${item.name}</h5>
                    <p style="color: ${getThemeColors().text}; font-size: 0.9rem; margin: 0 0 0.5rem 0;">${item.description || ''}</p>
                    <div style="font-size: 0.8rem; color: ${getThemeColors().muted};">
                        ‚öñÔ∏è –ù–∞–≥—Ä—É–∑–∫–∞: ${item.load || 0}
                    </div>
                </div>
                <button 
                    onclick="removeItemFromSmuggler('${vehicle.id}', ${index})"
                    class="pill-button danger-button"
                    style="font-size: 0.8rem; padding: 0.4rem 0.8rem;"
                >
                    ‚ùå –£–±—Ä–∞—Ç—å
                </button>
            </div>
        </div>
    `).join('');
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–µ–Ω–∏—è
function renderAvailableGearForSmuggler(vehicle) {
    const availableGear = state.gear?.filter(item => {
        const isModule = VEHICLE_MODULES_LIBRARY.ground?.some(m => m.name === item.name) ||
                        VEHICLE_MODULES_LIBRARY.air?.some(m => m.name === item.name) ||
                        VEHICLE_MODULES_LIBRARY.water?.some(m => m.name === item.name);
        return !isModule;
    }) || [];
    
    if (availableGear.length === 0) {
        return '<p style="color: ${getThemeColors().muted}; text-align: center; padding: 2rem;">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏</p>';
    }
    
    const currentLoad = (vehicle.smugglerCompartment.items || []).reduce((sum, item) => sum + (item.load || 0), 0);
    
    return availableGear.map((item, index) => {
        const canFit = currentLoad + (item.load || 0) <= vehicle.smugglerCompartment.capacity;
        
        return `
            <div style="
                background: linear-gradient(135deg, rgba(255, 193, 7, 0.1) 0%, rgba(255, 193, 7, 0.05) 100%);
                border: 2px solid ${canFit ? '#ffc107' : '#dc3545'};
                border-radius: 8px;
                padding: 1rem;
                margin-bottom: 1rem;
                opacity: ${canFit ? '1' : '0.6'};
            ">
                <div style="display: flex; justify-content: space-between; align-items: flex-start;">
                    <div style="flex: 1;">
                        <h5 style="color: ${canFit ? '#ffc107' : '#dc3545'}; margin: 0 0 0.5rem 0;">üï≥Ô∏è ${item.name}</h5>
                        <p style="color: ${getThemeColors().text}; font-size: 0.9rem; margin: 0 0 0.5rem 0;">${item.description || ''}</p>
                        <div style="font-size: 0.8rem; color: ${getThemeColors().muted};">
                            ‚öñÔ∏è –ù–∞–≥—Ä—É–∑–∫–∞: ${item.load || 0}
                        </div>
                        ${!canFit ? '<div style="font-size: 0.75rem; color: #dc3545; margin-top: 0.3rem;">‚ö†Ô∏è –ù–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è</div>' : ''}
                    </div>
                    <button 
                        onclick="addItemToSmuggler('${vehicle.id}', ${index})"
                        class="pill-button ${canFit ? 'warning-button' : 'danger-button'}"
                        style="font-size: 0.8rem; padding: 0.4rem 0.8rem;"
                        ${!canFit ? 'disabled' : ''}
                    >
                        ${canFit ? '‚ûï –°–ø—Ä—è—Ç–∞—Ç—å' : '‚ùå –ù–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è'}
                    </button>
                </div>
            </div>
        `;
    }).join('');
}

// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –∫–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ
function addItemToSmuggler(vehicleId, itemIndex) {
    
    
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    const availableGear = state.gear?.filter(item => {
        const isModule = VEHICLE_MODULES_LIBRARY.ground?.some(m => m.name === item.name) ||
                        VEHICLE_MODULES_LIBRARY.air?.some(m => m.name === item.name) ||
                        VEHICLE_MODULES_LIBRARY.water?.some(m => m.name === item.name);
        return !isModule;
    }) || [];
    
    const item = availableGear[itemIndex];
    if (!item) {
        showToast('–ü—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    const currentLoad = (vehicle.smugglerCompartment.items || []).reduce((sum, item) => sum + (item.load || 0), 0);
    if (currentLoad + (item.load || 0) > vehicle.smugglerCompartment.capacity) {
        showToast('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞!', 2000);
        return;
    }
    
    const gearIndex = state.gear.findIndex(g => g === item);
    if (gearIndex !== -1) {
        state.gear.splice(gearIndex, 1);
    }
    
    vehicle.smugglerCompartment.items.push(item);
    
    showToast(`"${item.name}" —Å–ø—Ä—è—Ç–∞–Ω –≤ –∫–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–º –æ—Ç–¥–µ–ª–µ–Ω–∏–∏`, 2000);
    
    if (typeof renderGear === 'function') renderGear();
    updateSmugglerCompartmentModal(vehicleId);
    
    
}

// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ –∫–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–µ–Ω–∏—è
function removeItemFromSmuggler(vehicleId, itemIndex) {
    
    
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    if (!vehicle.smugglerCompartment.items || !vehicle.smugglerCompartment.items[itemIndex]) {
        showToast('–ü—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    const item = vehicle.smugglerCompartment.items[itemIndex];
    vehicle.smugglerCompartment.items.splice(itemIndex, 1);
    
    if (!state.gear) state.gear = [];
    state.gear.push(item);
    
    showToast(`"${item.name}" —É–±—Ä–∞–Ω –∏–∑ –∫–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–µ–Ω–∏—è`, 2000);
    
    if (typeof renderGear === 'function') renderGear();
    updateSmugglerCompartmentModal(vehicleId);
    
    
}

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª–∞ –∫–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–µ–Ω–∏—è
function updateSmugglerCompartmentModal(vehicleId) {
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) return;
    
    const itemsList = document.getElementById('smugglerItemsList');
    const gearList = document.getElementById('availableGearForSmugglerList');
    
    if (itemsList) {
        itemsList.innerHTML = renderSmugglerItems(vehicle);
    }
    
    if (gearList) {
        gearList.innerHTML = renderAvailableGearForSmuggler(vehicle);
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∞ –∫–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–µ–Ω–∏—è
function closeSmugglerCompartmentModal() {
    const modal = document.getElementById('smugglerCompartmentModal');
    if (modal) {
        modal.remove();
    }
}

// ============================================================================
// –£–ü–†–ê–í–õ–ï–ù–ò–ï –û–°–ü –ò –û–° –¢–†–ê–ù–°–ü–û–†–¢–ê
// ============================================================================

// –§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –û–°–ü —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function adjustVehicleHP(vehicleId, amount) {
    
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –û–°–ü —Å —É—á–µ—Ç–æ–º –º–æ–¥—É–ª–µ–π
    const stats = calculateVehicleStats(vehicle);
    const maxHp = stats.maxHp;
    
    // –ò–∑–º–µ–Ω—è–µ–º –û–°–ü
    vehicle.currentHp = Math.max(0, Math.min(vehicle.currentHp + amount, maxHp));
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (amount > 0) {
        showToast(`–û–°–ü –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: +${amount}`, 1500);
    } else {
        showToast(`–ü–æ–ª—É—á–µ–Ω —É—Ä–æ–Ω: ${amount}`, 1500);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    renderTransport();
    
    
}

// –§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –û–° —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function adjustVehicleOS(vehicleId, amount) {
    
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –û–° —Å —É—á–µ—Ç–æ–º –º–æ–¥—É–ª–µ–π
    const stats = calculateVehicleStats(vehicle);
    const maxOs = stats.os;
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –û–° –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (vehicle.currentOs === undefined) {
        vehicle.currentOs = maxOs;
    }
    
    // –ò–∑–º–µ–Ω—è–µ–º –û–°
    vehicle.currentOs = Math.max(0, Math.min((vehicle.currentOs || 0) + amount, maxOs));
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (amount > 0) {
        showToast(`–û–° –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: +${amount}`, 1500);
    } else {
        showToast(`–ë—Ä–æ–Ω—è –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞: ${amount}`, 1500);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    renderTransport();
    
    
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–º–æ–Ω—Ç–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function repairVehicle(vehicleId) {
    
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ–º–æ–Ω—Ç–∞ (10% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞)
    const repairCost = Math.floor((vehicle.price || 10000) * 0.1);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –¥–µ–Ω–µ–≥
    if (state.money < repairCost) {
        showToast('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Ä–µ–º–æ–Ω—Ç–∞!', 2000);
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–µ–Ω –ª–∏ —Ä–µ–º–æ–Ω—Ç
    const stats = calculateVehicleStats(vehicle);
    const needsRepair = vehicle.currentHp < stats.maxHp || (stats.os > 0 && (vehicle.currentOs || 0) < stats.os);
    if (!needsRepair) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ —Ä–µ–º–æ–Ω—Ç–µ!', 2000);
        return;
    }
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
    state.money -= repairCost;
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –û–°–ü –∏ –û–°
    const hpRestored = stats.maxHp - vehicle.currentHp;
    const osRestored = stats.os - (vehicle.currentOs || 0);
    
    vehicle.currentHp = stats.maxHp;
    if (stats.os > 0) {
        vehicle.currentOs = stats.os;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast(`–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –æ—Ç—Ä–µ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω! –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: ${hpRestored} –û–°–ü${osRestored > 0 ? `, ${osRestored} –û–°` : ''}`, 3000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    updateMoneyDisplay();
    renderTransport();
    
    
}

// ============================================================================
// –£–ü–†–ê–í–õ–ï–ù–ò–ï –û–†–£–ñ–ï–ô–ù–´–ú–ò –ú–û–î–£–õ–Ø–ú–ò
// ============================================================================

// –§—É–Ω–∫—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤—ã–º –≤–æ–æ—Ä—É–∂–µ–Ω–∏–µ–º
function manageCourseWeapon(vehicleId, moduleIndex) {
    
    
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle || !vehicle.modules || !vehicle.modules[moduleIndex]) {
        showToast('–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    const module = vehicle.modules[moduleIndex];
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    modal.id = 'weaponModuleModal';
    modal.innerHTML = `
        <div class="modal-content" style="max-width: 600px;">
            <div class="modal-header">
                <h3 style="color: ${getThemeColors().accent}; margin: 0;">üéØ ${module.name}</h3>
                <button onclick="closeWeaponModuleModal()" style="background: none; border: none; color: ${getThemeColors().muted}; font-size: 1.5rem; cursor: pointer;">&times;</button>
            </div>
            
            <div class="modal-body" style="padding: 1rem;">
                <!-- –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ—Ä—É–∂–∏–µ -->
                <div style="margin-bottom: 1rem;">
                    <h4 style="color: ${getThemeColors().accent}; margin: 0 0 0.5rem 0;">–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ—Ä—É–∂–∏–µ (${module.weapons?.length || 0}/${module.maxWeapons || 1})</h4>
                    <div id="installedWeaponsList">
                        ${renderInstalledWeapons(vehicle, moduleIndex)}
                    </div>
                </div>
                
                <!-- –î–æ—Å—Ç—É–ø–Ω–æ–µ –æ—Ä—É–∂–∏–µ -->
                <div>
                    <h4 style="color: ${getThemeColors().accent}; margin: 0 0 0.5rem 0;">–î–æ—Å—Ç—É–ø–Ω–æ–µ –æ—Ä—É–∂–∏–µ</h4>
                    <div id="availableWeaponsList">
                        ${renderAvailableWeapons(vehicle, moduleIndex)}
                    </div>
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è
function renderInstalledWeapons(vehicle, moduleIndex) {
    const module = vehicle.modules[moduleIndex];
    
    if (!module.weapons || module.weapons.length === 0) {
        return '<p style="color: ${getThemeColors().muted}; text-align: center; padding: 1rem;">–û—Ä—É–∂–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ</p>';
    }
    
    return module.weapons.map((weapon, weaponIndex) => `
        <div style="background: rgba(40, 167, 69, 0.1); border: 1px solid #28a745; border-radius: 6px; padding: 0.8rem; margin-bottom: 0.5rem;">
            <div style="display: flex; justify-content: space-between; align-items: center;">
                <div>
                    <div style="color: #28a745; font-weight: bold; margin-bottom: 0.3rem;">üî´ ${weapon.name}</div>
                    <div style="font-size: 0.8rem; color: ${getThemeColors().muted};">
                        ${weapon.damage ? `–£—Ä–æ–Ω: ${weapon.damage}` : ''}
                        ${weapon.ammo ? ` | –ü–∞—Ç—Ä–æ–Ω—ã: ${weapon.ammo}` : ''}
                    </div>
                </div>
                <button onclick="removeWeaponFromModule('${vehicle.id}', ${moduleIndex}, ${weaponIndex})" class="pill-button danger-button" style="font-size: 0.7rem; padding: 0.3rem 0.6rem;">
                    ‚ùå –°–Ω—è—Ç—å
                </button>
            </div>
        </div>
    `).join('');
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è
function renderAvailableWeapons(vehicle, moduleIndex) {
    const module = vehicle.modules[moduleIndex];
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –æ—Ä—É–∂–∏–µ –∏–∑ –±–ª–æ–∫–∞ "–û—Ä—É–∂–∏–µ"
    let availableWeapons = state.weapons || [];
    
    // –î–ª—è "–ö—Ä–µ–ø–ª–µ–Ω–∏–µ –¥–ª—è —Ç—è–∂–µ–ª–æ–≥–æ –æ—Ä—É–∂–∏—è" —Ç–æ–ª—å–∫–æ –ø—É–ª–µ–º–µ—Ç—ã –∏ —Ä–∞–∫–µ—Ç–æ–º–µ—Ç—ã
    if (module.name === '–ö—Ä–µ–ø–ª–µ–Ω–∏–µ –¥–ª—è —Ç—è–∂–µ–ª–æ–≥–æ –æ—Ä—É–∂–∏—è') {
        availableWeapons = availableWeapons.filter(w => 
            w.name?.includes('–ü–£–õ–ï–ú–Å–¢') || w.name?.includes('–†–ê–ö–ï–¢–û–ú–Å–¢')
        );
    }
    
    // –î–ª—è "–†–∞–∫–µ—Ç–Ω—ã–π –∞–ø–ø–∞—Ä–∞—Ç" —Ç–æ–ª—å–∫–æ —Ä–∞–∫–µ—Ç–æ–º–µ—Ç—ã
    if (module.name === '–†–∞–∫–µ—Ç–Ω—ã–π –∞–ø–ø–∞—Ä–∞—Ç') {
        availableWeapons = availableWeapons.filter(w => w.name?.includes('–†–ê–ö–ï–¢–û–ú–Å–¢'));
    }
    
    if (availableWeapons.length === 0) {
        return '<p style="color: ${getThemeColors().muted}; text-align: center; padding: 1rem;">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è</p>';
    }
    
    const canAddMore = (module.weapons?.length || 0) < (module.maxWeapons || 1);
    
    return availableWeapons.map((weapon, weaponIndex) => `
        <div style="background: ${getThemeColors().accentLight}; border: 1px solid var(--accent); border-radius: 6px; padding: 0.8rem; margin-bottom: 0.5rem; opacity: ${canAddMore ? '1' : '0.5'};">
            <div style="display: flex; justify-content: space-between; align-items: center;">
                <div>
                    <div style="color: ${getThemeColors().accent}; font-weight: bold; margin-bottom: 0.3rem;">üî´ ${weapon.name}</div>
                    <div style="font-size: 0.8rem; color: ${getThemeColors().muted};">
                        ${weapon.damage ? `–£—Ä–æ–Ω: ${weapon.damage}` : ''}
                        ${weapon.ammo ? ` | –ü–∞—Ç—Ä–æ–Ω—ã: ${weapon.ammo}` : ''}
                    </div>
                </div>
                <button 
                    onclick="addWeaponToModule('${vehicle.id}', ${moduleIndex}, ${weaponIndex})" 
                    class="pill-button success-button" 
                    style="font-size: 0.7rem; padding: 0.3rem 0.6rem;"
                    ${!canAddMore ? 'disabled' : ''}
                >
                    ${canAddMore ? '‚ûï –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å' : '‚ùå –ú–µ—Å—Ç –Ω–µ—Ç'}
                </button>
            </div>
        </div>
    `).join('');
}

// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ä—É–∂–∏—è –≤ –º–æ–¥—É–ª—å
function addWeaponToModule(vehicleId, moduleIndex, weaponIndex) {
    
    
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle || !vehicle.modules || !vehicle.modules[moduleIndex]) {
        showToast('–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    const module = vehicle.modules[moduleIndex];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç
    if ((module.weapons?.length || 0) >= (module.maxWeapons || 1)) {
        showToast('–ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –¥–ª—è –æ—Ä—É–∂–∏—è!', 2000);
        return;
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –æ—Ä—É–∂–∏–µ
    let availableWeapons = state.weapons || [];
    
    if (module.name === '–ö—Ä–µ–ø–ª–µ–Ω–∏–µ –¥–ª—è —Ç—è–∂–µ–ª–æ–≥–æ –æ—Ä—É–∂–∏—è') {
        availableWeapons = availableWeapons.filter(w => 
            w.name?.includes('–ü–£–õ–ï–ú–Å–¢') || w.name?.includes('–†–ê–ö–ï–¢–û–ú–Å–¢')
        );
    } else if (module.name === '–†–∞–∫–µ—Ç–Ω—ã–π –∞–ø–ø–∞—Ä–∞—Ç') {
        availableWeapons = availableWeapons.filter(w => w.name?.includes('–†–ê–ö–ï–¢–û–ú–Å–¢'));
    }
    
    const weapon = availableWeapons[weaponIndex];
    if (!weapon) {
        showToast('–û—Ä—É–∂–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', 2000);
        return;
    }
    
    // –£–¥–∞–ª—è–µ–º –æ—Ä—É–∂–∏–µ –∏–∑ –±–ª–æ–∫–∞ "–û—Ä—É–∂–∏–µ"
    const weaponIndexInState = state.weapons.findIndex(w => w === weapon);
    if (weaponIndexInState !== -1) {
        state.weapons.splice(weaponIndexInState, 1);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ä—É–∂–∏–µ –≤ –º–æ–¥—É–ª—å
    if (!module.weapons) module.weapons = [];
    module.weapons.push(weapon);
    
    showToast(`–û—Ä—É–∂–∏–µ "${weapon.name}" —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ`, 2000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    if (typeof renderWeapons === 'function') renderWeapons();
    renderTransport();
    updateWeaponModuleModal(vehicleId, moduleIndex);
    
    
}

// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –æ—Ä—É–∂–∏—è –∏–∑ –º–æ–¥—É–ª—è
function removeWeaponFromModule(vehicleId, moduleIndex, weaponIndex) {
    
    
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle || !vehicle.modules || !vehicle.modules[moduleIndex]) {
        showToast('–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    const module = vehicle.modules[moduleIndex];
    
    if (!module.weapons || !module.weapons[weaponIndex]) {
        showToast('–û—Ä—É–∂–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', 2000);
        return;
    }
    
    const weapon = module.weapons[weaponIndex];
    
    // –£–¥–∞–ª—è–µ–º –æ—Ä—É–∂–∏–µ –∏–∑ –º–æ–¥—É–ª—è
    module.weapons.splice(weaponIndex, 1);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä—É–∂–∏–µ –≤ –±–ª–æ–∫ "–û—Ä—É–∂–∏–µ"
    if (!state.weapons) state.weapons = [];
    state.weapons.push(weapon);
    
    showToast(`–û—Ä—É–∂–∏–µ "${weapon.name}" —Å–Ω—è—Ç–æ`, 2000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    if (typeof renderWeapons === 'function') renderWeapons();
    renderTransport();
    updateWeaponModuleModal(vehicleId, moduleIndex);
    
    
}

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª–∞ –æ—Ä—É–∂–∏—è
function updateWeaponModuleModal(vehicleId, moduleIndex) {
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle) return;
    
    const installedList = document.getElementById('installedWeaponsList');
    const availableList = document.getElementById('availableWeaponsList');
    
    if (installedList) {
        installedList.innerHTML = renderInstalledWeapons(vehicle, moduleIndex);
    }
    
    if (availableList) {
        availableList.innerHTML = renderAvailableWeapons(vehicle, moduleIndex);
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∞ –æ—Ä—É–∂–∏—è
function closeWeaponModuleModal() {
    const modal = document.getElementById('weaponModuleModal');
    if (modal) {
        modal.remove();
    }
}

// ============================================================================
// –°–ò–°–¢–ï–ú–ê –ê–ö–¢–ò–í–ù–û–ô –ó–ê–©–ò–¢–´
// ============================================================================

// –§—É–Ω–∫—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞—â–∏—Ç–æ–π
function manageActiveDefense(vehicleId, moduleIndex) {
    
    
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle || !vehicle.modules || !vehicle.modules[moduleIndex]) {
        showToast('–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    const module = vehicle.modules[moduleIndex];
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    modal.id = 'activeDefenseModal';
    modal.innerHTML = `
        <div class="modal-content" style="max-width: 600px;">
            <div class="modal-header">
                <h3 style="color: ${getThemeColors().accent}; margin: 0;">‚ö° –ê–∫—Ç–∏–≤–Ω–∞—è –∑–∞—â–∏—Ç–∞</h3>
                <button onclick="closeActiveDefenseModal()" style="background: none; border: none; color: ${getThemeColors().muted}; font-size: 1.5rem; cursor: pointer;">&times;</button>
            </div>
            
            <div class="modal-body" style="padding: 1rem;">
                <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—Ä—è–¥–∞—Ö -->
                <div style="background: rgba(255, 193, 7, 0.1); border: 1px solid #ffc107; border-radius: 8px; padding: 1rem; margin-bottom: 1rem;">
                    <div style="display: flex; justify-content: space-between; align-items: center;">
                        <div>
                            <span style="color: ${getThemeColors().muted}; font-size: 0.9rem;">–ó–∞—Ä—è–¥—ã:</span>
                            <span style="color: #ffc107; font-size: 1.5rem; font-weight: bold; margin-left: 0.5rem;">${module.charges || 0} / ${module.maxCharges || 100}</span>
                        </div>
                        <div style="background: rgba(255, 193, 7, 0.2); padding: 0.5rem 1rem; border-radius: 6px;">
                            <span style="color: #ffc107; font-weight: bold;">${Math.floor(((module.charges || 0) / (module.maxCharges || 100)) * 100)}%</span>
                        </div>
                    </div>
                    <div style="background: ${getThemeColors().bgLight}; height: 8px; border-radius: 4px; margin-top: 0.5rem; overflow: hidden;">
                        <div style="background: #ffc107; height: 100%; width: ${Math.min(((module.charges || 0) / (module.maxCharges || 100)) * 100, 100)}%; transition: width 0.3s ease;"></div>
                    </div>
                </div>
                
                <!-- –¢–∏–ø –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞—â–∏—Ç—ã -->
                <div style="margin-bottom: 1rem;">
                    <h4 style="color: ${getThemeColors().accent}; margin: 0 0 0.5rem 0;">–¢–∏–ø –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞—â–∏—Ç—ã</h4>
                    ${module.type ? `
                        <div style="background: rgba(40, 167, 69, 0.1); border: 1px solid #28a745; border-radius: 6px; padding: 0.8rem;">
                            <div style="color: #28a745; font-weight: bold;">‚úÖ ${module.type}</div>
                        </div>
                    ` : `
                        <p style="color: ${getThemeColors().muted}; text-align: center; padding: 1rem;">–¢–∏–ø –Ω–µ –≤—ã–±—Ä–∞–Ω</p>
                        <div style="font-size: 0.8rem; color: ${getThemeColors().muted}; text-align: center;">
                            –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞—â–∏—Ç—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ –±–æ–µ–ø—Ä–∏–ø–∞—Å–æ–≤
                        </div>
                    `}
                </div>
                
                <!-- –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è -->
                <div style="display: flex; gap: 0.5rem; justify-content: center;">
                    <button onclick="reloadActiveDefense('${vehicleId}', ${moduleIndex})" class="pill-button success-button" style="font-size: 0.9rem; padding: 0.5rem 1rem;">
                        üîÑ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∏—Ç—å
                    </button>
                    <button onclick="useActiveDefenseCharge('${vehicleId}', ${moduleIndex})" class="pill-button warning-button" style="font-size: 0.9rem; padding: 0.5rem 1rem;" ${(module.charges || 0) <= 0 ? 'disabled' : ''}>
                        ‚ö° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–∞—Ä—è–¥
                    </button>
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞—â–∏—Ç—ã
function reloadActiveDefense(vehicleId, moduleIndex) {
    
    
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle || !vehicle.modules || !vehicle.modules[moduleIndex]) {
        showToast('–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    const module = vehicle.modules[moduleIndex];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–ª–æ–Ω –ª–∏ —É–∂–µ
    if ((module.charges || 0) >= (module.maxCharges || 100)) {
        showToast('–ê–∫—Ç–∏–≤–Ω–∞—è –∑–∞—â–∏—Ç–∞ —É–∂–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞—Ä—è–∂–µ–Ω–∞!', 2000);
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–æ–µ–ø—Ä–∏–ø–∞—Å–æ–≤ –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏
    // TODO: –î–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–æ–∫—É–ø–∫–∏ –±–æ–µ–ø—Ä–∏–ø–∞—Å–æ–≤ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞—â–∏—Ç—ã
    
    // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞—Ä—è–∂–∞–µ–º
    const chargesAdded = (module.maxCharges || 100) - (module.charges || 0);
    module.charges = module.maxCharges || 100;
    
    showToast(`–ê–∫—Ç–∏–≤–Ω–∞—è –∑–∞—â–∏—Ç–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–∂–µ–Ω–∞! –î–æ–±–∞–≤–ª–µ–Ω–æ –∑–∞—Ä—è–¥–æ–≤: ${chargesAdded}`, 2000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    renderTransport();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–æ–¥–∞–ª
    const modal = document.getElementById('activeDefenseModal');
    if (modal) {
        closeActiveDefenseModal();
        manageActiveDefense(vehicleId, moduleIndex);
    }
    
    
}

// –§—É–Ω–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∑–∞—Ä—è–¥–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞—â–∏—Ç—ã
function useActiveDefenseCharge(vehicleId, moduleIndex) {
    
    
    const vehicle = state.property.vehicles?.find(v => v.id === vehicleId);
    if (!vehicle || !vehicle.modules || !vehicle.modules[moduleIndex]) {
        showToast('–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    const module = vehicle.modules[moduleIndex];
    
    if ((module.charges || 0) <= 0) {
        showToast('–ù–µ—Ç –∑–∞—Ä—è–¥–æ–≤!', 2000);
        return;
    }
    
    module.charges = (module.charges || 0) - 1;
    
    showToast(`–ó–∞—Ä—è–¥ –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞—â–∏—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω! –û—Å—Ç–∞–ª–æ—Å—å: ${module.charges}`, 2000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    renderTransport();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–æ–¥–∞–ª
    const modal = document.getElementById('activeDefenseModal');
    if (modal) {
        closeActiveDefenseModal();
        manageActiveDefense(vehicleId, moduleIndex);
    }
    
    
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞—â–∏—Ç—ã
function closeActiveDefenseModal() {
    const modal = document.getElementById('activeDefenseModal');
    if (modal) {
        modal.remove();
    }
}

// ============================================================================
// –°–û–•–†–ê–ù–ï–ù–ò–ï –ò –£–¢–ò–õ–ò–¢–´
// ============================================================================

// –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function saveTransportState() {
    
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ state.property.vehicles
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ localStorage
    try {
        localStorage.setItem('transportState', JSON.stringify(state.property.vehicles));
        
    } catch (e) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ localStorage:', e);
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function loadTransportState() {
    
    
    try {
        const saved = localStorage.getItem('transportState');
        if (saved) {
            const vehicles = JSON.parse(saved);
            if (Array.isArray(vehicles)) {
                state.property.vehicles = vehicles;
                
                return true;
            }
        }
    } catch (e) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ localStorage:', e);
    }
    
    return false;
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function forceUpdateTransportUI() {
    
    renderTransport();
    
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ - –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
function addTestVehicle() {
    
    
    const testVehicle = {
        id: generateVehicleId(),
        name: '–¢–µ—Å—Ç–æ–≤–∞—è –º–∞—à–∏–Ω–∞',
        description: '–¢–µ—Å—Ç–æ–≤—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ —Å–∏—Å—Ç–µ–º—ã',
        category: 'ground',
        hp: 100,
        currentHp: 100,
        os: 10,
        currentOs: 10,
        seats: 4,
        mechanicalSpeed: 15,
        narrativeSpeed: '120 –∫–º/—á',
        price: 50000,
        catalogPrice: 50000, // –¶–µ–Ω–∞ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É
        purchasePrice: 50000, // –¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏
        itemType: 'test', // –¢–∏–ø –ø—Ä–µ–¥–º–µ—Ç–∞
        modules: [],
        trunk: {
            capacity: 200,
            items: []
        },
        smugglerCompartment: {
            capacity: 100,
            items: []
        },
        baseHp: 100,
        baseSpeed: 15,
        baseSeats: 4
    };
    
    if (!state.property.vehicles) {
        state.property.vehicles = [];
    }
    state.property.vehicles.push(testVehicle);
    
    renderTransport();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    scheduleSave();
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∞ —Ä—é–∫–∑–∞–∫–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞
function openBikeBackpackModal(vehicle) {
    
    
    // –ù–∞—Ö–æ–¥–∏–º –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π —Ä—é–∫–∑–∞–∫
    const backpack = state.gear.find(g => g.id === vehicle.trunk.linkedBackpackId);
    if (!backpack) {
        showToast('–†—é–∫–∑–∞–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    modal.setAttribute('data-bike-backpack-modal', 'true');
    modal.setAttribute('data-vehicle-id', vehicle.id);
    const existingModals = document.querySelectorAll('.modal-overlay');
    modal.style.zIndex = 1000 + (existingModals.length * 100);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å–∫—Ä–æ–ª–ª–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
    const originalRemove = modal.remove.bind(modal);
    modal.remove = function() {
        document.body.style.overflow = '';
        originalRemove();
    };
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–¥–∞–ª–∞
    updateBikeBackpackModalContent(modal, vehicle, backpack);
    
    document.body.appendChild(modal);
    
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            closeModal(modal.querySelector('.icon-button'));
        }
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä—é–∫–∑–∞–∫–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞
function updateBikeBackpackModalContent(modal, vehicle, backpack) {
    const usedLoad = (backpack.storage || []).reduce((sum, i) => sum + (parseFloat(i.load) || 0), 0);
    const maxLoad = 32;
    
    modal.innerHTML = `
        <div class="modal" style="max-width: 700px;">
            <div class="modal-header">
                <h3>üéí –†—é–∫–∑–∞–∫ –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ: ${vehicle.name}</h3>
                <button class="icon-button" onclick="closeModal(this)">√ó</button>
            </div>
            <div class="modal-body">
                <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—É–∑–∫–µ -->
                <div style="background: ${getThemeColors().accentLight}; border: 1px solid var(--accent); border-radius: 8px; padding: 1rem; margin-bottom: 1rem;">
                    <div style="display: flex; justify-content: space-between; align-items: center;">
                        <div>
                            <span style="color: ${getThemeColors().muted}; font-size: 0.9rem;">–ó–∞–≥—Ä—É–∑–∫–∞:</span>
                            <span style="color: ${getThemeColors().accent}; font-size: 1.2rem; font-weight: bold; margin-left: 0.5rem;">${usedLoad} / ${maxLoad}</span>
                        </div>
                        <div style="background: ${getThemeColors().accentLight}; padding: 0.5rem 1rem; border-radius: 6px;">
                            <span style="color: ${getThemeColors().accent}; font-weight: bold;">${Math.floor((usedLoad / maxLoad) * 100)}%</span>
                        </div>
                    </div>
                    <div style="background: ${getThemeColors().bgLight}; height: 8px; border-radius: 4px; margin-top: 0.5rem; overflow: hidden;">
                        <div style="background: var(--accent); height: 100%; width: ${Math.min((usedLoad / maxLoad) * 100, 100)}%; transition: width 0.3s ease;"></div>
                    </div>
                </div>
                
                <!-- –ü—Ä–µ–¥–º–µ—Ç—ã –≤ —Ä—é–∫–∑–∞–∫–µ -->
                <div style="margin-bottom: 2rem;">
                    <h4 style="color: ${getThemeColors().accent}; margin: 0 0 1rem 0;">–ü—Ä–µ–¥–º–µ—Ç—ã –≤ —Ä—é–∫–∑–∞–∫–µ</h4>
                    <div id="bikeBackpackItemsList">
                        ${renderBikeBackpackItems(backpack)}
                    </div>
                </div>
                
                <!-- –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏ -->
                <div>
                    <h4 style="color: ${getThemeColors().accent}; margin: 0 0 1rem 0;">–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–∏</h4>
                    <div id="availableGearForBikeBackpack">
                        ${renderAvailableGearForBikeBackpack(backpack)}
                    </div>
                </div>
            </div>
        </div>
    `;
}

// –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ —Ä—é–∫–∑–∞–∫–µ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞
function renderBikeBackpackItems(backpack) {
    if (!backpack.storage || backpack.storage.length === 0) {
        return '<p style="color: ${getThemeColors().muted}; text-align: center; padding: 2rem;">–†—é–∫–∑–∞–∫ –ø—É—Å—Ç</p>';
    }
    
    return backpack.storage.map((item, index) => `
        <div style="
            background: linear-gradient(135deg, rgba(40, 167, 69, 0.1) 0%, rgba(40, 167, 69, 0.05) 100%);
            border: 2px solid #28a745;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1rem;
        ">
            <div style="display: flex; justify-content: space-between; align-items: flex-start;">
                <div style="flex: 1;">
                    <h5 style="color: #28a745; margin: 0 0 0.5rem 0;">üì¶ ${item.name}</h5>
                    <p style="color: ${getThemeColors().text}; font-size: 0.9rem; margin: 0 0 0.5rem 0;">${item.description || ''}</p>
                    <div style="font-size: 0.8rem; color: ${getThemeColors().muted};">
                        ‚öñÔ∏è –ù–∞–≥—Ä—É–∑–∫–∞: ${item.load || 0}
                    </div>
                </div>
                <button 
                    onclick="removeItemFromBikeBackpack('${backpack.id}', ${index})"
                    class="pill-button danger-button"
                    style="font-size: 0.8rem; padding: 0.4rem 0.8rem;"
                >
                    ‚ùå –£–±—Ä–∞—Ç—å
                </button>
            </div>
        </div>
    `).join('');
}

// –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è –¥–ª—è —Ä—é–∫–∑–∞–∫–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞
function renderAvailableGearForBikeBackpack(backpack) {
    const usedLoad = (backpack.storage || []).reduce((sum, i) => sum + (parseFloat(i.load) || 0), 0);
    const maxLoad = 32;
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ (–∏—Å–∫–ª—é—á–∞–µ–º —Ä—é–∫–∑–∞–∫–∏ –∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–∏–ø—ã –ø—Ä–µ–¥–º–µ—Ç–æ–≤)
    const availableGear = state.gear?.filter(item => {
        // –ò—Å–∫–ª—é—á–∞–µ–º —Ä—é–∫–∑–∞–∫–∏
        if (getGearSpecialType(item.name) === 'backpack') return false;
        
        // –ò—Å–∫–ª—é—á–∞–µ–º —É–∂–µ –Ω–∞—Ö–æ–¥—è—â–∏–µ—Å—è –≤ —Ä—é–∫–∑–∞–∫–µ
        if (backpack.storage.some(storageItem => storageItem.id === item.id)) return false;
        
        // –ò—Å–∫–ª—é—á–∞–µ–º –º–æ–¥—É–ª–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
        const isModule = VEHICLE_MODULES_LIBRARY.ground?.some(m => m.name === item.name) ||
                        VEHICLE_MODULES_LIBRARY.air?.some(m => m.name === item.name) ||
                        VEHICLE_MODULES_LIBRARY.water?.some(m => m.name === item.name);
        if (isModule) return false;
        
        // –ò—Å–∫–ª—é—á–∞–µ–º –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ –∫ –≤–µ–ª–æ—Å–∏–ø–µ–¥—É –ø—Ä–µ–¥–º–µ—Ç—ã
        if (item.attachedToBike) return false;
        
        return true;
    }) || [];
    
    if (availableGear.length === 0) {
        return '<p style="color: ${getThemeColors().muted}; text-align: center; padding: 2rem;">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤</p>';
    }
    
    return availableGear.map((item, index) => {
        const itemLoad = parseFloat(item.load) || 0;
        const canFit = (usedLoad + itemLoad) <= maxLoad;
        const gearIndex = state.gear.findIndex(g => g.id === item.id);
        
        return `
            <div style="
                background: linear-gradient(135deg, rgba(182, 103, 255, 0.1) 0%, rgba(182, 103, 255, 0.05) 100%);
                border: 2px solid var(--accent);
                border-radius: 8px;
                padding: 1rem;
                margin-bottom: 1rem;
                ${!canFit ? 'opacity: 0.5;' : ''}
            ">
                <div style="display: flex; justify-content: space-between; align-items: flex-start;">
                    <div style="flex: 1;">
                        <h5 style="color: ${getThemeColors().accent}; margin: 0 0 0.5rem 0;">üì¶ ${item.name}</h5>
                        <p style="color: ${getThemeColors().text}; font-size: 0.9rem; margin: 0 0 0.5rem 0;">${item.description || ''}</p>
                        <div style="font-size: 0.8rem; color: ${getThemeColors().muted};">
                            ‚öñÔ∏è –ù–∞–≥—Ä—É–∑–∫–∞: ${itemLoad}
                        </div>
                    </div>
                    <button 
                        onclick="addItemToBikeBackpack('${backpack.id}', ${gearIndex})"
                        class="pill-button ${canFit ? 'success-button' : 'disabled-button'}"
                        style="font-size: 0.8rem; padding: 0.4rem 0.8rem;"
                        ${!canFit ? 'disabled' : ''}
                    >
                        ${canFit ? '‚úÖ –î–æ–±–∞–≤–∏—Ç—å' : '‚ùå –ù–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è'}
                    </button>
                </div>
            </div>
        `;
    }).join('');
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ –≤ —Ä—é–∫–∑–∞–∫–µ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞
function addItemToBikeBackpack(backpackId, itemIndex) {
    const backpack = state.gear.find(g => g.id === backpackId);
    const item = state.gear[itemIndex];
    
    if (!backpack || !item) return;
    
    const usedLoad = (backpack.storage || []).reduce((sum, i) => sum + (parseFloat(i.load) || 0), 0);
    const itemLoad = parseFloat(item.load) || 0;
    const maxLoad = 32;
    
    if ((usedLoad + itemLoad) > maxLoad) {
        showToast('–ü—Ä–µ–¥–º–µ—Ç –Ω–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ —Ä—é–∫–∑–∞–∫!', 2000);
        return;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ —Ä—é–∫–∑–∞–∫
    backpack.storage.push({...item});
    
    // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è
    state.gear.splice(itemIndex, 1);
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å –±–∞–≥–∞–∂–Ω–∏–∫–æ–º –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞
    const bikeVehicle = state.property.vehicles.find(v => v.trunk && v.trunk.linkedBackpackId === backpackId);
    if (bikeVehicle) {
        bikeVehicle.trunk.items = [...backpack.storage];
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const modal = document.querySelector('[data-bike-backpack-modal="true"]');
    if (modal) {
        updateBikeBackpackModalContent(modal, bikeVehicle, backpack);
    }
    
    renderGear();
    renderTransport();
    scheduleSave();
    
    showToast('–ü—Ä–µ–¥–º–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä—é–∫–∑–∞–∫!', 2000);
}

function removeItemFromBikeBackpack(backpackId, itemIndex) {
    const backpack = state.gear.find(g => g.id === backpackId);
    
    if (!backpack || !backpack.storage[itemIndex]) return;
    
    const item = backpack.storage[itemIndex];
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
    state.gear.push({...item});
    
    // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Ä—é–∫–∑–∞–∫–∞
    backpack.storage.splice(itemIndex, 1);
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å –±–∞–≥–∞–∂–Ω–∏–∫–æ–º –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞
    const bikeVehicle = state.property.vehicles.find(v => v.trunk && v.trunk.linkedBackpackId === backpackId);
    if (bikeVehicle) {
        bikeVehicle.trunk.items = [...backpack.storage];
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const modal = document.querySelector('[data-bike-backpack-modal="true"]');
    if (modal) {
        updateBikeBackpackModalContent(modal, bikeVehicle, backpack);
    }
    
    renderGear();
    renderTransport();
    scheduleSave();
    
    showToast('–ü—Ä–µ–¥–º–µ—Ç —É–±—Ä–∞–Ω –∏–∑ —Ä—é–∫–∑–∞–∫–∞!', 2000);
}

// –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –æ—Ä—É–∂–∏—è –≤ –º–æ–¥—É–ª–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ renderDroneWeapon)
function renderVehicleModuleWeapon(weapon, vehicleId, moduleIndex) {
    if (!weapon) return '';
    
    const vehicle = state.property.vehicles.find(v => v.id === vehicleId);
    const module = vehicle?.modules[moduleIndex];
    
    return `
        <div class="weapon-item" style="background: ${getThemeColors().bgMedium}; border: 1px solid rgba(182, 103, 255, 0.3); border-radius: 6px; padding: 0.5rem; margin-bottom: 0.5rem;">
            <div style="color: ${getThemeColors().accent}; font-weight: 600; font-size: 0.85rem; margin-bottom: 0.25rem;">
                ${weapon.customName || weapon.name}
            </div>
            
            <div class="weapon-damage" style="margin-bottom: 0.5rem;">
                <div style="display: flex; align-items: center; gap: 0.5rem; margin-bottom: 0.25rem;">
                    <span style="color: ${getThemeColors().text}; font-weight: 600; font-size: 0.75rem;">–£—Ä–æ–Ω –æ—Å–Ω–æ–≤–Ω–æ–π:</span>
                    <button class="pill-button primary-button" onclick="rollVehicleModuleWeaponDamage('${vehicleId}', ${moduleIndex}, '${weapon.primaryDamage}', '${weapon.name}', '${weapon.id}', 'primary')" style="font-size: 0.75rem; padding: 0.25rem 0.5rem;">${weapon.primaryDamage}</button>
                </div>
                ${weapon.altDamage && weapon.altDamage !== '‚Äî' ? `
                    <div style="display: flex; align-items: center; gap: 0.5rem;">
                        <span style="color: ${getThemeColors().text}; font-weight: 600; font-size: 0.75rem;">–£—Ä–æ–Ω –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π:</span>
                        <button class="pill-button primary-button" onclick="rollVehicleModuleWeaponDamage('${vehicleId}', ${moduleIndex}, '${weapon.altDamage}', '${weapon.name}', '${weapon.id}', 'alt')" style="font-size: 0.75rem; padding: 0.25rem 0.5rem;">${weapon.altDamage}</button>
                    </div>
                ` : ''}
            </div>
            
            <div class="weapon-stats" style="font-family: monospace; font-size: 0.65rem; color: ${getThemeColors().muted}; margin-bottom: 0.5rem;">
                –ú–æ–∂–Ω–æ —Å–∫—Ä—ã—Ç—å: ${formatYesNo(weapon.concealable)} | # —Ä—É–∫: ${weapon.hands} | –°–ö–ê: ${weapon.stealth} | –ü–∞—Ç—Ä–æ–Ω–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ: ${weapon.magazine}
            </div>
            
            <div class="weapon-magazine" style="margin-bottom: 0.5rem;">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.25rem;">
                    <span style="color: ${getThemeColors().accent}; font-weight: 600; font-size: 0.75rem;">–ü–∞—Ç—Ä–æ–Ω—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ:</span>
                    <button class="pill-button success-button" onclick="reloadVehicleModuleWeapon('${vehicleId}', ${moduleIndex})" style="font-size: 0.65rem; padding: 0.2rem 0.4rem;">üîÑ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∏—Ç—å</button>
                </div>
                <div style="display: flex; align-items: center; gap: 0.5rem;">
                    <div style="background: ${getThemeColors().accentLight}; border: 1px solid var(--accent); border-radius: 4px; padding: 0.2rem 0.4rem; font-size: 0.7rem;">
                        <span style="color: ${getThemeColors().accent}; font-weight: 600;">${weapon.currentAmmo || 0}</span>
                        <span style="color: ${getThemeColors().muted};">/</span>
                        <span style="color: ${getThemeColors().text};">${weapon.maxAmmo || weapon.magazine}</span>
                    </div>
                    ${weapon.loadedAmmoType ? `
                        <div style="font-size: 0.7rem; color: ${getThemeColors().success}; font-family: monospace;">
                            ${weapon.loadedAmmoType}
                        </div>
                    ` : `
                        <div style="font-size: 0.7rem; color: ${getThemeColors().muted}; font-style: italic;">
                            –ù–µ –∑–∞—Ä—è–∂–µ–Ω–æ
                        </div>
                    `}
                </div>
            </div>
        </div>
    `;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—Ä–æ—Å–∫–∞ —É—Ä–æ–Ω–∞ —Å –æ—Ä—É–∂–∏—è –≤ –º–æ–¥—É–ª–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function rollVehicleModuleWeaponDamage(vehicleId, moduleIndex, damageFormula, weaponName, weaponId, damageType) {
    const vehicle = state.property.vehicles.find(v => v.id === vehicleId);
    if (!vehicle || !vehicle.modules || !vehicle.modules[moduleIndex]) return;
    
    const module = vehicle.modules[moduleIndex];
    const weapon = module.weapons?.find(w => w.id === weaponId);
    
    if (!weapon) return;
    
    // –í—Ä–µ–º–µ–Ω–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –æ—Ä—É–∂–∏–µ –≤ state.weapons –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
    const tempWeapon = {...weapon};
    state.weapons.push(tempWeapon);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –æ—Ä—É–∂–∏–µ –≤ –º–æ–¥—É–ª–µ
    window._currentVehicleWeapon = {
        vehicleId: vehicleId,
        moduleIndex: moduleIndex,
        weaponId: weaponId,
        tempWeaponId: tempWeapon.id
    };
    
    // –í—ã–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –±—Ä–æ—Å–∫–∞ —É—Ä–æ–Ω–∞
    const weaponType = weapon.type || 'ranged';
    rollWeaponDamage(damageFormula, weaponName, weaponType, tempWeapon.id, damageType);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
    if (window._vehicleWeaponSyncInterval) {
        clearInterval(window._vehicleWeaponSyncInterval);
    }
    
    window._vehicleWeaponSyncInterval = setInterval(() => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–∫—Ä—ã—Ç –ª–∏ –º–æ–¥–∞–ª
        const weaponModal = document.getElementById('weaponDamageModal');
        if (!weaponModal) {
            // –ú–æ–¥–∞–ª –∑–∞–∫—Ä—ã—Ç - –¥–µ–ª–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª
            syncVehicleWeaponAfterRoll();
            if (window._vehicleWeaponSyncInterval) {
                clearInterval(window._vehicleWeaponSyncInterval);
                window._vehicleWeaponSyncInterval = null;
            }
        } else {
            // –ú–æ–¥–∞–ª –æ—Ç–∫—Ä—ã—Ç - —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            syncVehicleWeaponDuringRoll();
        }
    }, 500);
}

// –§—É–Ω–∫—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –æ—Ä—É–∂–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–∞–ª–æ–º
function syncVehicleWeaponDuringRoll() {
    if (!window._currentVehicleWeapon) return;
    
    const { vehicleId, moduleIndex, weaponId } = window._currentVehicleWeapon;
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ—Ä—É–∂–∏–µ –≤ state.weapons
    const tempWeapon = state.weapons.find(w => w.id === weaponId);
    if (tempWeapon) {
        // –ù–∞—Ö–æ–¥–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –æ—Ä—É–∂–∏–µ –≤ –º–æ–¥—É–ª–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
        const vehicle = state.property.vehicles.find(v => v.id === vehicleId);
        if (vehicle && vehicle.modules && vehicle.modules[moduleIndex]) {
            const module = vehicle.modules[moduleIndex];
            const weaponIndex = module.weapons?.findIndex(w => w.id === weaponId);
            
            if (weaponIndex !== -1) {
                // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–ø–∞—Ç—Ä–æ–Ω—ã –∏ —Ç.–¥.)
                module.weapons[weaponIndex].currentAmmo = tempWeapon.currentAmmo;
                module.weapons[weaponIndex].loadedAmmoType = tempWeapon.loadedAmmoType;
                module.weapons[weaponIndex].maxAmmo = tempWeapon.maxAmmo;
            }
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –æ—Ä—É–∂–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –ø–æ—Å–ª–µ –±—Ä–æ—Å–∫–∞ (—Ñ–∏–Ω–∞–ª—å–Ω–∞—è)
function syncVehicleWeaponAfterRoll() {
    if (!window._currentVehicleWeapon) return;
    
    const { vehicleId, moduleIndex, weaponId } = window._currentVehicleWeapon;
    
    // –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    syncVehicleWeaponDuringRoll();
    
    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ—Ä—É–∂–∏–µ –∏–∑ state.weapons
    const weaponIndexInState = state.weapons.findIndex(w => w.id === weaponId);
    if (weaponIndexInState !== -1) {
        state.weapons.splice(weaponIndexInState, 1);
    }
    
    // –û—á–∏—â–∞–µ–º —Å—Å—ã–ª–∫—É
    window._currentVehicleWeapon = null;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    renderTransport();
    scheduleSave();
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏ –æ—Ä—É–∂–∏—è –≤ –º–æ–¥—É–ª–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function reloadVehicleModuleWeapon(vehicleId, moduleIndex) {
    const vehicle = state.property.vehicles.find(v => v.id === vehicleId);
    if (!vehicle || !vehicle.modules || !vehicle.modules[moduleIndex]) return;
    
    const module = vehicle.modules[moduleIndex];
    const weapons = module.weapons || [];
    
    if (weapons.length === 0) return;
    
    // –ï—Å–ª–∏ –æ—Ä—É–∂–∏–µ –æ–¥–Ω–æ, –ø–µ—Ä–µ–∑–∞—Ä—è–∂–∞–µ–º –µ–≥–æ
    if (weapons.length === 1) {
        reloadVehicleModuleWeaponStandard(vehicleId, moduleIndex, 0);
        return;
    }
    
    // –ï—Å–ª–∏ –æ—Ä—É–∂–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    modal.innerHTML = `
        <div class="modal" style="max-width: 400px;">
            <div class="modal-header">
                <h3>üîÑ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞ –æ—Ä—É–∂–∏—è</h3>
                <button class="icon-button" onclick="closeModal(this)">√ó</button>
            </div>
            <div class="modal-body">
                <p style="color: ${getThemeColors().text}; margin-bottom: 1rem;">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ä—É–∂–∏–µ –¥–ª—è –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏:</p>
                ${weapons.map((weapon, weaponIndex) => `
                    <button class="pill-button primary-button" onclick="reloadVehicleModuleWeaponStandard('${vehicleId}', ${moduleIndex}, ${weaponIndex})">
                        ${weapon.customName || weapon.name}
                    </button>
                `).join('')}
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
}

// –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞ –æ—Ä—É–∂–∏—è –≤ –º–æ–¥—É–ª–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Å–∏—Å—Ç–µ–º—É
function reloadVehicleModuleWeaponStandard(vehicleId, moduleIndex, weaponIndex) {
    const vehicle = state.property.vehicles.find(v => v.id === vehicleId);
    if (!vehicle || !vehicle.modules || !vehicle.modules[moduleIndex]) return;
    
    const module = vehicle.modules[moduleIndex];
    const weapon = module.weapons?.[weaponIndex];
    
    if (!weapon) return;
    
    // –í—Ä–µ–º–µ–Ω–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –æ—Ä—É–∂–∏–µ –≤ state.weapons –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
    const tempWeapon = {...weapon};
    state.weapons.push(tempWeapon);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –æ—Ä—É–∂–∏–µ –≤ –º–æ–¥—É–ª–µ
    window._currentVehicleWeapon = {
        vehicleId: vehicleId,
        moduleIndex: moduleIndex,
        weaponId: weapon.id,
        tempWeaponId: tempWeapon.id
    };
    
    // –í—ã–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏
    reloadWeapon(tempWeapon.id);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
    if (window._vehicleWeaponSyncInterval) {
        clearInterval(window._vehicleWeaponSyncInterval);
    }
    
    window._vehicleWeaponSyncInterval = setInterval(() => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–∫—Ä—ã—Ç—ã –ª–∏ –≤—Å–µ –º–æ–¥–∞–ª—ã
        const modals = document.querySelectorAll('.modal-overlay');
        if (modals.length === 0) {
            // –ú–æ–¥–∞–ª—ã –∑–∞–∫—Ä—ã—Ç—ã - –¥–µ–ª–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª
            syncVehicleWeaponAfterRoll();
            if (window._vehicleWeaponSyncInterval) {
                clearInterval(window._vehicleWeaponSyncInterval);
                window._vehicleWeaponSyncInterval = null;
            }
        } else {
            // –ú–æ–¥–∞–ª –æ—Ç–∫—Ä—ã—Ç - —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            syncVehicleWeaponDuringRoll();
        }
    }, 500);
}

// –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞ –æ—Ä—É–∂–∏—è –≤ –º–æ–¥—É–ª–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–æ–µ–ø—Ä–∏–ø–∞—Å–æ–≤
function reloadVehicleModuleWeaponWithAmmo(vehicleId, moduleIndex, weaponIndex) {
    const vehicle = state.property.vehicles.find(v => v.id === vehicleId);
    if (!vehicle || !vehicle.modules || !vehicle.modules[moduleIndex]) return;
    
    const module = vehicle.modules[moduleIndex];
    const weapon = module.weapons?.[weaponIndex];
    
    if (!weapon || weapon.type !== 'ranged') {
        showModal('–û—à–∏–±–∫–∞', '–û—Ä—É–∂–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–∞–ª—å–Ω–∏–º!');
        return;
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—Ä—É–∂–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –±–æ–µ–ø—Ä–∏–ø–∞—Å–æ–≤
    const weaponTypeForAmmo = getWeaponTypeForAmmo(weapon.name);
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –±–æ–µ–ø—Ä–∏–ø–∞—Å—ã
    const compatibleAmmo = state.ammo.filter(ammo => 
        ammo.weaponType === weaponTypeForAmmo && ammo.quantity > 0
    );
    
    if (compatibleAmmo.length === 0) {
        showModal('–ù–µ—Ç –±–æ–µ–ø—Ä–∏–ø–∞—Å–æ–≤', `
            <div style="text-align: center; padding: 1rem;">
                <p style="color: ${getThemeColors().danger}; font-size: 1.1rem; margin-bottom: 1rem;">–£ –≤–∞—Å –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –±–æ–µ–ø—Ä–∏–ø–∞—Å–æ–≤!</p>
                <p style="color: ${getThemeColors().muted}; margin-bottom: 1rem;">–ö—É–ø–∏—Ç–µ –±–æ–µ–ø—Ä–∏–ø–∞—Å—ã –¥–ª—è ${weaponTypeForAmmo}</p>
            </div>
        `);
        return;
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π —Å–∫—Ä–æ–ª–ª–∞
    document.body.style.overflow = 'hidden';
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    const existingModals = document.querySelectorAll('.modal-overlay');
    modal.style.zIndex = 1000 + (existingModals.length * 100);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å–∫—Ä–æ–ª–ª–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
    const originalRemove = modal.remove.bind(modal);
    modal.remove = function() {
        document.body.style.overflow = '';
        originalRemove();
    };
    modal.innerHTML = `
        <div class="modal" style="max-width: 500px;">
            <div class="modal-header">
                <h3>üîÑ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞: ${weapon.name}</h3>
                <button class="icon-button" onclick="closeModal(this)">√ó</button>
            </div>
            <div class="modal-body">
                <div style="margin-bottom: 1rem;">
                    <p style="color: ${getThemeColors().text}; margin-bottom: 0.5rem;"><strong>–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:</strong></p>
                    <p style="color: ${getThemeColors().muted}; font-size: 0.9rem;">
                        –ü–∞—Ç—Ä–æ–Ω–æ–≤: ${weapon.currentAmmo || 0}/${weapon.maxAmmo || weapon.magazine}
                        ${weapon.loadedAmmoType ? ` | –¢–∏–ø: ${weapon.loadedAmmoType}` : ' | –ù–µ –∑–∞—Ä—è–∂–µ–Ω–æ'}
                    </p>
                </div>
                
                <div style="margin-bottom: 1rem;">
                    <label class="input-label">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –±–æ–µ–ø—Ä–∏–ø–∞—Å–æ–≤</label>
                    <select class="input-field" id="vehicleReloadAmmoType">
                        ${compatibleAmmo.map((ammo, index) => `
                            <option value="${index}">${ammo.type} (${ammo.quantity} —à—Ç.)</option>
                        `).join('')}
                    </select>
                </div>
                
                <div id="vehicleReloadWarning" style="margin-bottom: 1rem; padding: 0.75rem; background: rgba(255, 165, 0, 0.1); border: 1px solid orange; border-radius: 8px; display: none;">
                    <p style="color: orange; font-size: 0.9rem; margin-bottom: 0.5rem;">‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ!</p>
                    <p style="color: ${getThemeColors().text}; font-size: 0.8rem;" id="vehicleReloadWarningText">
                        –í –º–∞–≥–∞–∑–∏–Ω–µ –µ—Å—Ç—å –ø–∞—Ç—Ä–æ–Ω—ã –¥—Ä—É–≥–æ–≥–æ —Ç–∏–ø–∞. –ü—Ä–∏ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ –æ–Ω–∏ –±—É–¥—É—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –±–ª–æ–∫ –ë–æ–µ–ø—Ä–∏–ø–∞—Å—ã.
                    </p>
                </div>
            </div>
            <div class="modal-footer">
                <button class="pill-button primary-button" onclick="executeVehicleModuleReload('${vehicleId}', ${moduleIndex}, ${weaponIndex})">
                    üîÑ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∏—Ç—å
                </button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ –±–æ–µ–ø—Ä–∏–ø–∞—Å–æ–≤
    setTimeout(() => {
        const ammoSelect = document.getElementById('vehicleReloadAmmoType');
        const warningDiv = document.getElementById('vehicleReloadWarning');
        const warningText = document.getElementById('vehicleReloadWarningText');
        
        function checkAmmoTypeChange() {
            const selectedIndex = parseInt(ammoSelect.value);
            const selectedAmmo = compatibleAmmo[selectedIndex];
            
            if (weapon.currentAmmo > 0 && weapon.loadedAmmoType && weapon.loadedAmmoType !== selectedAmmo.type) {
                warningDiv.style.display = 'block';
                warningText.textContent = `–í –º–∞–≥–∞–∑–∏–Ω–µ –µ—Å—Ç—å –ø–∞—Ç—Ä–æ–Ω—ã —Ç–∏–ø–∞ "${weapon.loadedAmmoType}" (${weapon.currentAmmo} —à—Ç.). –ü—Ä–∏ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ –æ–Ω–∏ –±—É–¥—É—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –±–ª–æ–∫ –ë–æ–µ–ø—Ä–∏–ø–∞—Å—ã.`;
            } else {
                warningDiv.style.display = 'none';
            }
        }
        
        ammoSelect.addEventListener('change', checkAmmoTypeChange);
        checkAmmoTypeChange(); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    }, 100);
}

// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏ –æ—Ä—É–∂–∏—è –≤ –º–æ–¥—É–ª–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function executeVehicleModuleReload(vehicleId, moduleIndex, weaponIndex) {
    const vehicle = state.property.vehicles.find(v => v.id === vehicleId);
    if (!vehicle || !vehicle.modules || !vehicle.modules[moduleIndex]) return;
    
    const module = vehicle.modules[moduleIndex];
    const weapon = module.weapons?.[weaponIndex];
    
    if (!weapon) return;
    
    const selectedAmmoIndex = parseInt(document.getElementById('vehicleReloadAmmoType').value);
    const weaponTypeForAmmo = getWeaponTypeForAmmo(weapon.name);
    const compatibleAmmo = state.ammo.filter(ammo => 
        ammo.weaponType === weaponTypeForAmmo && ammo.quantity > 0
    );
    const selectedAmmo = compatibleAmmo[selectedAmmoIndex];
    
    if (!selectedAmmo) {
        showModal('–û—à–∏–±–∫–∞', '–í—ã–±—Ä–∞–Ω–Ω—ã–µ –±–æ–µ–ø—Ä–∏–ø–∞—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
        return;
    }
    
    // –ï—Å–ª–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –µ—Å—Ç—å –ø–∞—Ç—Ä–æ–Ω—ã –¥—Ä—É–≥–æ–≥–æ —Ç–∏–ø–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Ö –≤ –±–ª–æ–∫ –ë–æ–µ–ø—Ä–∏–ø–∞—Å—ã
    if (weapon.currentAmmo > 0 && weapon.loadedAmmoType && weapon.loadedAmmoType !== selectedAmmo.type) {
        const existingAmmoIndex = state.ammo.findIndex(a => 
            a.type === weapon.loadedAmmoType && a.weaponType === weaponTypeForAmmo
        );
        
        if (existingAmmoIndex !== -1) {
            state.ammo[existingAmmoIndex].quantity += weapon.currentAmmo;
        } else {
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç–∏–ø –±–æ–µ–ø—Ä–∏–ø–∞—Å–æ–≤
            const newAmmo = {
                id: generateId('ammo'),
                type: weapon.loadedAmmoType,
                weaponType: weaponTypeForAmmo,
                quantity: weapon.currentAmmo,
                price: 0
            };
            state.ammo.push(newAmmo);
        }
    }
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–æ–ª—å–∫–æ –ø–∞—Ç—Ä–æ–Ω–æ–≤ –Ω—É–∂–Ω–æ –¥–ª—è –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏
    const ammoNeeded = (weapon.maxAmmo || weapon.magazine) - (weapon.loadedAmmoType === selectedAmmo.type ? weapon.currentAmmo : 0);
    const ammoToTake = Math.min(ammoNeeded, selectedAmmo.quantity);
    
    // –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–∞—Å—Å–∏–≤–µ –±–æ–µ–ø—Ä–∏–ø–∞—Å–æ–≤
    const realAmmoIndex = state.ammo.findIndex(ammo => ammo.id === selectedAmmo.id);
    
    if (realAmmoIndex !== -1) {
        // –í—ã—á–∏—Ç–∞–µ–º –ø–∞—Ç—Ä–æ–Ω—ã –∏–∑ –±–ª–æ–∫–∞ –ë–æ–µ–ø—Ä–∏–ø–∞—Å—ã
        state.ammo[realAmmoIndex].quantity -= ammoToTake;
        
        // –ó–∞—Ä—è–∂–∞–µ–º –æ—Ä—É–∂–∏–µ
        weapon.currentAmmo = (weapon.loadedAmmoType === selectedAmmo.type ? weapon.currentAmmo : 0) + ammoToTake;
        weapon.loadedAmmoType = selectedAmmo.type;
        
        renderAmmo();
        renderTransport();
        scheduleSave();
        
        closeModal(document.querySelector('.modal-overlay .icon-button'));
        
        const reloadMessage = ammoToTake === ammoNeeded ? 
            '–ú–∞–≥–∞–∑–∏–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞—Ä—è–∂–µ–Ω!' : 
            `–ú–∞–≥–∞–∑–∏–Ω —á–∞—Å—Ç–∏—á–Ω–æ –∑–∞—Ä—è–∂–µ–Ω! –î–æ–±–∞–≤–ª–µ–Ω–æ ${ammoToTake} –ø–∞—Ç—Ä–æ–Ω–æ–≤ (–Ω—É–∂–Ω–æ –±—ã–ª–æ ${ammoNeeded})`;
        
        showToast(reloadMessage, 3000);
    }
}


