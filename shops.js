// ============================================================================
// –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –ú–ê–ì–ê–ó–ò–ù–ê–ú–ò
// –ú–∞–≥–∞–∑–∏–Ω—ã –∂–∏–ª—å—è, –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –∏ –º–æ–¥—É–ª–µ–π
// ============================================================================

console.log('üè™ shops.js –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...');

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∞–≥–∞–∑–∏–Ω–∞–º–∏ –∂–∏–ª—å—è –∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏

// –ú–∞–≥–∞–∑–∏–Ω –∂–∏–ª—å—è
function showHousingShop() {
    document.body.style.overflow = 'hidden';
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    const existingModals = document.querySelectorAll('.modal-overlay');
    modal.style.zIndex = 1000 + (existingModals.length * 100);
    
    const originalRemove = modal.remove.bind(modal);
    modal.remove = function() {
        document.body.style.overflow = '';
        originalRemove();
    };
    
    modal.innerHTML = `
        <div class="modal" style="max-width: 90vw !important; max-height: 90vh !important; display: flex; flex-direction: column;">
            <div class="modal-header">
                <h3><img src="https://static.tildacdn.com/tild3336-3839-4738-a462-303336633561/lease.png" alt="üè†" style="width: 24px; height: 24px; margin-right: 0.5rem; vertical-align: middle;"> –ú–∞–≥–∞–∑–∏–Ω –∂–∏–ª—å—è</h3>
                <button class="icon-button" onclick="closeModal(this)">√ó</button>
            </div>
            <div class="modal-body" style="overflow-y: auto; flex: 1;">
                <div style="margin-bottom: 1rem; padding: 1rem; background: ${getThemeColors().accentLight}; border: 1px solid ${getThemeColors().accent}; border-radius: 8px;">
                    <h4 style="color: ${getThemeColors().accent}; margin-bottom: 0.5rem;">–ü–∞–º—è—Ç–∫–∞:</h4>
                    <p style="color: ${getThemeColors().text}; font-size: 0.9rem; margin: 0;">
                        ‚Ä¢ –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –º–æ–∂–Ω–æ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –∏–ª–∏ –∫—É–ø–∏—Ç—å<br>
                        ‚Ä¢ –ü–µ–Ω—Ç—Ö–∞—É—Å—ã –∏ —á–∞—Å—Ç–Ω—ã–µ –¥–æ–º–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–∫—É–ø–∫–∏<br>
                        ‚Ä¢ –°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ - –≤–∞—à–µ –∏–º—É—â–µ—Å—Ç–≤–æ, –∑–∞ –∫–æ—Ç–æ—Ä—É—é –Ω–µ –Ω–∞–¥–æ –ø–ª–∞—Ç–∏—Ç—å –∞—Ä–µ–Ω–¥—É<br>
                        ‚Ä¢ –í—ã—Å–µ–ª–µ–Ω–∏–µ –∏–∑ –∫–≤–∞—Ä—Ç–∏—Ä—ã –æ–∑–Ω–∞–µ—Ç –µ—ë –ø–æ—Ç–µ—Ä–∏, –¥–µ–Ω—å–≥–∏ –Ω–∏–∫—Ç–æ –Ω–µ –≤–µ—Ä–Ω—ë—Ç!
                    </p>
                </div>
                
                <div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(350px, 1fr)); gap: 1rem; padding: 1rem;">
                    ${HOUSING_OPTIONS.map(housing => {
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–µ –∂–∏–ª—å–µ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
                        const ownedHousing = state.property.housing.find(h => h.id === housing.id);
                        const isOwned = ownedHousing && ownedHousing.isOwned;
                        
                        return `
                            <div class="shop-item">
                                <div class="shop-item-header">
                                    <h4 class="shop-item-title">${housing.name}</h4>
                                </div>
                                
                                <p class="shop-item-description">
                                    ${housing.area}
                                </p>
                                
                                <div class="shop-item-stats">
                                    ${housing.isDefault ? `
                                        <div class="shop-stat">–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</div>
                                    ` : ''}
                                    ${housing.rentPrice !== null && !housing.isDefault ? `
                                        <div class="shop-stat">–ê—Ä–µ–Ω–¥–∞: ${housing.rentPrice.toLocaleString()} —É–µ/–º–µ—Å</div>
                                    ` : ''}
                                    ${housing.buyPrice !== null && !housing.isDefault ? `
                                        <div class="shop-stat">–ü–æ–∫—É–ø–∫–∞: ${housing.buyPrice.toLocaleString()} —É–µ</div>
                                    ` : ''}
                                </div>
                                
                                <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 1rem; padding-top: 1rem; border-top: 1px solid ${getThemeColors().border};">
                                    <span style="color: ${getThemeColors().muted}; font-size: 0.9rem; font-weight: 600;">
                                        ${housing.isDefault ? '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' : (housing.buyPrice ? housing.buyPrice.toLocaleString() + ' —É–µ' : '–¢–æ–ª—å–∫–æ –∞—Ä–µ–Ω–¥–∞')}
                                    </span>
                                    <div style="display: flex; gap: 0.5rem;">
                                        ${housing.isDefault && !isOwned ? `
                                            <button class="pill-button primary-button" onclick="moveToDefaultHousing()" style="font-size: 0.8rem; padding: 0.4rem 0.8rem;">
                                                –ó–∞—Å–µ–ª–∏—Ç—å—Å—è
                                            </button>
                                        ` : ''}
                                        ${housing.isDefault && isOwned ? `
                                            <div style="color: ${getThemeColors().success}; font-size: 0.8rem; padding: 0.4rem 0.8rem; font-weight: 600;">‚úì –í —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏</div>
                                        ` : ''}
                                        ${!housing.isDefault && housing.rentPrice !== null ? `
                                            <button class="pill-button warning-button" onclick="rentHousing('${housing.id}')" style="font-size: 0.8rem; padding: 0.4rem 0.8rem;">
                                                –ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å
                                            </button>
                                        ` : ''}
                                        ${!housing.isDefault && housing.buyPrice !== null ? `
                                            <button class="pill-button success-button" onclick="buyHousing('${housing.id}')" style="font-size: 0.8rem; padding: 0.4rem 0.8rem;">
                                                –ö—É–ø–∏—Ç—å
                                            </button>
                                        ` : ''}
                                    </div>
                                </div>
                            </div>
                        `;
                    }).join('')}
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.remove();
        }
    });
}

// –ú–∞–≥–∞–∑–∏–Ω –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
function showCommercialPropertyShop() {
    document.body.style.overflow = 'hidden';
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    const existingModals = document.querySelectorAll('.modal-overlay');
    modal.style.zIndex = 1000 + (existingModals.length * 100);
    
    const originalRemove = modal.remove.bind(modal);
    modal.remove = function() {
        document.body.style.overflow = '';
        originalRemove();
    };
    
    modal.innerHTML = `
        <div class="modal" style="max-width: 90vw !important; max-height: 90vh !important; display: flex; flex-direction: column;">
            <div class="modal-header">
                <h3><img src="https://static.tildacdn.com/tild6565-3931-4133-a232-393964383262/case.png" alt="üè¢" style="width: 24px; height: 24px; margin-right: 0.5rem; vertical-align: middle;"> –ú–∞–≥–∞–∑–∏–Ω –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏</h3>
                <button class="icon-button" onclick="closeModal(this)">√ó</button>
            </div>
            <div class="modal-body" style="overflow-y: auto; flex: 1;">
                <div style="margin-bottom: 1rem; padding: 1rem; background: ${getThemeColors().successLight}; border: 1px solid ${getThemeColors().success}; border-radius: 8px;">
                    <h4 style="color: ${getThemeColors().success}; margin-bottom: 0.5rem;">–ü–∞–º—è—Ç–∫–∞:</h4>
                    <p style="color: ${getThemeColors().text}; font-size: 0.9rem; margin: 0;">
                        ‚Ä¢ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞—Ä–µ–Ω–¥—ã<br>
                        ‚Ä¢ –ê—Ä–µ–Ω–¥–∞ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ<br>
                        ‚Ä¢ –û—Ç–ª–∏—á–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å–∞ –∏–ª–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏
                    </p>
                </div>
                
                <div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(350px, 1fr)); gap: 1rem; padding: 1rem;">
                    ${COMMERCIAL_PROPERTY_OPTIONS.map(property => `
                        <div class="shop-item">
                            <div class="shop-item-header">
                                <h4 class="shop-item-title">${property.name}</h4>
                            </div>
                            
                            <p class="shop-item-description">
                                ${property.area}
                            </p>
                            
                            <div class="shop-item-stats">
                                <div class="shop-stat">–ê—Ä–µ–Ω–¥–∞: ${property.rentPrice.toLocaleString()} —É–µ/—Å—É—Ç–∫–∏</div>
                            </div>
                            
                            <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 1rem; padding-top: 1rem; border-top: 1px solid ${getThemeColors().border};">
                                <span style="color: ${getThemeColors().muted}; font-size: 0.9rem; font-weight: 600;">
                                    ${property.rentPrice.toLocaleString()} —É–µ/—Å—É—Ç–∫–∏
                                </span>
                                <button class="pill-button warning-button" onclick="rentCommercialProperty('${property.id}')" style="font-size: 0.8rem; padding: 0.4rem 0.8rem;">
                                    –ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å
                                </button>
                            </div>
                        </div>
                    `).join('')}
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.remove();
        }
    });
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∏ –∞—Ä–µ–Ω–¥—ã –∂–∏–ª—å—è
function buyHousing(housingId) {
    if (typeof HOUSING_OPTIONS === 'undefined') {
        console.error('HOUSING_OPTIONS –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ data.js');
        showModal('–û—à–∏–±–∫–∞', '–î–∞–Ω–Ω—ã–µ –æ –∂–∏–ª—å–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É (Ctrl+F5).');
        return;
    }
    
    const housing = HOUSING_OPTIONS.find(h => h.id === housingId);
    if (!housing) {
        console.error('–ñ–∏–ª—å–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ:', housingId);
        showToast('–ñ–∏–ª—å–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', 2000);
        return;
    }
    
    if (!housing.buyPrice) {
        showToast('–≠—Ç–æ –∂–∏–ª—å–µ –Ω–µ–ª—å–∑—è –∫—É–ø–∏—Ç—å!', 2000);
        return;
    }
    
    const currentMoney = parseInt(state.money) || 0;
    if (currentMoney < housing.buyPrice) {
        showModal('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', `
            <div style="text-align: center; padding: 1rem;">
                <p style="color: ${getThemeColors().danger}; font-size: 1.1rem; margin-bottom: 1rem;">–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥!</p>
                <p style="color: ${getThemeColors().muted};">–ù—É–∂–Ω–æ: ${housing.buyPrice.toLocaleString()} —É–µ</p>
                <p style="color: ${getThemeColors().muted};">–£ –≤–∞—Å: ${currentMoney.toLocaleString()} —É–µ</p>
                <p style="color: ${getThemeColors().muted};">–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç: ${(housing.buyPrice - currentMoney).toLocaleString()} —É–µ</p>
            </div>
        `);
        return;
    }
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
    state.money = currentMoney - housing.buyPrice;
    updateMoneyDisplay();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∂–∏–ª—å–µ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å
    const newHousing = {
        ...housing,
        isOwned: true,
        purchasePrice: housing.buyPrice
    };
    state.property.housing.push(newHousing);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    renderHousing();
    scheduleSave();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast(`${housing.name} –∫—É–ø–ª–µ–Ω–æ –∑–∞ ${housing.buyPrice.toLocaleString()} —É–µ!`, 3000);
    addToRollLog('purchase', { item: housing.name, price: housing.buyPrice, category: '–ñ–∏–ª—å–µ' });
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª –º–∞–≥–∞–∑–∏–Ω–∞ –∂–∏–ª—å—è
    const modalOverlay = document.querySelector('.modal-overlay');
    if (modalOverlay) {
        modalOverlay.remove();
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞—Å–µ–ª–µ–Ω–∏—è –≤ —Å—Ç–∞—Ä—Ç–æ–≤—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É
function moveToDefaultHousing() {
    // –ù–∞—Ö–æ–¥–∏–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –∂–∏–ª—å–µ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ
    const housingTemplate = HOUSING_OPTIONS.find(h => h.isDefault);
    if (!housingTemplate) {
        showToast('–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –∂–∏–ª—å–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ', 'error');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –∂–∏–ª—å–µ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
    const existingHousing = state.property.housing.find(h => h.id === housingTemplate.id);
    if (existingHousing && existingHousing.isOwned) {
        showToast('–í—ã —É–∂–µ –ø—Ä–æ–∂–∏–≤–∞–µ—Ç–µ –≤ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π –∫–≤–∞—Ä—Ç–∏—Ä–µ', 'info');
        return;
    }
    
    // –ï—Å–ª–∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –∂–∏–ª—å—è –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
    if (!existingHousing) {
        const newHousing = {
            ...housingTemplate,
            isOwned: true,
            purchasePrice: 0,
            purchaseDate: new Date().toISOString()
        };
        state.property.housing.push(newHousing);
    } else {
        // –ï—Å–ª–∏ –µ—Å—Ç—å, –Ω–æ –Ω–µ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏, –¥–µ–ª–∞–µ–º –µ–≥–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º
        existingHousing.isOwned = true;
        existingHousing.rentPrice = 0;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    renderHousing();
    scheduleSave();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast(`–ó–∞—Å–µ–ª–∏–ª–∏—Å—å –≤ ${housingTemplate.name}`, 'success');
    addToRollLog('move_in', { item: housingTemplate.name, price: 0, category: '–ñ–∏–ª—å–µ (–∑–∞—Å–µ–ª–µ–Ω–∏–µ)' });
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –º–∞–≥–∞–∑–∏–Ω–∞
    closeModal();
}

function rentHousing(housingId) {
    if (typeof HOUSING_OPTIONS === 'undefined') {
        console.error('HOUSING_OPTIONS –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ data.js');
        showModal('–û—à–∏–±–∫–∞', '–î–∞–Ω–Ω—ã–µ –æ –∂–∏–ª—å–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É (Ctrl+F5).');
        return;
    }
    
    const housing = HOUSING_OPTIONS.find(h => h.id === housingId);
    if (!housing) {
        console.error('–ñ–∏–ª—å–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ:', housingId);
        showToast('–ñ–∏–ª—å–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', 2000);
        return;
    }
    
    if (!housing.rentPrice) {
        showToast('–≠—Ç–æ –∂–∏–ª—å–µ –Ω–µ–ª—å–∑—è –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å!', 2000);
        return;
    }
    
    const currentMoney = parseInt(state.money) || 0;
    if (currentMoney < housing.rentPrice) {
        showModal('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', `
            <div style="text-align: center; padding: 1rem;">
                <p style="color: ${getThemeColors().danger}; font-size: 1.1rem; margin-bottom: 1rem;">–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥!</p>
                <p style="color: ${getThemeColors().muted};">–ù—É–∂–Ω–æ: ${housing.rentPrice.toLocaleString()} —É–µ/–º–µ—Å</p>
                <p style="color: ${getThemeColors().muted};">–£ –≤–∞—Å: ${currentMoney.toLocaleString()} —É–µ</p>
                <p style="color: ${getThemeColors().muted};">–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç: ${(housing.rentPrice - currentMoney).toLocaleString()} —É–µ</p>
            </div>
        `);
        return;
    }
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
    state.money = currentMoney - housing.rentPrice;
    updateMoneyDisplay();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∂–∏–ª—å–µ –≤ –∞—Ä–µ–Ω–¥—É
    const newHousing = {
        ...housing,
        isOwned: false
    };
    state.property.housing.push(newHousing);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    renderHousing();
    scheduleSave();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast(`${housing.name} –∞—Ä–µ–Ω–¥–æ–≤–∞–Ω–æ –∑–∞ ${housing.rentPrice.toLocaleString()} —É–µ/–º–µ—Å!`, 3000);
    addToRollLog('rent', { item: housing.name, price: housing.rentPrice, category: '–ñ–∏–ª—å–µ (–∞—Ä–µ–Ω–¥–∞)' });
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª –º–∞–≥–∞–∑–∏–Ω–∞ –∂–∏–ª—å—è
    const modalOverlay = document.querySelector('.modal-overlay');
    if (modalOverlay) {
        modalOverlay.remove();
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞—Ä–µ–Ω–¥—ã –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
function rentCommercialProperty(propertyId) {
    if (typeof COMMERCIAL_PROPERTY_OPTIONS === 'undefined') {
        console.error('COMMERCIAL_PROPERTY_OPTIONS –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ data.js');
        showModal('–û—à–∏–±–∫–∞', '–î–∞–Ω–Ω—ã–µ –æ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É (Ctrl+F5).');
        return;
    }
    
    const property = COMMERCIAL_PROPERTY_OPTIONS.find(p => p.id === propertyId);
    if (!property) {
        console.error('–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', propertyId);
        showToast('–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!', 2000);
        return;
    }
    
    const currentMoney = parseInt(state.money) || 0;
    if (currentMoney < property.rentPrice) {
        showModal('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', `
            <div style="text-align: center; padding: 1rem;">
                <p style="color: ${getThemeColors().danger}; font-size: 1.1rem; margin-bottom: 1rem;">–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥!</p>
                <p style="color: ${getThemeColors().muted};">–ù—É–∂–Ω–æ: ${property.rentPrice.toLocaleString()} —É–µ/—Å—É—Ç–∫–∏</p>
                <p style="color: ${getThemeColors().muted};">–£ –≤–∞—Å: ${currentMoney.toLocaleString()} —É–µ</p>
                <p style="color: ${getThemeColors().muted};">–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç: ${(property.rentPrice - currentMoney).toLocaleString()} —É–µ</p>
            </div>
        `);
        return;
    }
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
    state.money = currentMoney - property.rentPrice;
    updateMoneyDisplay();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –≤ –∞—Ä–µ–Ω–¥—É
    const newProperty = {
        ...property,
        isOwned: false
    };
    state.property.commercialProperty.push(newProperty);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    renderCommercialProperty();
    scheduleSave();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast(`${property.name} –∞—Ä–µ–Ω–¥–æ–≤–∞–Ω–æ –∑–∞ ${property.rentPrice.toLocaleString()} —É–µ/—Å—É—Ç–∫–∏!`, 3000);
    addToRollLog('purchase', { item: property.name, price: property.rentPrice, category: '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å' });
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª –º–∞–≥–∞–∑–∏–Ω–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
    const modalOverlay = document.querySelector('.modal-overlay');
    if (modalOverlay) {
        modalOverlay.remove();
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∂–∏–ª—å—è –∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
function removeHousing(index) {
    const housing = state.property.housing[index];
    if (!housing) return;
    
    if (housing.isDefault) {
        showToast('–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –∂–∏–ª—å–µ!', 2000);
        return;
    }
    
    showModal('–£–¥–∞–ª–∏—Ç—å –∂–∏–ª—å–µ', `
        <div style="text-align: center; padding: 1rem;">
            <p style="color: ${getThemeColors().text}; font-size: 1.1rem; margin-bottom: 1rem;">–£–¥–∞–ª–∏—Ç—å "${housing.name}"?</p>
            <p style="color: ${getThemeColors().muted};">–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.</p>
            <div style="display: flex; gap: 0.5rem; justify-content: center; margin-top: 1rem;">
                <button class="pill-button danger-button" onclick="confirmRemoveHousing(${index})">–£–¥–∞–ª–∏—Ç—å</button>
                <button class="pill-button" onclick="closeModal(this)">–û—Ç–º–µ–Ω–∞</button>
            </div>
        </div>
    `);
}

function confirmRemoveHousing(index) {
    const housing = state.property.housing[index];
    if (!housing) return;
    
    state.property.housing.splice(index, 1);
    renderHousing();
    scheduleSave();
    
    showToast(`${housing.name} —É–¥–∞–ª–µ–Ω–æ!`, 2000);
    closeModal(document.querySelector('.modal-overlay:last-child .icon-button'));
}

function removeCommercialProperty(index) {
    const property = state.property.commercialProperty[index];
    if (!property) return;
    
    showModal('–£–¥–∞–ª–∏—Ç—å –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å', `
        <div style="text-align: center; padding: 1rem;">
            <p style="color: ${getThemeColors().text}; font-size: 1.1rem; margin-bottom: 1rem;">–£–¥–∞–ª–∏—Ç—å "${property.name}"?</p>
            <p style="color: ${getThemeColors().muted};">–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.</p>
            <div style="display: flex; gap: 0.5rem; justify-content: center; margin-top: 1rem;">
                <button class="pill-button danger-button" onclick="confirmRemoveCommercialProperty(${index})">–£–¥–∞–ª–∏—Ç—å</button>
                <button class="pill-button" onclick="closeModal(this)">–û—Ç–º–µ–Ω–∞</button>
            </div>
        </div>
    `);
}

function confirmRemoveCommercialProperty(index) {
    const property = state.property.commercialProperty[index];
    if (!property) return;
    
    state.property.commercialProperty.splice(index, 1);
    renderCommercialProperty();
    scheduleSave();
    
    showToast(`${property.name} —É–¥–∞–ª–µ–Ω–æ!`, 2000);
    closeModal(document.querySelector('.modal-overlay:last-child .icon-button'));
}

// –°–¢–ê–†–ê–Ø –§–£–ù–ö–¶–ò–Ø –¥–ª—è –∞—Ä—Ö–∏–≤–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ transport.js
/*
function showVehicleShop() {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π —Å–∫—Ä–æ–ª–ª–∞
    document.body.style.overflow = 'hidden';
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    const existingModals = document.querySelectorAll('.modal-overlay');
    modal.style.zIndex = 1000 + (existingModals.length * 100);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å–∫—Ä–æ–ª–ª–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
    const originalRemove = modal.remove.bind(modal);
    modal.remove = function() {
        document.body.style.overflow = '';
        originalRemove();
    };
    
    let shopHTML = `
        <div class="modal" style="max-width: 900px; max-height: 90vh; overflow-y: auto;">
            <div class="modal-header">
                <h3><img src="https://static.tildacdn.com/tild3130-6637-4132-a334-663633373435/car.png" alt="üöó" style="width: 24px; height: 24px; margin-right: 0.5rem; vertical-align: middle;"> –ú–∞–≥–∞–∑–∏–Ω —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞</h3>
                <div style="display: flex; gap: 0.5rem; align-items: center;">
                    <button onclick="toggleVehiclesFreeMode()" id="vehiclesFreeModeButton" style="background: transparent; border: 1px solid ${getThemeColors().border}; color: ${getThemeColors().text}; padding: 0.3rem 0.6rem; border-radius: 4px; cursor: pointer; font-size: 0.8rem;">–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</button>
                    <button class="icon-button" onclick="closeModal(this)">√ó</button>
                </div>
            </div>
            <div class="modal-body">
    `;
    
    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    for (const [category, vehicles] of Object.entries(VEHICLES_LIBRARY)) {
        shopHTML += `
            <div style="margin-bottom: 2rem;">
                <h4 style="color: ${getThemeColors().accent}; font-size: 1rem; font-weight: 600; margin-bottom: 1rem; border-bottom: 1px solid ${getThemeColors().border}; padding-bottom: 0.5rem;">${category}</h4>
                <div style="display: grid; gap: 1rem;">
                    ${vehicles.map((vehicle) => `
                        <div style="background: ${getThemeColors().accentLight}; border: 1px solid ${getThemeColors().accent}; border-radius: 8px; padding: 1rem;">
                            <div style="display: flex; justify-content: space-between; align-items: flex-start;">
                                <div style="flex: 1;">
                                    <div style="color: ${getThemeColors().accent}; font-weight: 600; font-size: 1rem; margin-bottom: 0.5rem;">${vehicle.name}</div>
                                    <div style="color: ${getThemeColors().muted}; font-size: 0.85rem; margin-bottom: 0.75rem;">${vehicle.description.replace(/"/g, '&quot;')}</div>
                                    <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 0.5rem; font-size: 0.8rem; color: ${getThemeColors().text}; margin-bottom: 0.75rem;">
                                        <div><strong>–ü–ó:</strong> ${vehicle.hp}</div>
                                        <div><strong>–ú–µ—Å—Ç–∞:</strong> ${vehicle.seats}</div>
                                        <div><strong>–°–∫–æ—Ä–æ—Å—Ç—å:</strong> ${vehicle.mechanicalSpeed}</div>
                                        <div><strong>–ú–∞–∫—Å. —Å–∫–æ—Ä–æ—Å—Ç—å:</strong> ${vehicle.narrativeSpeed}</div>
                                    </div>
                                    <div class="vehicle-price-display" style="color: ${getThemeColors().success}; font-weight: 600; font-size: 1rem;" data-original-price="${vehicle.price}">
                                        ${(() => {
                                            // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–∏–¥–∫—É —Ç–æ–ª—å–∫–æ –æ—Ç "–î—Ä—É–≥–∞ —Å–µ–º—å–∏"
                                            const familyFriendLevel = getProfessionalSkillLevel('–î—Ä—É–≥ —Å–µ–º—å–∏');
                                            const familyFriendDiscount = familyFriendLevel * 10;
                                            
                                            const totalDiscount = Math.min(familyFriendDiscount / 100, 1.0);
                                            const finalPrice = Math.floor(vehicle.price * (1 - totalDiscount));
                                            const hasDiscount = totalDiscount > 0 && finalPrice < vehicle.price;
                                            
                                            return hasDiscount ? 
                                                `–¶–µ–Ω–∞: <span style="text-decoration: line-through; color: ${getThemeColors().muted};">${vehicle.price}</span> <span style="color: ${getThemeColors().success}; font-weight: 600;">${finalPrice}</span> <span style="color: ${getThemeColors().success}; font-size: 0.75rem;">(-${Math.round(totalDiscount * 100)}%)</span> —É–µ` :
                                                `–¶–µ–Ω–∞: ${vehicle.price} —É–µ`;
                                        })()}
                                    </div>
                                </div>
                                <div style="margin-left: 1rem;">
                                    ${(() => {
                                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ü–µ–Ω–æ–π
                                        const isVariablePrice = vehicle.name === '–°–∫–∞–π–ª–∏–Ω–µ—Ä' || vehicle.name === '–ö—Ä—É–∏–∑–Ω–∞—è –Ø—Ö—Ç–∞' || vehicle.name === '–ê–≤—Ç–æ–ø–æ–µ–∑–¥';
                                        
                                        if (isVariablePrice) {
                                            return `<button class="pill-button primary-button" onclick="showVehicleQuantityModal('${vehicle.name.replace(/'/g, "\\'")}', '${vehicle.description.replace(/'/g, "\\'")}', '${vehicle.hp}', '${vehicle.seats}', ${vehicle.mechanicalSpeed}, '${vehicle.narrativeSpeed}', '${vehicle.price}', '${vehicle.category}')" style="font-size: 0.85rem; padding: 0.5rem 1rem;">–í—ã–±—Ä–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ</button>`;
                                        } else {
                                            return `<button class="pill-button primary-button vehicle-buy-button" onclick="buyVehicle('${vehicle.name.replace(/'/g, "\\'")}', '${vehicle.description.replace(/'/g, "\\'")}', ${vehicle.hp}, ${vehicle.seats}, ${vehicle.mechanicalSpeed}, '${vehicle.narrativeSpeed}', ${vehicle.price}, '${vehicle.category}', null)" data-vehicle-name="${vehicle.name.replace(/'/g, "\\'")}" data-description="${vehicle.description.replace(/'/g, "\\'")}" data-hp="${vehicle.hp}" data-seats="${vehicle.seats}" data-mechanical-speed="${vehicle.mechanicalSpeed}" data-narrative-speed="${vehicle.narrativeSpeed}" data-price="${vehicle.price}" data-category="${vehicle.category}" style="font-size: 0.85rem; padding: 0.5rem 1rem;">–ö—É–ø–∏—Ç—å</button>`;
                                        }
                                    })()}
                                </div>
                            </div>
                        </div>
                    `).join('')}
                </div>
            </div>
        `;
    }
    
    shopHTML += `
            </div>
        </div>
    `;
    
    modal.innerHTML = shopHTML;
    document.body.appendChild(modal);
    
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            closeModal(modal.querySelector('.icon-button'));
        }
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã Enter
    addModalKeyboardHandlers(modal);
}
*/

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∞—é—Ç/—Å–µ–∫—Ü–∏–π
function showVehicleQuantityModal(name, description, hp, seats, mechanicalSpeed, narrativeSpeed, priceString, category) {
    // –ü–∞—Ä—Å–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ü–µ–Ω—ã
    let unitPrice, minQuantity, maxQuantity, unitName;
    
    if (name === '–°–∫–∞–π–ª–∏–Ω–µ—Ä') {
        unitPrice = 10000;
        minQuantity = 3;
        maxQuantity = null; // –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ
        unitName = '–∫–∞—é—Ç';
    } else if (name === '–ö—Ä—É–∏–∑–Ω–∞—è –Ø—Ö—Ç–∞') {
        unitPrice = 20000;
        minQuantity = 2;
        maxQuantity = null; // –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ
        unitName = '–∫–∞—é—Ç';
    } else if (name === '–ê–≤—Ç–æ–ø–æ–µ–∑–¥') {
        unitPrice = 50000;
        minQuantity = 1;
        maxQuantity = 4;
        unitName = '—Å–µ–∫—Ü–∏–π';
    }
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–∏–¥–∫—É –æ—Ç "–î—Ä—É–≥–∞ —Å–µ–º—å–∏"
    const familyFriendLevel = getProfessionalSkillLevel('–î—Ä—É–≥ —Å–µ–º—å–∏');
    const familyFriendDiscount = familyFriendLevel * 10;
    const totalDiscount = Math.min(familyFriendDiscount / 100, 1.0);
    const discountedUnitPrice = Math.floor(unitPrice * (1 - totalDiscount));
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π —Å–∫—Ä–æ–ª–ª–∞
    document.body.style.overflow = 'hidden';
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    const existingModals = document.querySelectorAll('.modal-overlay');
    modal.style.zIndex = 1000 + (existingModals.length * 100);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å–∫—Ä–æ–ª–ª–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
    const originalRemove = modal.remove.bind(modal);
    modal.remove = function() {
        document.body.style.overflow = '';
        originalRemove();
    };
    
    modal.innerHTML = `
        <div class="modal" style="max-width: 600px;">
            <div class="modal-header">
                <h3>${name}</h3>
                <button class="icon-button" onclick="closeModal(this)">√ó</button>
            </div>
            <div class="modal-body">
                <div style="margin-bottom: 1rem;">
                    <p style="color: var(--text); margin-bottom: 0.5rem;"><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong></p>
                    <p style="color: var(--muted); font-size: 0.9rem; margin-bottom: 1rem;">${description}</p>
                    
                    <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 0.5rem; font-size: 0.8rem; color: var(--text); margin-bottom: 1rem;">
                        <div><strong>–ü–ó:</strong> ${hp}</div>
                        <div><strong>–ú–µ—Å—Ç–∞:</strong> ${seats}</div>
                        <div><strong>–°–∫–æ—Ä–æ—Å—Ç—å:</strong> ${mechanicalSpeed}</div>
                        <div><strong>–ú–∞–∫—Å. —Å–∫–æ—Ä–æ—Å—Ç—å:</strong> ${narrativeSpeed}</div>
                    </div>
                </div>
                
                <div style="background: rgba(182, 103, 255, 0.1); border: 1px solid var(--accent); border-radius: 8px; padding: 1rem; margin-bottom: 1rem;">
                    <h4 style="color: var(--accent); margin-bottom: 0.5rem;">–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ${unitName}:</h4>
                    <div style="display: flex; align-items: center; gap: 1rem; margin-bottom: 1rem;">
                        <label style="color: var(--text); font-weight: 600;">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</label>
                        <input type="text" id="vehicleQuantity" value="${minQuantity}" style="width: 80px; padding: 0.5rem; background: var(--bg-secondary); border: 1px solid var(--border); border-radius: 4px; color: var(--text); text-align: center;" placeholder="${minQuantity}">
                        <span style="color: var(--muted); font-size: 0.9rem;">${unitName}</span>
                    </div>
                    
                    <div style="margin-bottom: 1rem;">
                        <p style="color: var(--text); margin-bottom: 0.25rem;"><strong>–¶–µ–Ω–∞ –∑–∞ ${unitName.slice(0, -1)}—É:</strong></p>
                        ${totalDiscount > 0 ? 
                            `<p style="color: var(--success); font-weight: 600;"><span style="text-decoration: line-through; color: var(--muted);">${unitPrice.toLocaleString()}</span> <span style="color: var(--success);">${discountedUnitPrice.toLocaleString()}</span> —É–µ <span style="color: var(--success); font-size: 0.8rem;">(-${Math.round(totalDiscount * 100)}%)</span></p>` :
                            `<p style="color: var(--success); font-weight: 600;">${unitPrice.toLocaleString()} —É–µ</p>`
                        }
                    </div>
                    
                    <div id="totalPriceDisplay" style="background: rgba(0, 100, 50, 0.1); border: 1px solid var(--success); border-radius: 6px; padding: 0.75rem; text-align: center;">
                        <p style="color: var(--success); font-weight: 600; font-size: 1.1rem; margin: 0;">
                            –ò—Ç–æ–≥–æ: <span id="totalPriceValue">${(minQuantity * discountedUnitPrice).toLocaleString()}</span> —É–µ
                        </p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="pill-button" onclick="closeModal(this)">–û—Ç–º–µ–Ω–∞</button>
                <button class="pill-button primary-button" onclick="buyVehicleWithQuantity('${name.replace(/'/g, "\\'")}', '${description.replace(/'/g, "\\'")}', '${hp}', '${seats}', ${mechanicalSpeed}, '${narrativeSpeed}', ${unitPrice}, ${minQuantity}, ${maxQuantity || 'null'}, '${unitName}', '${category}')">–ö—É–ø–∏—Ç—å</button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    const quantityInput = document.getElementById('vehicleQuantity');
    const totalPriceValue = document.getElementById('totalPriceValue');
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è: —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
    quantityInput.addEventListener('input', function() {
        // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä
        this.value = this.value.replace(/[^0-9]/g, '');
        
        const quantity = parseInt(this.value) || minQuantity;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
        if (quantity < minQuantity) {
            this.value = minQuantity;
        } else if (maxQuantity && quantity > maxQuantity) {
            this.value = maxQuantity;
        }
        
        const finalQuantity = parseInt(this.value) || minQuantity;
        const totalPrice = finalQuantity * discountedUnitPrice;
        totalPriceValue.textContent = totalPrice.toLocaleString();
    });
    
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤–≤–æ–¥ –±—É–∫–≤ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–ª–∞–≤–∏—à
    quantityInput.addEventListener('keypress', function(e) {
        // –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, Backspace, Delete, Tab, Escape, Enter
        if (!/[0-9]/.test(e.key) && !['Backspace', 'Delete', 'Tab', 'Escape', 'Enter'].includes(e.key)) {
            e.preventDefault();
        }
    });
    
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            closeModal(modal.querySelector('.icon-button'));
        }
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∞–≤–∏—à
    addModalKeyboardHandlers(modal);
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∫–∞—é—Ç/—Å–µ–∫—Ü–∏–π
function buyVehicleWithQuantity(name, description, hp, seats, mechanicalSpeed, narrativeSpeed, unitPrice, minQuantity, maxQuantity, unitName, category) {
    const quantityInput = document.getElementById('vehicleQuantity');
    const quantity = parseInt(quantityInput.value) || minQuantity;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
    if (quantity < minQuantity) {
        showModal('–û—à–∏–±–∫–∞', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.');
        return;
    }
    
    if (maxQuantity && quantity > maxQuantity) {
        showModal('–û—à–∏–±–∫–∞', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.');
        return;
    }
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–∏–¥–∫—É –æ—Ç "–î—Ä—É–≥–∞ —Å–µ–º—å–∏"
    const familyFriendLevel = getProfessionalSkillLevel('–î—Ä—É–≥ —Å–µ–º—å–∏');
    const familyFriendDiscount = familyFriendLevel * 10;
    const totalDiscount = Math.min(familyFriendDiscount / 100, 1.0);
    const discountedUnitPrice = Math.floor(unitPrice * (1 - totalDiscount));
    const totalPrice = quantity * discountedUnitPrice;
    
    const currentMoney = parseInt(state.money) || 0;
    
    if (currentMoney < totalPrice) {
        showModal('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥', `
            <div style="text-align: center; padding: 1rem;">
                <p style="color: var(--danger); font-size: 1.1rem; margin-bottom: 1rem;">–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –ï—à–∏!</p>
                <p style="color: var(--muted);">–ù—É–∂–Ω–æ: ${totalPrice.toLocaleString()} —É–µ</p>
                <p style="color: var(--muted);">–î–æ—Å—Ç—É–ø–Ω–æ: ${currentMoney.toLocaleString()} —É–µ</p>
            </div>
        `);
        return;
    }
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
    state.money = currentMoney - totalPrice;
    updateMoneyDisplay();
    
    // –°–æ–∑–¥–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
    const vehicleName = `${name} (${quantity} ${unitName})`;
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å —É—á–µ—Ç–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    let finalHp, finalSeats;
    if (name === '–°–∫–∞–π–ª–∏–Ω–µ—Ä') {
        finalHp = 200 * quantity; // 200 –ü–ó –∑–∞ –∫–∞—é—Ç—É
        finalSeats = 2 * quantity; // 2 –º–µ—Å—Ç–∞ –∑–∞ –∫–∞—é—Ç—É
    } else if (name === '–ö—Ä—É–∏–∑–Ω–∞—è –Ø—Ö—Ç–∞') {
        finalHp = 70 * quantity; // 70 –ü–ó –∑–∞ –∫–∞—é—Ç—É
        finalSeats = 4 * quantity; // 4 –º–µ—Å—Ç–∞ –∑–∞ –∫–∞—é—Ç—É
    } else if (name === '–ê–≤—Ç–æ–ø–æ–µ–∑–¥') {
        finalHp = 70 * quantity; // 70 –ü–ó –∑–∞ —Å–µ–∫—Ü–∏—é
        finalSeats = 4 * quantity; // 4 –º–µ—Å—Ç–∞ –∑–∞ —Å–µ–∫—Ü–∏—é
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const newVehicle = {
        id: generateId('vehicle'),
        name: vehicleName,
        description: `${description} (${quantity} ${unitName})`,
        hp: finalHp,
        currentHp: finalHp,
        seats: finalSeats,
        mechanicalSpeed: mechanicalSpeed,
        narrativeSpeed: narrativeSpeed,
        price: unitPrice * quantity, // –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –±–µ–∑ —Å–∫–∏–¥–∫–∏
        catalogPrice: unitPrice * quantity,
        purchasePrice: totalPrice, // –¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏ —Å–æ —Å–∫–∏–¥–∫–æ–π
        itemType: 'variable_price',
        category: category,
        modules: [],
        trunk: [], // –ë–∞–≥–∞–∂–Ω–∏–∫ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
        isDefault: false,
        variablePriceData: {
            unitPrice: unitPrice,
            quantity: quantity,
            unitName: unitName,
            minQuantity: minQuantity,
            maxQuantity: maxQuantity
        }
    };
    
    state.property.vehicles.push(newVehicle);
    renderTransport();
    scheduleSave();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ª–æ–≥
    addToRollLog('purchase', {
        item: vehicleName,
        price: totalPrice,
        category: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç'
    });
    
    closeModal(document.querySelector('.modal-overlay .icon-button'));
    
    let discountText = '';
    if (totalDiscount > 0) {
        const discountPercent = Math.round(totalDiscount * 100);
        discountText = `<p style="color: var(--success); margin-bottom: 0.5rem;">–°–∫–∏–¥–∫–∞ ${discountPercent}% –±–ª–∞–≥–æ–¥–∞—Ä—è –Ω–∞–≤—ã–∫—É "–î—Ä—É–≥ —Å–µ–º—å–∏" (${familyFriendDiscount}%)!</p>`;
    }
    
    showModal('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∫—É–ø–ª–µ–Ω', `
        <div style="text-align: center; padding: 1rem;">
            <p style="color: var(--success); font-size: 1.1rem; margin-bottom: 1rem;">&#x2705; ${vehicleName} –∫—É–ø–ª–µ–Ω!</p>
            ${discountText}
            <p style="color: var(--muted);">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${quantity} ${unitName}</p>
            <p style="color: var(--muted);">–°–ø–∏—Å–∞–Ω–æ: ${totalPrice.toLocaleString()} —É–µ</p>
        </div>
    `);
}

function buyVehicle(name, description, hp, seats, mechanicalSpeed, narrativeSpeed, price, category, catalogPrice = null) {
    const currentMoney = parseInt(state.money) || 0;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤—ã–∫ "–î—Ä—É–≥ —Å–µ–º—å–∏" –¥–ª—è —Å–∫–∏–¥–∫–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    const familyFriendLevel = getProfessionalSkillLevel('–î—Ä—É–≥ —Å–µ–º—å–∏');
    const familyFriendDiscount = familyFriendLevel * 10; // 10% —Å–∫–∏–¥–∫–∞ –∑–∞ —É—Ä–æ–≤–µ–Ω—å "–î—Ä—É–≥–∞ —Å–µ–º—å–∏"
    
    // –°–∫–∏–¥–∫–∞ —Ç–æ–ª—å–∫–æ –æ—Ç "–î—Ä—É–≥–∞ —Å–µ–º—å–∏" (–º–∞–∫—Å–∏–º—É–º 100%)
    const totalDiscount = Math.min(familyFriendDiscount / 100, 1.0);
    const finalPrice = Math.floor(price * (1 - totalDiscount));
    
    if (currentMoney < finalPrice) {
        showModal('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥', `
            <div style="text-align: center; padding: 1rem;">
                <p style="color: var(--danger); font-size: 1.1rem; margin-bottom: 1rem;">–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –ï—à–∏!</p>
                <p style="color: var(--muted);">–ù—É–∂–Ω–æ: ${finalPrice} —É–µ</p>
                <p style="color: var(--muted);">–î–æ—Å—Ç—É–ø–Ω–æ: ${currentMoney} —É–µ</p>
            </div>
        `);
        return;
    }
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
    state.money = currentMoney - finalPrice;
    updateMoneyDisplay();
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const newVehicle = {
        id: generateId('vehicle'),
        name: name,
        description: description,
        hp: hp,
        currentHp: hp,
        seats: seats,
        mechanicalSpeed: mechanicalSpeed,
        narrativeSpeed: narrativeSpeed,
        price: catalogPrice || price,  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Ç–∞–ª–æ–∂–Ω—É—é —Ü–µ–Ω—É –µ—Å–ª–∏ –µ—Å—Ç—å
        catalogPrice: catalogPrice,     // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ç–∞–ª–æ–∂–Ω—É—é —Ü–µ–Ω—É –æ—Ç–¥–µ–ª—å–Ω–æ
        purchasePrice: finalPrice,      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–µ–Ω—É –ø–æ–∫—É–ø–∫–∏ (—Å —É—á—ë—Ç–æ–º —Å–∫–∏–¥–∫–∏)
        itemType: finalPrice === 0 && catalogPrice > 0 ? 'free_catalog' : 'catalog',  // –ú–∞—Ä–∫–µ—Ä –¥–ª—è —Å–∫—É–ø—â–∏–∫–∞
        category: category,
        modules: [],
        isDefault: false
    };
    
    state.property.vehicles.push(newVehicle);
    renderTransport();
    scheduleSave();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ª–æ–≥
    addToRollLog('purchase', {
        item: name,
        price: finalPrice,
        category: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç'
    });
    
    closeModal(document.querySelector('.modal-overlay .icon-button'));
    
    let discountText = '';
    if (totalDiscount > 0) {
        const discountPercent = Math.round(totalDiscount * 100);
        discountText = `<p style="color: var(--success); margin-bottom: 0.5rem;">–°–∫–∏–¥–∫–∞ ${discountPercent}% –±–ª–∞–≥–æ–¥–∞—Ä—è –Ω–∞–≤—ã–∫—É "–î—Ä—É–≥ —Å–µ–º—å–∏" (${familyFriendDiscount}%)!</p>`;
    }
    
    showModal('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∫—É–ø–ª–µ–Ω', `
        <div style="text-align: center; padding: 1rem;">
            <p style="color: var(--success); font-size: 1.1rem; margin-bottom: 1rem;">&#x2705; ${name} –∫—É–ø–ª–µ–Ω!</p>
            ${discountText}
            <p style="color: var(--muted);">–°–ø–∏—Å–∞–Ω–æ: ${finalPrice} —É–µ</p>
        </div>
    `);
}

function toggleVehiclesFreeMode() {
    const buyButtons = document.querySelectorAll('.vehicle-buy-button');
    const priceDisplays = document.querySelectorAll('.vehicle-price-display');
    const toggleButton = document.getElementById('vehiclesFreeModeButton');
    const modalOverlay = document.querySelector('.modal-overlay');
    
    const isFreeMode = toggleButton.textContent === '–û—Ç–∫–ª—é—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ';
    
    if (isFreeMode) {
        buyButtons.forEach(btn => {
            const name = btn.getAttribute('data-vehicle-name');
            const description = btn.getAttribute('data-description');
            const hp = btn.getAttribute('data-hp');
            const seats = btn.getAttribute('data-seats');
            const mechanicalSpeed = btn.getAttribute('data-mechanical-speed');
            const narrativeSpeed = btn.getAttribute('data-narrative-speed');
            const price = btn.getAttribute('data-price');
            const category = btn.getAttribute('data-category');
            btn.setAttribute('onclick', `buyVehicle('${name}', '${description}', ${hp}, ${seats}, ${mechanicalSpeed}, '${narrativeSpeed}', ${price}, '${category}', null)`);
        });
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–µ —Ü–µ–Ω—ã –≤–∏–∑—É–∞–ª—å–Ω–æ
        priceDisplays.forEach(display => {
            const originalPrice = display.getAttribute('data-original-price');
            display.textContent = `–¶–µ–Ω–∞: ${originalPrice} —É–µ`;
        });
        
        toggleButton.textContent = '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ';
        toggleButton.style.background = 'transparent';
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π —Ñ–æ–Ω
        if (modalOverlay) {
            modalOverlay.style.background = 'rgba(0, 0, 0, 0.85)';
        }
    } else {
        buyButtons.forEach(btn => {
            const name = btn.getAttribute('data-vehicle-name');
            const description = btn.getAttribute('data-description');
            const hp = btn.getAttribute('data-hp');
            const seats = btn.getAttribute('data-seats');
            const mechanicalSpeed = btn.getAttribute('data-mechanical-speed');
            const narrativeSpeed = btn.getAttribute('data-narrative-speed');
            const category = btn.getAttribute('data-category');
            btn.setAttribute('onclick', `buyVehicle('${name}', '${description}', ${hp}, ${seats}, ${mechanicalSpeed}, '${narrativeSpeed}', 0, '${category}', ${btn.getAttribute('data-price')})`);
        });
        
        // –ú–µ–Ω—è–µ–º —Ü–µ–Ω—ã –≤–∏–∑—É–∞–ª—å–Ω–æ –Ω–∞ 0
        priceDisplays.forEach(display => {
            display.textContent = `–¶–µ–Ω–∞: 0 —É–µ`;
        });
        
        toggleButton.textContent = '–û—Ç–∫–ª—é—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ';
        toggleButton.style.background = 'linear-gradient(135deg, #7DF4C6, #5b9bff)';
        
        // –ú–µ–Ω—è–µ–º —Ñ–æ–Ω –Ω–∞ –∑–µ–ª–µ–Ω–æ–≤–∞—Ç—ã–π
        if (modalOverlay) {
            modalOverlay.style.background = 'rgba(0, 100, 50, 0.85)';
        }
    }
}

function sellVehicle(vehicleId) {
    const vehicle = state.property.vehicles.find(v => v.id === vehicleId);
    if (!vehicle) return;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –±–∞–≥–∞–∂–Ω–∏–∫–µ
    if (vehicle.trunk && vehicle.trunk.length > 0) {
        showModal('–ù–µ–ª—å–∑—è –ø—Ä–æ–¥–∞—Ç—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç', `
            <div style="text-align: center; padding: 1rem;">
                <p style="color: var(--danger); font-size: 1.1rem; margin-bottom: 1rem;">–í –±–∞–≥–∞–∂–Ω–∏–∫–µ –µ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã!</p>
                <p style="color: var(--muted);">–°–Ω–∞—á–∞–ª–∞ –≤—ã–Ω—å—Ç–µ –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞ –∏–ª–∏ –ø–µ—Ä–µ–ª–æ–∂–∏—Ç–µ –∏—Ö –≤ –¥—Ä—É–≥–æ–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç.</p>
                <p style="color: var(--muted); font-size: 0.8rem; margin-top: 0.5rem;">
                    –ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –±–∞–≥–∞–∂–Ω–∏–∫–µ: ${vehicle.trunk.length}
                </p>
            </div>
        `);
        return;
    }
    
    // –î–ª—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–∏–∫—Ä–æ–º–æ–±–∏–ª—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è 7500—É–µ
    const sellPrice = vehicle.isDefault ? 7500 : Math.floor(vehicle.price * 0.5);
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π —Å–∫—Ä–æ–ª–ª–∞
    document.body.style.overflow = 'hidden';
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    const existingModals = document.querySelectorAll('.modal-overlay');
    modal.style.zIndex = 1000 + (existingModals.length * 100);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å–∫—Ä–æ–ª–ª–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
    const originalRemove = modal.remove.bind(modal);
    modal.remove = function() {
        document.body.style.overflow = '';
        originalRemove();
    };
    modal.innerHTML = `
        <div class="modal" style="max-width: 500px;">
            <div class="modal-header">
                <h3>–ü—Ä–æ–¥–∞—Ç—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç</h3>
                <button class="icon-button" onclick="closeModal(this)">√ó</button>
            </div>
            <div class="modal-body">
                <p style="text-align: center; color: var(--text); font-size: 1rem; margin-bottom: 1rem;">
                    –ü—Ä–æ–¥–∞—Ç—å <strong>${vehicle.name}</strong> –∑–∞ <span style="color: var(--success);">${sellPrice} —É–µ</span>?
                </p>
                <p style="text-align: center; color: var(--muted); font-size: 0.85rem;">
                    (50% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ–∫—É–ø–∫–∏)
                </p>
            </div>
            <div class="modal-footer">
                <button class="pill-button primary-button" onclick="confirmSellVehicle('${vehicleId}', ${sellPrice})">–ü—Ä–æ–¥–∞—Ç—å</button>
                <button class="pill-button" onclick="closeModal(this)">–û—Ç–º–µ–Ω–∞</button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            closeModal(modal.querySelector('.icon-button'));
        }
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã Enter
    addModalKeyboardHandlers(modal);
}

function confirmSellVehicle(vehicleId, sellPrice) {
    // –ù–∞—Ö–æ–¥–∏–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const vehicle = state.property.vehicles.find(v => v.id === vehicleId);
    
    // –í–ê–ñ–ù–û: –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä—É–∂–∏–µ –∏–∑ –º–æ–¥—É–ª–µ–π –≤ –±–ª–æ–∫ "–û—Ä—É–∂–∏–µ" –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–∞–∂–µ–π
    if (vehicle && vehicle.modules && vehicle.modules.length > 0) {
        let totalWeaponsReturned = 0;
        vehicle.modules.forEach(module => {
            if (module.weapons && module.weapons.length > 0) {
                module.weapons.forEach(weapon => {
                    state.weapons.push(weapon);
                    totalWeaponsReturned++;
                });
            }
        });
        
        if (totalWeaponsReturned > 0) {
            showToast(`–û—Ä—É–∂–∏–µ –∏–∑ –º–æ–¥—É–ª–µ–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ (${totalWeaponsReturned} —à—Ç.) –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ –≤ –±–ª–æ–∫ "–û—Ä—É–∂–∏–µ"`, 3000);
        }
    }
    
    state.property.vehicles = state.property.vehicles.filter(v => v.id !== vehicleId);
    state.money = parseInt(state.money) + sellPrice;
    updateMoneyDisplay();
    renderTransport();
    renderWeapons(); // –û–±–Ω–æ–≤–ª—è–µ–º –±–ª–æ–∫ –æ—Ä—É–∂–∏—è
    scheduleSave();
    
    // –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–¥–∞–∂—É —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –∫–∞–∫ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–Ω–µ–≥
    addToRollLog('transaction', {
        amount: sellPrice,
        source: '–ü—Ä–æ–¥–∞–∂–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞',
        taxPaid: 0
    });
    
    closeModal(document.querySelector('.modal-overlay .icon-button'));
    
    showModal('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –ø—Ä–æ–¥–∞–Ω', `
        <div style="text-align: center; padding: 1rem;">
            <p style="color: var(--success); font-size: 1.1rem; margin-bottom: 1rem;">&#x2705; –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –ø—Ä–æ–¥–∞–Ω!</p>
            <p style="color: var(--muted);">–ü–æ–ª—É—á–µ–Ω–æ: ${sellPrice} —É–µ</p>
        </div>
    `);
}

// –°–¢–ê–†–ê–Ø –§–£–ù–ö–¶–ò–Ø - –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–ê, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ transport.js
/*
function showVehicleModulesShop() {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π —Å–∫—Ä–æ–ª–ª–∞
    document.body.style.overflow = 'hidden';
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    const existingModals = document.querySelectorAll('.modal-overlay');
    modal.style.zIndex = 1000 + (existingModals.length * 100);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å–∫—Ä–æ–ª–ª–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
    const originalRemove = modal.remove.bind(modal);
    modal.remove = function() {
        document.body.style.overflow = '';
        originalRemove();
    };
    
    let shopHTML = `
        <div class="modal" style="max-width: 900px; max-height: 90vh; overflow-y: auto;">
            <div class="modal-header">
                <h3>&#x2699;&#xFE0F; –ú–∞–≥–∞–∑–∏–Ω –º–æ–¥—É–ª–µ–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞</h3>
                <div style="display: flex; gap: 0.5rem; align-items: center;">
                    <button onclick="toggleVehicleModulesFreeMode()" id="vehicleModulesFreeModeButton" style="background: transparent; border: 1px solid var(--border); color: var(--text); padding: 0.3rem 0.6rem; border-radius: 4px; cursor: pointer; font-size: 0.8rem;">–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</button>
                    <button class="icon-button" onclick="closeModal(this)">√ó</button>
                </div>
            </div>
            <div class="modal-body">
    `;
    
    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–æ–¥—É–ª–µ–π
    const categories = {
        'ground': '–ú–æ–¥—É–ª–∏ –¥–ª—è –Ω–∞–∑–µ–º–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞',
        'air': '–ú–æ–¥—É–ª–∏ –¥–ª—è –≤–æ–∑–¥—É—à–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞',
        'water': '–ú–æ–¥—É–ª–∏ –¥–ª—è –≤–æ–¥–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞'
    };
    
    for (const [category, categoryName] of Object.entries(categories)) {
        const modules = VEHICLE_MODULES_LIBRARY[category] || [];
        if (modules.length === 0) continue;
        
        shopHTML += `
            <div style="margin-bottom: 2rem;">
                <h4 style="color: var(--accent); font-size: 1rem; font-weight: 600; margin-bottom: 1rem; border-bottom: 1px solid var(--border); padding-bottom: 0.5rem;">${categoryName}</h4>
                <div style="display: grid; gap: 1rem;">
                    ${modules.map((module) => `
                        <div style="background: rgba(182, 103, 255, 0.1); border: 1px solid var(--accent); border-radius: 8px; padding: 1rem;">
                            <div style="display: flex; justify-content: space-between; align-items: flex-start;">
                                <div style="flex: 1;">
                                    <div style="color: var(--accent); font-weight: 600; font-size: 1rem; margin-bottom: 0.5rem;">${module.name}</div>
                                    <div style="color: var(--muted); font-size: 0.85rem; margin-bottom: 0.75rem;">${module.description}</div>
                                    ${module.requirements && module.requirements.length > 0 ? `
                                        <div style="color: var(--danger); font-size: 0.8rem; margin-bottom: 0.5rem;">
                                            <strong>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</strong> ${module.requirements.join(', ')}
                                        </div>
                                    ` : ''}
                                    <div class="vehicle-module-price-display" style="color: var(--success); font-weight: 600; font-size: 1rem;" data-original-price="${module.price}">–¶–µ–Ω–∞: ${module.price} —É.–µ.</div>
                                </div>
                                <div style="margin-left: 1rem;">
                                    <button class="pill-button primary-button vehicle-module-buy-button" onclick="buyVehicleModule('${module.name.replace(/'/g, "\\'")}', '${module.description.replace(/'/g, "\\'")}', ${module.price}, '${module.category}', '${JSON.stringify(module.requirements || []).replace(/'/g, "\\'")}' )" data-module-name="${module.name.replace(/'/g, "\\'")}" data-description="${module.description.replace(/'/g, "\\'")}" data-price="${module.price}" data-category="${module.category}" data-requirements="${JSON.stringify(module.requirements || []).replace(/'/g, "\\'")}" style="font-size: 0.85rem; padding: 0.5rem 1rem;">–ö—É–ø–∏—Ç—å</button>
                                </div>
                            </div>
                        </div>
                    `).join('')}
                </div>
            </div>
        `;
    }
    
    shopHTML += `
            </div>
        </div>
    `;
    
    modal.innerHTML = shopHTML;
    document.body.appendChild(modal);
    
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            closeModal(modal.querySelector('.icon-button'));
        }
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã Enter
    addModalKeyboardHandlers(modal);
}
*/

function getVehicleModuleFree(name, description, category, requirementsStr) {
    const requirements = JSON.parse(requirementsStr);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥—É–ª—å –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ
    const newGear = {
        id: generateId('gear'),
        name: name,
        description: description,
        price: 0,
        load: 5,
        type: 'vehicle_module',
        moduleData: {
            category: category,
            requirements: requirements
        }
    };
    
    state.gear.push(newGear);
    renderGear();
    scheduleSave();
    
    closeModal(document.querySelector('.modal-overlay .icon-button'));
    
    showModal('–ú–æ–¥—É–ª—å –ø–æ–ª—É—á–µ–Ω', `
        <div style="text-align: center; padding: 1rem;">
            <p style="color: var(--success); font-size: 1.1rem; margin-bottom: 1rem;">&#x2705; ${name} –ø–æ–ª—É—á–µ–Ω!</p>
            <p style="color: var(--muted); margin-bottom: 0.5rem;">–ú–æ–¥—É–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ.</p>
            <p style="color: var(--muted);">–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥—É–ª—è–º–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞.</p>
        </div>
    `);
}

function toggleVehicleModulesFreeMode() {
    const buyButtons = document.querySelectorAll('.vehicle-module-buy-button');
    const priceDisplays = document.querySelectorAll('.vehicle-module-price-display');
    const toggleButton = document.getElementById('vehicleModulesFreeModeButton');
    const modalOverlay = document.querySelector('.modal-overlay');
    
    const isFreeMode = toggleButton.textContent === '–û—Ç–∫–ª—é—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ';
    
    if (isFreeMode) {
        buyButtons.forEach(btn => {
            const name = btn.getAttribute('data-module-name');
            const description = btn.getAttribute('data-description');
            const price = btn.getAttribute('data-price');
            const category = btn.getAttribute('data-category');
            const requirements = btn.getAttribute('data-requirements');
            btn.setAttribute('onclick', `buyVehicleModule('${name}', '${description}', ${price}, '${category}', '${requirements}')`);
        });
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–µ —Ü–µ–Ω—ã –≤–∏–∑—É–∞–ª—å–Ω–æ
        priceDisplays.forEach(display => {
            const originalPrice = display.getAttribute('data-original-price');
            display.textContent = `–¶–µ–Ω–∞: ${originalPrice} —É–µ`;
        });
        
        toggleButton.textContent = '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ';
        toggleButton.style.background = 'transparent';
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π —Ñ–æ–Ω
        if (modalOverlay) {
            modalOverlay.style.background = 'rgba(0, 0, 0, 0.85)';
        }
    } else {
        buyButtons.forEach(btn => {
            const name = btn.getAttribute('data-module-name');
            const description = btn.getAttribute('data-description');
            const category = btn.getAttribute('data-category');
            const requirements = btn.getAttribute('data-requirements');
            btn.setAttribute('onclick', `getVehicleModuleFree('${name}', '${description}', '${category}', '${requirements}')`);
        });
        
        // –ú–µ–Ω—è–µ–º —Ü–µ–Ω—ã –≤–∏–∑—É–∞–ª—å–Ω–æ –Ω–∞ 0
        priceDisplays.forEach(display => {
            display.textContent = `–¶–µ–Ω–∞: 0 —É–µ`;
        });
        
        toggleButton.textContent = '–û—Ç–∫–ª—é—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ';
        toggleButton.style.background = 'linear-gradient(135deg, #7DF4C6, #5b9bff)';
        
        // –ú–µ–Ω—è–µ–º —Ñ–æ–Ω –Ω–∞ –∑–µ–ª–µ–Ω–æ–≤–∞—Ç—ã–π
        if (modalOverlay) {
            modalOverlay.style.background = 'rgba(0, 100, 50, 0.85)';
        }
    }
}

function buyVehicleModule(name, description, price, category, requirementsStr, catalogPrice = null) {
    const currentMoney = parseInt(state.money) || 0;
    const requirements = JSON.parse(requirementsStr);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    if (!state.property || !state.property.vehicles || state.property.vehicles.length === 0) {
        showModal('–ù–µ—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞', `
            <div style="text-align: center; padding: 1rem;">
                <p style="color: var(--danger); font-size: 1.1rem; margin-bottom: 1rem;">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞!</p>
                <p style="color: var(--muted);">–ú–æ–¥—É–ª–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞.</p>
            </div>
        `);
        return;
    }
    
    if (currentMoney < price) {
        showModal('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥', `
            <div style="text-align: center; padding: 1rem;">
                <p style="color: var(--danger); font-size: 1.1rem; margin-bottom: 1rem;">–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –ï—à–∏!</p>
                <p style="color: var(--muted);">–ù—É–∂–Ω–æ: ${price} —É–µ</p>
                <p style="color: var(--muted);">–î–æ—Å—Ç—É–ø–Ω–æ: ${currentMoney} —É–µ</p>
            </div>
        `);
        return;
    }
    
    // –ï—Å–ª–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, –≤—ã–±–∏—Ä–∞–µ–º –±–∞–≥–∞–∂–Ω–∏–∫
    let targetVehicle;
    if (state.property.vehicles.length === 1) {
        targetVehicle = state.property.vehicles[0];
    } else {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –±–∞–≥–∞–∂–Ω–∏–∫–∞
        showVehicleTrunkSelection(name, description, price, category, requirementsStr, catalogPrice);
        return;
    }
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
    state.money = currentMoney - price;
    updateMoneyDisplay();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥—É–ª—å –≤ –Ω—É–∂–Ω–æ–µ –º–µ—Å—Ç–æ
    const newModule = {
        id: generateId('vehicleModule'),
        name: name,
        description: description,
        price: price,
        category: category,
        requirements: requirements,
        catalogPrice: catalogPrice,
        purchasePrice: price,
        itemType: catalogPrice ? 'free_catalog' : 'purchased',
        moduleType: 'vehicle_module'
    };
    
    if (targetVehicle.linkedGearId) {
        // –î–ª—è –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
        state.gear.push(newModule);
        renderGear();
        showToast(`${name} –∫—É–ø–ª–µ–Ω –∏ –ø–æ–º–µ—â–µ–Ω –≤ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ!`, 2000);
    } else {
        // –î–ª—è –æ–±—ã—á–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–≥–∞–∂–Ω–∏–∫
        if (!targetVehicle.trunk) {
            targetVehicle.trunk = [];
        }
        targetVehicle.trunk.push(newModule);
        renderTransport();
        showToast(`${name} –∫—É–ø–ª–µ–Ω –∏ –ø–æ–º–µ—â–µ–Ω –≤ –±–∞–≥–∞–∂–Ω–∏–∫ ${targetVehicle.name}!`, 2000);
    }
    
    scheduleSave();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ª–æ–≥
    addToRollLog('purchase', {
        item: name,
        price: price,
        category: '–ú–æ–¥—É–ª—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞'
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –±–∞–≥–∞–∂–Ω–∏–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –º–æ–¥—É–ª—è
function showVehicleTrunkSelection(name, description, price, category, requirementsStr, catalogPrice) {
    document.body.style.overflow = 'hidden';
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10001;
    `;
    
    modal.innerHTML = `
        <div class="modal" style="max-width: 500px; width: 90%;">
            <div class="modal-header">
                <h3>–í—ã–±–µ—Ä–∏—Ç–µ –±–∞–≥–∞–∂–Ω–∏–∫ –¥–ª—è –º–æ–¥—É–ª—è</h3>
                <button class="icon-button" onclick="closeModal(this)">√ó</button>
            </div>
            <div class="modal-body">
                <p style="color: var(--text); margin-bottom: 1rem;">
                    –ú–æ–¥—É–ª—å <strong>${name}</strong> –±—É–¥–µ—Ç –ø–æ–º–µ—â–µ–Ω –≤ –±–∞–≥–∞–∂–Ω–∏–∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞.
                </p>
                <div style="display: grid; gap: 0.5rem;">
                    ${state.property.vehicles.map(vehicle => `
                        <button onclick="confirmVehicleModulePurchase('${vehicle.id}', '${name}', '${description.replace(/'/g, "\\'")}', ${price}, '${category}', '${requirementsStr}', ${catalogPrice})" style="background: rgba(182, 103, 255, 0.1); border: 1px solid var(--accent); border-radius: 8px; padding: 0.75rem; cursor: pointer; transition: all 0.2s ease; text-align: left; color: var(--text);">
                            <div style="font-weight: 500; margin-bottom: 0.25rem;">${vehicle.name}</div>
                            <div style="font-size: 0.8rem; color: var(--muted);">
                                –ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –±–∞–≥–∞–∂–Ω–∏–∫–µ: ${vehicle.trunk ? vehicle.trunk.length : 0}
                            </div>
                        </button>
                    `).join('')}
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.remove();
            document.body.style.overflow = '';
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ –º–æ–¥—É–ª—è –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –±–∞–≥–∞–∂–Ω–∏–∫
function confirmVehicleModulePurchase(vehicleId, name, description, price, category, requirementsStr, catalogPrice) {
    const vehicle = state.property.vehicles.find(v => v.id === vehicleId);
    if (!vehicle) {
        showToast('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 2000);
        return;
    }
    
    const currentMoney = parseInt(state.money) || 0;
    const requirements = JSON.parse(requirementsStr);
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
    state.money = currentMoney - price;
    updateMoneyDisplay();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥—É–ª—å –≤ –±–∞–≥–∞–∂–Ω–∏–∫ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    const newModule = {
        id: generateId('vehicleModule'),
        name: name,
        description: description,
        price: price,
        category: category,
        requirements: requirements,
        catalogPrice: catalogPrice,
        purchasePrice: price,
        itemType: catalogPrice ? 'free_catalog' : 'purchased',
        moduleType: 'vehicle_module'
    };
    
    vehicle.trunk.push(newModule);
    renderTransport();
    scheduleSave();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ª–æ–≥
    addToRollLog('purchase', {
        item: name,
        price: price,
        category: '–ú–æ–¥—É–ª—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞'
    });
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª –≤—ã–±–æ—Ä–∞
    const selectModal = document.querySelector('.modal-overlay:last-child');
    if (selectModal) {
        selectModal.remove();
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º toast-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast(`${name} –∫—É–ø–ª–µ–Ω –∏ –ø–æ–º–µ—â–µ–Ω –≤ –±–∞–≥–∞–∂–Ω–∏–∫ ${vehicle.name}!`, 2000);
}

// –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã - –æ–Ω–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ vehicles.js

// –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã - –æ–Ω–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ vehicles.js

// –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞ - –æ–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ vehicles.js

function confirmInstallVehicleModule(vehicleId, moduleId, installCost) {
    const vehicle = state.property.vehicles.find(v => v.id === vehicleId);
    const moduleItem = vehicle.trunk.find(m => m.id === moduleId);
    
    if (!vehicle || !moduleItem) return;
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if (installCost > 0) {
        state.money = parseInt(state.money) - installCost;
        updateMoneyDisplay();
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∑–∞–∏–º–æ–∏—Å–∫–ª—é—á–∞—é—â–∏–µ –º–æ–¥—É–ª–∏ –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π
    if (moduleItem.name === '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞') {
        const hasBodyReinforcement = vehicle.modules.some(m => m.name === '–£—Å–∏–ª–µ–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞');
        if (hasBodyReinforcement) {
            showModal('–ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ –º–æ–¥—É–ª–∏', `
                <div style="text-align: center; padding: 1rem;">
                    <p style="color: var(--danger); font-size: 1.1rem; margin-bottom: 1rem;">–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å!</p>
                    <p style="color: var(--muted);">–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞ –Ω–µ–ª—å–∑—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–º–µ—Å—Ç–µ —Å –£—Å–∏–ª–µ–Ω–∏–µ–º –∫–æ—Ä–ø—É—Å–∞</p>
                </div>
            `);
            return;
        }
    }
    
    if (moduleItem.name === '–£—Å–∏–ª–µ–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞') {
        const hasBodyArmoring = vehicle.modules.some(m => m.name === '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞');
        if (hasBodyArmoring) {
            showModal('–ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ –º–æ–¥—É–ª–∏', `
                <div style="text-align: center; padding: 1rem;">
                    <p style="color: var(--danger); font-size: 1.1rem; margin-bottom: 1rem;">–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å!</p>
                    <p style="color: var(--muted);">–£—Å–∏–ª–µ–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞ –Ω–µ–ª—å–∑—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–º–µ—Å—Ç–µ —Å –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∫–æ—Ä–ø—É—Å–∞</p>
                </div>
            `);
            return;
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–∏–¥–µ–Ω–∏–π
    if (moduleItem.name === '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–¥–µ–Ω—å—è') {
        const seatsCount = vehicle.modules.filter(m => m.name === '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–¥–µ–Ω—å—è').length;
        if (seatsCount >= 3) {
            showModal('–õ–∏–º–∏—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç', `
                <div style="text-align: center; padding: 1rem;">
                    <p style="color: var(--danger); font-size: 1.1rem; margin-bottom: 1rem;">–ù–µ–ª—å–∑—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ–ª—å—à–µ!</p>
                    <p style="color: var(--muted);">–ú–∞–∫—Å–∏–º—É–º –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å 3 –º–æ–¥—É–ª—è "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–¥–µ–Ω—å—è"</p>
                </div>
            `);
            return;
        }
    }
    
    // –î–ª—è —Ñ–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–≤–∏–≥–∞—Ç–µ–ª–µ–π - –∑–∞–º–µ–Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç–∞–¥–∏–∏
    if (moduleItem.name === '–§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–≤–∏–≥–∞—Ç–µ–ª—å (–°—Ç–∞–¥–∏—è 2)') {
        const stage1Index = vehicle.modules.findIndex(m => m.name === '–§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–≤–∏–≥–∞—Ç–µ–ª—å (–°—Ç–∞–¥–∏—è 1)');
        if (stage1Index !== -1) {
            vehicle.modules.splice(stage1Index, 1);
        }
    }
    
    if (moduleItem.name === '–§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–≤–∏–≥–∞—Ç–µ–ª—å (–°—Ç–∞–¥–∏—è 3)') {
        const stage2Index = vehicle.modules.findIndex(m => m.name === '–§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–≤–∏–≥–∞—Ç–µ–ª—å (–°—Ç–∞–¥–∏—è 2)');
        if (stage2Index !== -1) {
            vehicle.modules.splice(stage2Index, 1);
        }
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–¥—É–ª—å
    vehicle.modules.push({
        name: moduleItem.name,
        description: moduleItem.description,
        price: moduleItem.price
    });
    
    // –£–¥–∞–ª—è–µ–º –º–æ–¥—É–ª—å –∏–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞
    vehicle.trunk = vehicle.trunk.filter(m => m.id !== moduleId);
    
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    if (typeof recalculateVehicleStats === 'function') {
        recalculateVehicleStats(vehicleId);
    }
    
    renderTransport();
    renderGear();
    scheduleSave();
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–ø–ª–∞—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ –æ—Ç–∫—Ä—ã—Ç–æ
    if (installCost > 0) {
        // –ù–∞—Ö–æ–¥–∏–º –∏ —É–¥–∞–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–ø–ª–∞—Ç—ã
        const paymentModals = document.querySelectorAll('.modal-overlay');
        paymentModals.forEach(modal => {
            const modalText = modal.textContent || '';
            if (modalText.includes('–û–ø–ª–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏') || modalText.includes('–û–ø–ª–∞—Ç–∏—Ç—å –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å')) {
                modal.remove();
            }
        });
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–¥–∞–ª–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥—É–ª—è–º–∏
    const modal = document.querySelector('.modal-overlay[data-vehicle-modules-modal]');
    if (modal) {
        updateVehicleModulesModalContent(modal, vehicleId);
    }
    
    // –õ–æ–≥–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    if (installCost > 0) {
        console.log(`‚úÖ ${moduleItem.name} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –°–ø–∏—Å–∞–Ω–æ ${installCost} —É–µ –∑–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É`);
    } else {
        console.log(`‚úÖ ${moduleItem.name} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –±–µ—Å–ø–ª–∞—Ç–Ω–æ!`);
    }
}

function removeVehicleModule(vehicleId, moduleIndex) {
    const vehicle = state.property.vehicles.find(v => v.id === vehicleId);
    if (!vehicle) return;
    
    const module = vehicle.modules[moduleIndex];
    if (!module) return;
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–¥—É–ª—å –≤ –±–∞–≥–∞–∂–Ω–∏–∫
    vehicle.trunk.push({
        id: generateId('vehicleModule'),
        name: module.name,
        description: module.description,
        price: module.price,
        category: vehicle.category,
        requirements: [],
        moduleType: 'vehicle_module'
    });
    
    // –£–¥–∞–ª—è–µ–º –º–æ–¥—É–ª—å –∏–∑ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    vehicle.modules.splice(moduleIndex, 1);
    
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    if (typeof recalculateVehicleStats === 'function') {
        recalculateVehicleStats(vehicleId);
    }
    
    renderTransport();
    scheduleSave();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–¥–∞–ª–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥—É–ª—è–º–∏
    const modal = document.querySelector('.modal-overlay[data-vehicle-modules-modal]');
    if (modal) {
        updateVehicleModulesModalContent(modal, vehicleId);
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º toast-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showToast(`${module.name} –≤–æ–∑–≤—Ä–∞—â—ë–Ω –≤ –±–∞–≥–∞–∂–Ω–∏–∫`, 2000);
}

console.log('√¢≈ì‚Ä¶ shops.js √ê¬∑√ê¬∞√ê¬≥√ë‚Ç¨√ë∆í√ê¬∂√ê¬µ√ê¬Ω - √ê¬≤√ë¬Å√ê¬µ √ê¬º√ê¬∞√ê¬≥√ê¬∞√ê¬∑√ê¬∏√ê¬Ω√ë‚Äπ √ê¬≥√ê¬æ√ë‚Äö√ê¬æ√ê¬≤√ë‚Äπ');

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∂–∏–ª—å—è (–∫–æ–ø–∏—è –∏–∑ deck.js –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
function renderHousing() {
    const container = document.getElementById('housingContainer');
    if (!container) return;
    
    if (state.property.housing.length === 0) {
        container.innerHTML = '<p style="color: var(--muted); text-align: center; padding: 1rem;">–ñ–∏–ª—å–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ</p>';
        return;
    }
    
    container.innerHTML = state.property.housing.map((housing, index) => `
        <div class="property-item" style="background: rgba(182, 103, 255, 0.1); border: 1px solid var(--accent); border-radius: 8px; padding: 1rem; margin-bottom: 1rem;">
            <div class="property-header" style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.5rem;">
                <div class="property-name" style="cursor: pointer; color: var(--accent); font-weight: 600; font-size: 1rem;" onclick="toggleHousingDescription(${index})" title="–ö–ª–∏–∫–Ω–∏—Ç–µ, —á—Ç–æ–±—ã —Å–≤–µ—Ä–Ω—É—Ç—å/—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ">${housing.name}</div>
                <div style="display: flex; gap: 0.5rem; align-items: center;">
                    ${housing.rentPrice > 0 && !housing.isOwned ? `
                        <button onclick="payHousingRent(${index})" title="–û–ø–ª–∞—Ç–∏—Ç—å –∞—Ä–µ–Ω–¥—É (${housing.rentPrice.toLocaleString()} —É–µ)" style="background: none; border: none; cursor: pointer; padding: 0;">
                            <img src="https://static.tildacdn.com/tild6363-3833-4263-a639-623835363566/money_1.png" style="width: 16px; height: 16px;">
                        </button>
                    ` : ''}
                    <button onclick="evictFromHousing(${index})" title="–í—ã—Å–µ–ª–∏—Ç—å—Å—è –∏–∑ –∂–∏–ª—å—è" style="background: none; border: none; cursor: pointer; padding: 0;">
                        <img src="https://static.tildacdn.com/tild6365-3138-4434-b034-343265643662/exit.png" style="width: 16px; height: 16px;">
                    </button>
                </div>
            </div>
            <div id="housing-description-${index}" class="property-description" style="display: ${getCollapsedDisplayStyle('housing', index)}; color: var(--text); font-size: 0.9rem; margin: 0.5rem 0; line-height: 1.4;">${housing.description || '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}</div>
            <div class="property-details">
                <div class="property-detail">
                    <span class="detail-label">–ü–ª–æ—â–∞–¥—å:</span>
                    <span class="detail-value">${housing.area}</span>
                </div>
                <div class="property-detail">
                    <span class="detail-label">–¢–∏–ø:</span>
                    <span class="detail-value">${housing.type === 'apartment' ? '–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã' : housing.type === 'owned' ? '–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞' : housing.type === 'penthouse' ? '–ü–µ–Ω—Ç—Ö–∞—É—Å' : housing.type === 'house' ? '–ß–∞—Å—Ç–Ω—ã–π –¥–æ–º' : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</span>
                </div>
                ${housing.isOwned ? `
                <div class="property-detail">
                    <span class="detail-label">–°—Ç–∞—Ç—É—Å:</span>
                    <span class="detail-value" style="color: ${housing.isOwned ? 'var(--success)' : '#3b82f6'};">${housing.isOwned ? '–í —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏' : '–í –∞—Ä–µ–Ω–¥–µ'}</span>
                </div>
                    ${housing.purchasePrice > 0 ? `
                        <div class="property-detail">
                            <span class="detail-label">–¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏:</span>
                            <span class="detail-value">${housing.purchasePrice.toLocaleString()} —É–µ</span>
                        </div>
                    ` : ''}
                ` : `
                    <div class="property-detail">
                        <span class="detail-label">–°—Ç–∞—Ç—É—Å:</span>
                        <span class="detail-value" style="color: #3b82f6;">–ê—Ä–µ–Ω–¥–∞</span>
                    </div>
                    <div class="property-detail">
                        <span class="detail-label">–ê—Ä–µ–Ω–¥–∞:</span>
                        <span class="detail-value">${housing.rentPrice.toLocaleString()} —É–µ/–º–µ—Å</span>
                    </div>
                `}
            </div>
        </div>
    `).join('');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –∂–∏–ª—å—è
function toggleHousingDescription(index) {
    const descriptionElement = document.getElementById(`housing-description-${index}`);
    if (descriptionElement) {
        const isCollapsed = toggleCollapsedItem('housing', index);
        descriptionElement.style.display = isCollapsed ? 'none' : 'block';
    }
}

// –§—É–Ω–∫—Ü–∏—è –≤—ã—Å–µ–ª–µ–Ω–∏—è –∏–∑ –∂–∏–ª—å—è
function evictFromHousing(index) {
    if (!state.property || !state.property.housing || index >= state.property.housing.length) {
        showToast('–û—à–∏–±–∫–∞: –∂–∏–ª—å–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ', 3000);
        return;
    }
    
    const housing = state.property.housing[index];
    const housingName = housing.name;
    
    // –£–¥–∞–ª—è–µ–º –∂–∏–ª—å–µ –∏–∑ —Å–ø–∏—Å–∫–∞
    state.property.housing.splice(index, 1);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    renderHousing();
    updateUIFromState();
    scheduleSave();
    
    showToast(`–í—ã—Å–µ–ª–∏–ª–∏—Å—å –∏–∑ "${housingName}"`, 3000);
    console.log(`[EVICT] –í—ã—Å–µ–ª–∏–ª–∏—Å—å –∏–∑ –∂–∏–ª—å—è: ${housingName}`);
}

// –§—É–Ω–∫—Ü–∏—è –æ–ø–ª–∞—Ç—ã –∞—Ä–µ–Ω–¥—ã –∂–∏–ª—å—è
function payHousingRent(index) {
    if (!state.property || !state.property.housing || index >= state.property.housing.length) {
        showToast('–û—à–∏–±–∫–∞: –∂–∏–ª—å–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ', 3000);
        return;
    }
    
    const housing = state.property.housing[index];
    
    if (housing.isOwned) {
        showToast('–≠—Ç–æ –∂–∏–ª—å–µ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏, –∞—Ä–µ–Ω–¥–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è', 3000);
        return;
    }
    
    const rentAmount = housing.rentPrice;
    if (state.money < rentAmount) {
        showToast(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –æ–ø–ª–∞—Ç—ã –∞—Ä–µ–Ω–¥—ã. –ù—É–∂–Ω–æ: ${rentAmount.toLocaleString()} —É–µ`, 3000);
        return;
    }
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏ –∑–∞ –∞—Ä–µ–Ω–¥—É
    state.money -= rentAmount;
    updateMoneyDisplay();
    
    // –õ–æ–≥–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é
    addToRollLog('rent', { 
        item: housing.name, 
        price: rentAmount, 
        category: '–ê—Ä–µ–Ω–¥–∞ –∂–∏–ª—å—è' 
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    renderHousing();
    updateUIFromState();
    scheduleSave();
    
    showToast(`–û–ø–ª–∞—á–µ–Ω–∞ –∞—Ä–µ–Ω–¥–∞ "${housing.name}" –∑–∞ ${rentAmount.toLocaleString()} —É–µ`, 3000);
    console.log(`[RENT] –û–ø–ª–∞—á–µ–Ω–∞ –∞—Ä–µ–Ω–¥–∞ –∂–∏–ª—å—è: ${housing.name} –∑–∞ ${rentAmount} —É–µ`);
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –Ω–∞–≤—ã–∫–∞ (–∫–æ–ø–∏—è –∏–∑ deck.js –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
function getProfessionalSkillLevel(skillName) {
    if (!state.professionalSkills) return 0;
    const skill = state.professionalSkills.find(s => s && s.name === skillName);
    console.log(`getProfessionalSkillLevel(${skillName}):`, skill);
    return skill && skill.level ? parseInt(skill.level) : 0;
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ (–∫–æ–ø–∏—è –∏–∑ deck.js –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
function renderCommercialProperty() {
    const container = document.getElementById('commercialPropertyContainer');
    if (!container) return;
    
    if (state.property.commercialProperty.length === 0) {
        container.innerHTML = '<p style="color: var(--muted); text-align: center; padding: 1rem;">–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞</p>';
        return;
    }
    
    container.innerHTML = state.property.commercialProperty.map((property, index) => `
        <div class="property-item" style="background: rgba(182, 103, 255, 0.1); border: 1px solid var(--accent); border-radius: 8px; padding: 1rem; margin-bottom: 1rem;">
            <div class="property-header" style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.5rem;">
                <div class="property-name" onclick="toggleCommercialPropertyDescription(${index})" style="color: var(--accent); font-weight: 600; font-size: 1rem; cursor: pointer; user-select: none;">${property.name}</div>
                <div style="display: flex; gap: 0.5rem; align-items: center;">
                    <button onclick="payCommercialPropertyRent(${index})" title="–û–ø–ª–∞—Ç–∏—Ç—å –∞—Ä–µ–Ω–¥—É (${property.rentPrice.toLocaleString()} —É–µ)" style="background: none; border: none; cursor: pointer; padding: 0;">
                        <img src="https://static.tildacdn.com/tild6363-3833-4263-a639-623835363566/money_1.png" style="width: 16px; height: 16px;">
                    </button>
                    <button onclick="evictFromCommercialProperty(${index})" title="–í—ã—Å–µ–ª–∏—Ç—å—Å—è –∏–∑ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏" style="background: none; border: none; cursor: pointer; padding: 0;">
                        <img src="https://static.tildacdn.com/tild6365-3138-4434-b034-343265643662/exit.png" style="width: 16px; height: 16px;">
                    </button>
                </div>
            </div>
            <div class="commercial-property-content" id="commercial-property-content-${index}" style="display: ${getCollapsedDisplayStyle('commercialProperty', index)};">
                ${property.description ? `<div class="property-description">${property.description}</div>` : ''}
                <div class="property-details">
                    <div class="property-detail">
                        <span class="detail-label">–ü–ª–æ—â–∞–¥—å:</span>
                        <span class="detail-value">${property.area}</span>
                    </div>
                    <div class="property-detail">
                        <span class="detail-label">–ê—Ä–µ–Ω–¥–∞:</span>
                        <span class="detail-value">${property.rentPrice.toLocaleString()} —É–µ/—Å—É—Ç–∫–∏</span>
                    </div>
                    <div class="property-detail">
                        <span class="detail-label">–°—Ç–∞—Ç—É—Å:</span>
                        <span class="detail-value" style="color: #3b82f6;">–ê—Ä–µ–Ω–¥–∞</span>
                    </div>
                    <div class="property-detail" style="margin-top: 0.5rem;">
                        <button class="pill-button success-button" onclick="payCommercialPropertyRent(${index})" style="font-size: 0.8rem; padding: 0.3rem 0.6rem;">
                            –û–ø–ª–∞—Ç–∏—Ç—å –∞—Ä–µ–Ω–¥—É (${property.rentPrice.toLocaleString()} —É–µ)
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `).join('');
}

// –§—É–Ω–∫—Ü–∏—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
function toggleCommercialPropertyDescription(index) {
    const content = document.getElementById(`commercial-property-content-${index}`);
    if (content) {
        const isCollapsed = toggleCollapsedItem('commercialProperty', index);
        content.style.display = isCollapsed ? 'none' : 'block'; 
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ–ø–ª–∞—Ç—ã –∞—Ä–µ–Ω–¥—ã –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
function payCommercialPropertyRent(index) {
    if (!state.property || !state.property.commercialProperty || index >= state.property.commercialProperty.length) {
        showToast('–û—à–∏–±–∫–∞: –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞', 3000);
        return;
    }
    
    const property = state.property.commercialProperty[index];
    const rentAmount = property.rentPrice;
    
    if (state.money < rentAmount) {
        showToast(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –æ–ø–ª–∞—Ç—ã –∞—Ä–µ–Ω–¥—ã. –ù—É–∂–Ω–æ: ${rentAmount.toLocaleString()} —É–µ`, 3000);
        return;
    }
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏ –∑–∞ –∞—Ä–µ–Ω–¥—É
    state.money -= rentAmount;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    updateMoneyDisplay();
    scheduleSave();
    
    showToast(`–û–ø–ª–∞—Ç–∏–ª–∏ –∞—Ä–µ–Ω–¥—É "${property.name}" –Ω–∞ —Å—É–º–º—É ${rentAmount.toLocaleString()} —É–µ`, 3000);
    addToRollLog('rent_payment', { item: property.name, price: rentAmount, category: '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å (–∞—Ä–µ–Ω–¥–∞)' });
    console.log(`[RENT] –û–ø–ª–∞—Ç–∏–ª–∏ –∞—Ä–µ–Ω–¥—É –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏: ${property.name}, —Å—É–º–º–∞: ${rentAmount} —É–µ`);
}

// –§—É–Ω–∫—Ü–∏—è –≤—ã—Å–µ–ª–µ–Ω–∏—è –∏–∑ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
function evictFromCommercialProperty(index) {
    if (!state.property || !state.property.commercialProperty || index >= state.property.commercialProperty.length) {
        showToast('–û—à–∏–±–∫–∞: –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞', 3000);
        return;
    }
    
    const property = state.property.commercialProperty[index];
    const propertyName = property.name;
    
    // –£–¥–∞–ª—è–µ–º –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞
    state.property.commercialProperty.splice(index, 1);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    renderCommercialProperty();
    updateUIFromState();
    scheduleSave();
    
    showToast(`–í—ã—Å–µ–ª–∏–ª–∏—Å—å –∏–∑ "${propertyName}"`, 3000);
    console.log(`[EVICT] –í—ã—Å–µ–ª–∏–ª–∏—Å—å –∏–∑ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏: ${propertyName}`);
}

// ============================================================================
// –ó–ê–ì–õ–£–®–ö–ò –§–£–ù–ö–¶–ò–ô –î–õ–Ø –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò
// –≠—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –≤ deck.js –ø–æ—Å–ª–µ –µ–≥–æ –∑–∞–≥—Ä—É–∑–∫–∏
// ============================================================================

console.log('‚úÖ shops.js –∑–∞–≥—Ä—É–∂–µ–Ω - –≤—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã –≥–æ—Ç–æ–≤—ã');